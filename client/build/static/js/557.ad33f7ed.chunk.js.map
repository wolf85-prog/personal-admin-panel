{"version":3,"file":"static/js/557.ad33f7ed.chunk.js","mappings":"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","sources":["views/widgets/WidgetsDropdown.js","components/Chart2.js","pages/Admin.js"],"sourcesContent":["import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilOptions } from '@coreui/icons'\n\nconst WidgetsDropdown = ({users, projects, companys}) => {\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              {users} {/*{' '}\n               <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title=\"Заказчики\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              {projects} \n              {/* <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title=\"Проекты\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              {companys}{' '}\n              {/* <span className=\"fs-6 fw-normal\">\n                (84.7% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title=\"Компании\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              {companys}{' '}\n              {/* 44{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-23.6% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title=\"Часы [за год]\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Посмотреть</CDropdownItem>\n                <CDropdownItem>Обновить</CDropdownItem>\n                <CDropdownItem disabled>Другое</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n","import React from 'react';\nimport * as d3 from \"d3\";\n\nconst Chart2 = ({ data, data2, width, height, range }) => {\n  const [activeIndex, setActiveIndex] = React.useState(null);\n\n  const scaleColor = d3.scaleSequential(d3.interpolateViridis);\n  const scaleHeight = d3.scaleLinear();\n  const scaleWidth = d3.scaleBand().padding(0.1);\n  \n  const getX = d3.scaleBand()\n    .domain(data.map(item => item.name))\n    .range([0, width]);\n\n  const getY = d3.scaleLinear()\n    .domain([0, range])\n    .range([height, 0]);\n  \n  const getYAxis = ref => {\n    const yAxis = d3.axisLeft(getY)\n      .tickSize(-width)\n      .tickPadding(7);\n    d3.select(ref).call(yAxis);\n  };\n\n  const getXAxis = ref => {\n    const xAxis = d3.axisBottom(getX);\n    d3.select(ref).call(xAxis);\n  };\n\n  // const linePath = d3.line()\n  //   .x(d => getX(d.name) + getX.bandwidth() / 2)\n  //   .y(d => getY(d.value))\n  //   .curve(d3.curveMonotoneX)(data)\n\n  // const linePath2 = d3.line()\n  //   .x(d => getX(d.name) + getX.bandwidth() / 2)\n  //   .y(d => getY(d.value))\n  //   .curve(d3.curveMonotoneX)(data2)\n\n  const areaPath = d3.area()\n    .x(d => getX(d.name) + getX.bandwidth() / 2)\n    .y0(d => getY(d.value))\n    .y1(() => getY(0))\n    .curve(d3.curveMonotoneX)(data);\n\n  const handleMouseMove = (e) => {\n    const x = e.nativeEvent.offsetX;\n    const index = Math.floor(x / getX.step());\n    setActiveIndex(index);\n  };\n\n  const handleMouseLeave = () => {\n    setActiveIndex(null);\n  };\n  \n  return (\n    <div className=\"wrapper-chart\">\n      <svg\n        className=\"svg\"\n        width={width}\n        height={height}\n        onMouseMove={handleMouseMove}\n        onMouseLeave={handleMouseLeave}\n      >\n        {/* ось y */}\n        {/* <g className=\"axis\" ref={getYAxis} /> */}\n\n        {/* ось x */}\n        <g\n          className=\"axis xAxis\"\n          ref={getXAxis}\n          transform={`translate(0,${getY(0)})`}\n        />\n        <path\n          fill=\"#4b0082\"\n          d={areaPath}\n          opacity={0}\n        />\n\n        {/* {data.map((item, index) => {\n          return (\n            <g key={index}>\n              <circle\n                cx={getX(item.name) + getX.bandwidth() / 2}\n                cy={getY(item.value)}\n                r={index === activeIndex ? 6 : 4}\n                fill=\"#7cb5ec\"\n                strokeWidth={index === activeIndex ? 2 : 0}\n                stroke=\"#fff\"\n                style={{ transition: `ease-out .1s` }}\n              />\n              <text\n                fill=\"#fff\"\n                x={getX(item.name) + getX.bandwidth() / 2}\n                y={getY(item.value) - 10}\n                textAnchor=\"middle\"\n              >\n                {item.value}\n              </text>\n            </g>\n          );\n        })}\n        {data2.map((item, index) => {\n          return (\n            <g key={index}>\n              <circle\n                cx={getX(item.name) + getX.bandwidth() / 2}\n                cy={getY(item.value)}\n                r={index === activeIndex ? 6 : 4}\n                fill=\"#7cb5ec\"\n                strokeWidth={index === activeIndex ? 2 : 0}\n                stroke=\"#fff\"\n                style={{ transition: `ease-out .1s` }}\n              />\n              <text\n                fill=\"#fff\"\n                x={getX(item.name) + getX.bandwidth() / 2}\n                y={getY(item.value) - 10}\n                textAnchor=\"middle\"\n              >\n                {item.value}\n              </text>\n            </g>\n          );\n        })} */}\n        { data.map((item, index) => {\n          return (\n            <g key={index}>\n              <rect key={index}\n                width={40}\n                height={height - getY(item.value)}\n                x={getX(item.name) + getX.bandwidth() / 2 - 20}\n                y={getY(item.value)}\n                fill='#4b0082'\n                rx=\"2\" ry=\"2\"\n              />\n              <text\n                fill=\"#fff\"\n                x={getX(item.name) + getX.bandwidth() / 2}\n                y={getY(item.value) - 10}\n                textAnchor=\"middle\"\n              >\n                {item.value ? item.value : ''}\n              </text>\n            </g>\n          );\n        })}\n\n      </svg>\n    </div>\n  );\n};\n\n\nexport default Chart2","import React, { Suspense, useState, useEffect, useRef } from 'react'\nimport { CContainer, CSpinner } from '@coreui/react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport {\n  CAvatar,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CFormInput,\n  CButton,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CCollapse,\n  CToast,\n  CToastBody,\n  CToastClose,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilPeople, cilX,\n} from '@coreui/icons'\n\nimport {\n  CWidgetStatsA,\n} from '@coreui/react'\n\nimport avatar2 from 'src/assets/images/avatars/blank-avatar.png'\nimport arrowDown from 'src/assets/images/arrowDown.svg'\nimport arrowUp from 'src/assets/images/ArrowUp.png'\n\nimport { useUsersContext } from \"./../chat-app-new/context/usersContext\";\n\nimport WidgetsBrand from '../views/widgets/WidgetsBrand'\nimport WidgetsDropdown from '../views/widgets/WidgetsDropdown'\nimport WidgetsDropdown2 from '../views/widgets/WidgetsDropdown2'\nimport WidgetsDropdown3 from '../views/widgets/WidgetsDropdown3'\nimport WidgetsDropdown4 from '../views/widgets/WidgetsDropdown4'\nimport WidgetsDropdown5 from '../views/widgets/WidgetsDropdown5'\nimport WidgetsDropdown6 from '../views/widgets/WidgetsDropdown6'\n\nimport InputMask from 'react-input-mask';\n\nimport Chart from './../components/Chart'\nimport ChartBar from './../components/Chart2'\n\nconst Admin = () => {\n\n  const grafik = useRef(null);\n\n  const { users: clients } = useUsersContext();\n  const { managers: zakazchiki } = useUsersContext();\n  const { projects: projs } = useUsersContext();\n  const { companys: comps } = useUsersContext();\n  const { userWorkers: specusers } = useUsersContext();\n  const { workersAll, workers, setWorkers, managers, setManagers } = useUsersContext();\n\n  const [contacts, setContacts] = useState([]);\n  const [contacts2, setContacts2] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [newClients, setNewClients] = useState([]);\n  const [oldClients, setOldClients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loading2, setLoading2] = useState(true);\n  const [loading3, setLoading3] = useState(true);\n  const [loading4, setLoading4] = useState(true);\n  \n  const [sortWorkers, setSortWorkers] = useState([]);\n  const [newWorkers, setNewWorkers] = useState([]);\n  const [activWorkers, setActivWorkers] = useState([]);\n  const [delWorkers, setDelWorkers] = useState([]);\n\n  const [sortDelWorkers, setSortDelWorkers] = useState([]);\n\n  const [sortWorkers2, setSortWorkers2] = useState([]);\n  const [newWorkers2, setNewWorkers2] = useState([]);\n  const [activWorkers2, setActivWorkers2]= useState([]);\n  const [delWorkers2, setDelWorkers2]= useState([]);\n\n  const [catCount, setCatCount] = useState([])\n\n  const [dayWorkers, setDayWorkers]= useState([]);\n  const [weekWorkers, setWeekWorkers]= useState([]);\n  const [monthWorkers, setMonthWorkers]= useState([]);\n  const [yearWorkers, setYearWorkers]= useState([]);\n  const [periodWorkers, setPeriodWorkers]= useState([]);\n\n  const [showRenthub, setShowRenthub]= useState(false);\n  const [showRenthub2, setShowRenthub2]= useState(false);\n  const [showWorkhub, setShowWorkhub]= useState(true);\n  const [showDeleted, setShowDeleted]= useState(false);\n\n  const [activeKey, setActiveKey] = useState(2)\n\n  const [showWidget, setShowWidget] = useState(false)\n  const [showWidget2, setShowWidget2] = useState(true)\n  const [showWidget3, setShowWidget3] = useState(false)\n  const [showWidget4, setShowWidget4] = useState(false)\n  const [showWidget5, setShowWidget5] = useState(false)\n  const [showWidget6, setShowWidget6] = useState(false)\n\n  const [showCharts, setShowCharts]= useState(false);\n  const [showCharts2, setShowCharts2]= useState(false);\n  const [showCharts3, setShowCharts3]= useState(false);\n  const [showCharts4, setShowCharts4]= useState(false);\n  const [showCharts5, setShowCharts5]= useState(false);\n\n  const [showCountAll, setShowCountAll] = useState(false);\n  const [showNick, setShowNick]= useState(false);\n\n  const [tabhub, setTabhub]= useState('');\n\n  const [periodDate1, setPeriodDate1] = useState(\"\")\n  const [periodDate2, setPeriodDate2] = useState(\"\")\n\n  const [startWeek, setStartWeek] = useState(\"\")\n  const [timerId, setTimerId] = useState()\n  const [widthGrafik, setWdthGrafik] = useState(0);\n  const [text, setText]= useState(\"\");\n  const [textDelete, setTextDelete]= useState(\"\");\n  const [showTable, setShowTable] = useState([])\n\n  const chatAdminId = process.env.REACT_APP_CHAT_ADMIN_ID\n  const host = process.env.REACT_APP_API_URL\n  \n  \n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader tabs={tabhub}/>\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n              <Suspense fallback={<CSpinner color=\"primary\" />}>\n\n              <>\n                <img src={arrowUp} alt='' style={{position: 'absolute', top: '120px', right: '0', zIndex: '100', width: '100px'}}/>\n                \n                <WidgetsDropdown/>\n\n                <CCard className='rounded-bottom' style={{borderRadius: '0px', borderColor: '#131c21', borderTopRightRadius: '0.375rem'}}>\n\n{/*---------------------------------------- Renthub ------------------------------------  */} \n                  <CCardBody id=\"Renthub\">\n                    <CRow>\n                      <CCol xs>\n                        <CCard className=\"mb-4\">\n                          <CCardHeader style={{textAlign: 'left'}}>Пользователи бота ({clients.length - 1})</CCardHeader>\n                          <CCardBody>\n                            <CRow>\n                              <CCol xs={12} md={6} xl={6}>\n                                <CRow>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                                      <div className=\"text-medium-emphasis small\">Новые клиенты</div>\n                                      <div className=\"fs-5 fw-semibold\">{newClients.length}</div>\n                                    </div>\n                                  </CCol>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                                      <div className=\"text-medium-emphasis small\">Постоянные клиенты</div>\n                                      <div className=\"fs-5 fw-semibold\">{oldClients.length-1}</div>\n                                    </div>\n                                  </CCol>\n                                </CRow>\n                              </CCol>\n\n                              <CCol xs={12} md={6} xl={6}>\n                                <CRow>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                                      <div className=\"text-medium-emphasis small\">Просмотры</div>\n                                      <div className=\"fs-5 fw-semibold\">-</div>\n                                    </div>\n                                  </CCol>\n                                  <CCol sm={6}>\n                                    <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                                      <div className=\"text-medium-emphasis small\">Другое</div>\n                                      <div className=\"fs-5 fw-semibold\">-</div>\n                                    </div>\n                                  </CCol>\n                                </CRow>\n\n                                <div className=\"mb-5\"></div>\n\n                              </CCol>\n                            </CRow>\n\n\n                            <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                              <CTableHead className='table-dark'>\n                                <CTableRow>\n                                  <CTableHeaderCell style={{width: '30px'}}>№</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>\n                                    <CIcon icon={cilPeople} />\n                                  </CTableHeaderCell>\n                                  <CTableHeaderCell style={{width: '160px'}}>Пользователь</CTableHeaderCell>                             \n                                  <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Организация</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '160px'}}>Телефон</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '80px'}}>Город</CTableHeaderCell>\n                                  <CTableHeaderCell className=\"text-center\" style={{width: '100px'}}>TG ID</CTableHeaderCell>\n                                  <CTableHeaderCell style={{width: '100px'}}>Использование</CTableHeaderCell>\n                                  <CTableHeaderCell style={{width: '100px'}}>Активность</CTableHeaderCell>\n                                </CTableRow>\n                              </CTableHead>\n                              <CTableBody>\n                                \n                              </CTableBody>\n                            </CTable>\n                          \n                          </CCardBody>\n                        </CCard>\n                      </CCol>\n                    </CRow>\n                  </CCardBody>\n\n                </CCard>\n              </>\n              </Suspense>\n            </CContainer>\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default Admin\n"],"names":["_ref","users","projects","companys","_jsxs","CRow","children","_jsx","CCol","sm","lg","CWidgetStatsA","className","color","value","_Fragment","title","action","CDropdown","alignment","CDropdownToggle","caret","CIcon","icon","cilOptions","CDropdownMenu","CDropdownItem","disabled","chart","CChartLine","style","height","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","getStyle","options","plugins","legend","display","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","fill","CChartBar","barPercentage","drawTicks","Admin","useRef","clients","useUsersContext","managers","zakazchiki","projs","comps","userWorkers","specusers","workersAll","workers","setWorkers","setManagers","contacts","setContacts","useState","contacts2","setContacts2","setProjects","newClients","setNewClients","oldClients","setOldClients","loading","setLoading","loading2","setLoading2","loading3","setLoading3","loading4","setLoading4","sortWorkers","setSortWorkers","newWorkers","setNewWorkers","activWorkers","setActivWorkers","delWorkers","setDelWorkers","sortDelWorkers","setSortDelWorkers","sortWorkers2","setSortWorkers2","newWorkers2","setNewWorkers2","activWorkers2","setActivWorkers2","delWorkers2","setDelWorkers2","catCount","setCatCount","dayWorkers","setDayWorkers","weekWorkers","setWeekWorkers","monthWorkers","setMonthWorkers","yearWorkers","setYearWorkers","periodWorkers","setPeriodWorkers","showRenthub","setShowRenthub","showRenthub2","setShowRenthub2","showWorkhub","setShowWorkhub","showDeleted","setShowDeleted","activeKey","setActiveKey","showWidget","setShowWidget","showWidget2","setShowWidget2","showWidget3","setShowWidget3","showWidget4","setShowWidget4","showWidget5","setShowWidget5","showWidget6","setShowWidget6","showCharts","setShowCharts","showCharts2","setShowCharts2","showCharts3","setShowCharts3","showCharts4","setShowCharts4","showCharts5","setShowCharts5","showCountAll","setShowCountAll","showNick","setShowNick","tabhub","setTabhub","periodDate1","setPeriodDate1","periodDate2","setPeriodDate2","startWeek","setStartWeek","timerId","setTimerId","widthGrafik","setWdthGrafik","text","setText","textDelete","setTextDelete","showTable","setShowTable","AppSidebar","AppHeader","tabs","CContainer","Suspense","fallback","CSpinner","src","arrowUp","alt","position","top","right","zIndex","width","WidgetsDropdown","CCard","borderRadius","borderTopRightRadius","CCardBody","id","xs","CCardHeader","textAlign","length","md","xl","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","cilPeople","CTableBody","AppFooter"],"sourceRoot":""}