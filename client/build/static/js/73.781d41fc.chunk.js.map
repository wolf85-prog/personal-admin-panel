{"version":3,"file":"static/js/73.781d41fc.chunk.js","mappings":"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","sources":["http/specAPI.js","http/workerAPI.js","data/data.js","components/table/Filters.jsx","components/Calendar3/Calendar2.jsx","webpack://client/./src/components/Dropdown52/Dropdown52.module.css?83be","components/Dropdown52/Dropdown52.jsx","http/mainspecAPI.js","pages/Projects.js","components/table/useTableData.jsx"],"sourcesContent":["import {$authHost, $host, $host_worker} from \"./index\";\n\nexport const getSpecialist = async () =>{\n    try {\n       let response = await $host.get('api/specialist/get');\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getSpecialist api\", error.message);\n    }\n}\n\nexport const getSpecCount = async (count, prev) =>{\n    try {\n       let response = await $host.get(`api/specialist/count/get/${count}/${prev}`);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getSpecCount api\", error.message);\n    }\n}\n\nexport const editSpecialist = async (data, id) =>{\n    try {\n        await $host.patch(`api/specialist/update/${id}`, data); \n    } catch (error) {\n        console.log(\"error while calling editSpecialist api\",error.message);\n    }\n}\n\nexport const addSpecialist = async (data) =>{\n    try {\n        let response = await $host.post(`api/specialist/add`, data); \n        return response.data;\n    } catch (error) {\n        console.log(\"error while calling addSpecialist api\",error.message);\n    }\n}\n\nexport const deleteSpecialist = async (id) =>{\n    try {\n        await $host.get(`api/specialist/delete/${id}`); \n    } catch (error) {\n        console.log(\"error while calling deleteSpecialist api\",error.message);\n    }\n}\n\nexport const getSpecialistId = async (id) =>{\n    try {\n       let response = await $host.get(`api/specialist/${id}`);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getSpecialistId api\", error.message);\n    }\n}\n\nexport const getSpecialistChatId = async (id) =>{\n    try {\n       let response = await $host.get(`api/specialist/chat/${id}`);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getSpecialistChatId api\", error.message);\n    }\n}\n\nexport const blockedSpecialist = async (id) =>{\n    try {\n       let response = await $host.get(`api/specialist/block/${id}`);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling blockedSpecialist api\", error.message);\n    }\n}\n\n\nexport const sendSpecialistOtkaz = async (id, data) =>{\n    try {\n       let response = await $host_worker.post(`api/specialist/otkaz/send/${id}`, data);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling sendSpecialistOtkaz api\", error.message);\n    }\n}\n","import {$authHost, $host, $host_worker} from \"./index\";\n\nexport const getWorkerNotionId = async (id) =>{\n    try {\n       let response = await $host_worker.get(`api/workers/${id}`);\n       //console.log(response);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getWorkerNotionId api\", error.message);\n    }\n}\n\nexport const getWorkersNotion = async (id) =>{\n    try {\n       let response = await $host_worker.get(`api/workers`);\n       //console.log(response);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getWorkersNotion api\", error.message);\n    }\n}\n\nexport const getWorkersNotion100 = async (id) =>{\n    try {\n       let response = await $host_worker.get(`api/workers100`);\n       //console.log(response);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getWorkersNotion100 api\", error.message);\n    }\n}\n\nexport const getWorkerChildrenId = async (id) =>{\n    try {\n       let response = await $host_worker.get(`api/workers/children/${id}`);\n       //console.log(response);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getWorkerChildrenId api\", error.message);\n    }\n}\n\nexport const getWorkers = async () =>{\n    try {\n       let response = await $host.get('api/workers/get');\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getWorkers api\", error.message);\n    }\n}\n\nexport const getWorkersCount = async (count, prev) =>{\n    try {\n       let response = await $host.get(`api/workers/count/get/${count}/${prev}`);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getWorkersCount api\", error.message);\n    }\n}\n\nexport const getWorker = async (id) =>{\n    try {\n       let response = await $host.get(`api/workers/get/${id}`);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getWorker api\", error.message);\n    }\n}\n\n\nexport const blockedWorkers = async (id) =>{\n    try {\n       let response = await $host.get(`api/workers/block/${id}`);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling blockedWorkers api\", error.message);\n    }\n}\n\nexport const getAllPretendent = async () =>{\n    try {\n       let response = await $host.get('api/pretendents/get');\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getAllPretendent api\", error.message);\n    }\n}\n\nexport const getAllPretendentCount = async (count, prev) =>{\n    try {\n       let response = await $host.get(`api/pretendents/count/get/${count}/${prev}`);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getAllPretendent api\", error.message);\n    }\n}\n\nexport const getLastPretendent = async (id) =>{\n    try {\n       let response = await $host.get(`api/pretendent/get/${id}`);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getAllPretendent api\", error.message);\n    }\n}\n\nexport const getWContacts = async () =>{\n    try {\n       let response = await $host.get('api/wuserbots/get');\n       //console.log(response);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getUsers api\", error.message);\n    }\n}\n\nexport const getWContactId = async (id) =>{\n    try {\n       let response = await $host.get(`api/wuserbots/get/${id}`);\n       //console.log(response);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getUser api\", error.message);\n    }\n}\n\nexport const editContact = async (data, id) =>{\n    try {\n       let response = await $host.patch(`api/wuserbots/update/${id}`, data);\n       console.log(response);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling editContact api\", error.message);\n    }\n}\n\nexport const editContactAvatar = async (data, id) =>{\n    try {\n       let response = await $host.patch(`api/wuserbots/updatefile/${id}`, data);\n       console.log(\"response: \", response);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling editContactAvatar api\", error.message);\n    }\n}\n\nexport const setWConversation= async (data)=>{\n    try {\n        await $host.post('api/wconversation/add', data);\n    } catch (error) {\n        console.log(\"error while calling setConversation api\", error.message);\n        \n    }\n}\n\nexport const getWConversation= async (id)=>{\n    try {\n       let response= await $host.get(`api/wconversation/get/${id}`);\n       if (response.data === null) {\n            return null;\n       }\n        return response.data.id\n    } catch (error) {\n        console.log(\"error while calling getConversation api\", error.message);       \n    }\n}\n\nexport const getWConversations= async ()=>{\n    try {\n       let response= await $host.get(`api/wconversations/get`);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getConversation api\", error.message);       \n    }\n}\n\n// message\nexport const newMessage = async (data) =>{\n    try {\n        await $host.post(`api/wmessage/add`, data); \n    } catch (error) {\n        console.log(\"error while calling newMessage api\",error.message);\n    }\n}\n\nexport const delWMessage = async (id) =>{\n    try {\n        await $host.delete(`api/wmessage/delete/${id}`); \n    } catch (error) {\n        console.log(\"error while calling delMessage api\",error.message);\n    }\n}\n\n\nexport const getWMessages = async(id)=>{\n    try {\n        let response\n        if (id !== null) {\n            response = await $host.get(`api/wmessage/get/${id}`);\n        } else {\n            return [] \n        }\n         \n        return response.data;\n    } catch (error) {\n        console.log(\"error while calling getMessages api\",error.message);\n        \n    }\n}\n\nexport const getWMessages2 = async(id, count, prev)=>{\n    try {\n        let response\n        if (id !== null) {\n            response = await $host.get(`api/wmessage2/get/${id}/${count}/${prev}`);\n        } else {\n            return [] \n        }\n         \n        return response.data;\n    } catch (error) {\n        console.log(\"error while calling getMessages api\",error.message);\n        \n    }\n}\n\nexport const getAllWMessages = async()=>{\n    try {\n        let response= await $host.get(`api/wmessage/get`);\n        \n        return response.data;\n    } catch (error) {\n        console.log(\"error while calling getAllWMessages api\",error.message);\n        \n    }\n}\n\nexport const getWMessagesCount = async(count)=>{\n    try {\n        let response= await $host.get(`api/wmessage/get/count/${count}`);\n        \n        return response.data;\n    } catch (error) {\n        console.log(\"error while calling getWMessagesCount api\",error.message);\n        \n    }\n}\n\n\n//api notion получить данные проекта по его id\nexport const getProjectId = async (id) =>{\n    try {\n        let response = await $host_worker.get('api/project/' + id);\n        //console.log(\"projectIdAPI: \", response.data);\n        return response.data;\n    } catch (error) {\n        console.log(\"error while calling getProjectId api\", error.message);\n    }\n}\n\n//file\nexport const uploadFile = async (data) =>{\n    try {\n        return await $host.post(`api/file/upload`, data, {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        });\n    } catch (error) {\n        console.log(\"error while calling uploadFile api\",error.message);\n        \n    }\n}\n\n\nexport const getCanceled = async()=>{\n    try {\n        let response= await $host.get(`api/canceled/get`);\n        \n        return response.data;\n    } catch (error) {\n        console.log(\"error while calling getCanceled api\",error.message);\n        \n    }\n}\n\nexport const getCanceledId = async(data)=>{\n    try {\n        let response= await $host.post(`api/canceled/project/get`, data);\n        console.log(\"response: \", response)\n        \n        return response.data;\n    } catch (error) {\n        console.log(\"error while calling getCanceledId api: \",error.message);\n        \n    }\n}\n\nexport const addCanceled = async(data)=>{\n    try {\n        let response= await $host.post(`api/canceled/add`, data);\n        \n        return response.data;\n    } catch (error) {\n        console.log(\"error while calling addCanceled api\",error.message);\n        \n    }\n}","const STATUS_IN_PROGRESS = { id: 1, name: 'В работе', color: 'yellow.400', icon: '🟨' }\nconst STATUS_DONE = { id: 1, name: 'Расчитан', color: 'uley_green.0', icon: '🟩' }\nconst STATUS_NEW = { id: 1, name: 'Новый', color: 'uley_orange.0', icon: '🟧' }\n\nlet ic = '🟥🟦🟪'\n\nexport const STATUSES = [STATUS_IN_PROGRESS, STATUS_DONE, STATUS_NEW]\n\nconst estimates = [\n  {\n    id: 1,\n    project: 'Проект №1',\n    date: '08.08.2024',\n    manager: 'Захаров М. Н.',\n    hours: 15,\n    payment: 12000,\n    company: 'Компания 1',\n    status: STATUS_NEW,\n  },\n  {\n    id: 2,\n    project: 'Проект №2',\n    date: '07.08.2024',\n    manager: 'Рогов А. Е.',\n    hours: 10,\n    payment: 25000,\n    company: 'Компания 2',\n    status: STATUS_DONE,\n  },\n  {\n    id: 3,\n    project: 'Проект №3',\n    date: '18.07.2024',\n    manager: 'Игнатов А. П.',\n    hours: 10,\n    payment: 12000,\n    company: 'Компания 1',\n    status: STATUS_IN_PROGRESS,\n  },\n  {\n    id: 4,\n    project: 'Проект №4',\n    date: '25.06.2024',\n    manager: 'Никитина А. И.',\n    hours: 10,\n    payment: 20000,\n    company: 'Компания 1',\n    status: STATUS_DONE,\n  },\n  {\n    id: 5,\n    date: '23.06.2024',\n    project: 'Проект №5',\n    manager: 'Фролов Г. П.',\n    hours: 10,\n    payment: 8000,\n    company: 'Компания 1',\n    status: STATUS_DONE,\n  },\n  {\n    id: 6,\n    project: 'Проект №6',\n    date: '18.06.2024',\n    manager: 'Игнатов А. П.',\n    hours: 10,\n    payment: 12000,\n    company: 'Компания 3',\n    status: STATUS_IN_PROGRESS,\n  },\n  {\n    id: 7,\n    project: 'Проект №7',\n    date: '13.06.2024',\n    manager: 'Игнатов А. П.',\n    hours: 10,\n    payment: 12000,\n    company: 'Компания 2',\n    status: STATUS_DONE,\n  },\n  {\n    id: 8,\n    project: 'Проект №8',\n    date: '12.06.2024',\n    manager: 'Захаров М. Н.',\n    hours: 10,\n    payment: 12000,\n    company: 'Компания 1',\n    status: STATUS_DONE,\n  },\n]\n\nexport default estimates\n\nexport const payRates = [\n  {\n    id: 1,\n    category: 'Звук',\n    speciality: 'Звукорежиссер',\n    payRate: 10000,\n    hours: 10,\n    stavka1: 10000.0,\n    stavka2: 12000,\n    stavka3: 13000,\n    stavka4: 14000,\n    stavka5: 15000,\n    stavka6: 16000,\n    stavka7: 17000,\n    stavka8: 18000,\n  },\n  {\n    id: 2,\n    category: 'Звук',\n    speciality: 'Системный инженер',\n    payRate: 10000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 12000,\n    stavka3: 13000,\n    stavka4: 14000,\n    stavka5: 15000,\n    stavka6: 16000,\n    stavka7: 17000,\n    stavka8: 18000,\n  },\n  {\n    id: 3,\n    category: 'Звук',\n    speciality: 'RF-Менеджер',\n    payRate: 12000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 4,\n    category: 'Звук',\n    speciality: 'Backline',\n    payRate: 10000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 5,\n    category: 'Звук',\n    speciality: 'Roadie',\n    payRate: 10000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 6,\n    category: 'Звук',\n    speciality: 'Техник по звуку',\n    payRate: 10000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 7,\n    category: 'Звук',\n    speciality: 'Техник по звуку 2',\n    payRate: 10000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 8,\n    category: 'Звук',\n    speciality: 'Техник по звуку 3',\n    payRate: 10000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 9,\n    category: 'Звук',\n    speciality: 'Техник по звуку 4',\n    payRate: 15000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 10,\n    category: 'Звук',\n    speciality: 'Техник по звуку 4',\n    payRate: 15000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 11,\n    category: 'Свет',\n    speciality: 'Техник по свету',\n    payRate: 8000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 12,\n    category: 'Свет',\n    speciality: 'Оператор световой пушки',\n    payRate: 8000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 13,\n    category: 'Свет',\n    speciality: 'Художник по свету',\n    payRate: 8000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 14,\n    category: 'Свет',\n    speciality: 'Гафер',\n    payRate: 8000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 15,\n    category: 'Свет',\n    speciality: 'Техник по свету 2',\n    payRate: 8000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 16,\n    category: 'Свет',\n    speciality: 'Техник по свету 3',\n    payRate: 8000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 17,\n    category: 'Свет',\n    speciality: 'Техник по свету 4',\n    payRate: 8000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 18,\n    category: 'Свет',\n    speciality: 'Техник по свету 5',\n    payRate: 8000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 19,\n    category: 'Свет',\n    speciality: 'Техник по свету 6',\n    payRate: 8000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 20,\n    category: 'Свет',\n    speciality: 'Техник по свету 7',\n    payRate: 8000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 21,\n    category: 'Test1',\n    speciality: 'Специальность 1',\n    payRate: 8000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 22,\n    category: 'Test1',\n    speciality: 'Специальность 2',\n    payRate: 8000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 23,\n    category: 'Test1',\n    speciality: 'Специальность 3',\n    payRate: 8000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 24,\n    category: 'Test1',\n    speciality: 'Специальность 4',\n    payRate: 8000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 25,\n    category: 'Test1',\n    speciality: 'Специальность 5',\n    payRate: 8000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 26,\n    category: 'Test1',\n    speciality: 'Специальность 6',\n    payRate: 8000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 27,\n    category: 'Test1',\n    speciality: 'Специальность 7',\n    payRate: 8000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 28,\n    category: 'Test1',\n    speciality: 'Специальность 8',\n    payRate: 8000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 29,\n    category: 'Test1',\n    speciality: 'Специальность 9',\n    payRate: 8000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n  {\n    id: 30,\n    category: 'Test1',\n    speciality: 'Специальность 10',\n    payRate: 8000,\n    hours: 10,\n    stavka1: 10000,\n    stavka2: 10000,\n    stavka3: 10000,\n    stavka4: 10000,\n    stavka5: 10000,\n    stavka6: 10000,\n    stavka7: 10000,\n    stavka8: 10000,\n  },\n]\n\nexport const groups = [\n  { id: 1, name: 'Звук' },\n  { id: 2, name: 'Свет' },\n  { id: 3, name: 'Видео' },\n  { id: 4, name: 'Фото' },\n  { id: 5, name: 'Промо' },\n  { id: 6, name: 'Кейтеринг' },\n  { id: 7, name: 'Помощники' },\n  { id: 8, name: 'Риггеры / Сцена' },\n  { id: 9, name: 'Грузоперевозки' },\n  { id: 10, name: 'Артист' },\n  { id: 11, name: 'Игры' },\n  { id: 12, name: 'Технический продакшн' },\n  { id: 13, name: 'U.L.E.Y' },\n]\n","/* eslint-disable react/prop-types */\nimport { React, useEffect, useState } from 'react'\nimport { CIcon } from '@coreui/icons-react'\nimport { cilList, cilShieldAlt } from '@coreui/icons'\nimport DatePicker from 'react-datepicker'\nimport Select from 'react-select'\n\nimport ChangeSloy from \"./../../assets/images/change_sloy.png\";\n\nimport { useUsersContext } from \"../../chat-app-new/context/usersContext\";\n\nimport {\n  CCloseButton,\n  CFormInput,\n  CCol,\n  CRow,\n  CFormCheck,\n  CFormSelect,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownItem,\n  CDropdownMenu,\n  CButton,\n} from '@coreui/react'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nconst options = [\n  { value: 'project', label: 'Проект' },\n  { value: 'date', label: 'Дата' },\n  { value: 'ID', label: 'ID' },\n  { value: 'company', label: 'Компания' },\n  { value: 'manager', label: 'Менеджер' },  \n  { value: 'specialist', label: 'Специалист' },\n  { value: 'status', label: 'Статус' },\n  { value: 'city', label: 'Город' },\n]\n\nconst projList = [\n  { value: 'Проект №1', label: '08.08 | Проект №1' },\n  { value: 'Проект №2', label: '07.08 | Проект №2' },\n  { value: 'Проект №3', label: '18.07 | Проект №3' },\n  { value: 'Проект №4', label: '25.06 | Проект №4' },\n  { value: 'Проект №5', label: '23.06 | Проект №5' },\n]\nconst managerList = [\n  { value: 'Менеджер', label: 'Менеджер' },\n  { value: 'Захаров М. Н.', label: 'Захаров М. Н.' },\n  { value: 'Рогов А. Е.', label: 'Рогов А. Е.' },\n  { value: 'Игнатов А. П.', label: 'Игнатов А. П.' },\n  { value: 'Никитина А. И.', label: 'Никитина А. И.' },\n]\nconst projectList = [\n  { value: 'Проект', label: 'Проект' },\n  { value: 'Проект', label: 'Проект' },\n  { value: 'Проект', label: 'Проект' },\n  { value: 'Проект', label: 'Проект' },\n  { value: 'Проект', label: 'Проект' },\n]\nconst idList = [\n  { value: 'ID', label: 'ID' },\n  { value: 'ID', label: 'ID' },\n  { value: 'ID', label: 'ID' },\n  { value: 'ID', label: 'ID' },\n  { value: 'ID', label: 'ID' },\n]\nconst statusList = [\n  { value: 'Статус', label: 'Статус' },\n  { value: 'Статус', label: 'Статус' },\n  { value: 'Статус', label: 'Статус' },\n  { value: 'Статус', label: 'Статус' },\n  { value: 'Статус', label: 'Статус' },\n]\nconst companyList = [\n  { value: 'Компания', label: 'Компания' },\n  { value: 'Компания 2', label: 'Компания 2' },\n  { value: 'Компания 3', label: 'Компания 3' },\n  { value: 'Компания 4', label: 'Компания 4' },\n  { value: 'Компания 5', label: 'Компания 5' },\n]\n\nconst cityList = [\n  { value: 'Город', label: 'Город' },\n  { value: 'Город 2', label: 'Город 2' },\n  { value: 'Город 3', label: 'Город 3' },\n  { value: 'Город 4', label: 'Город 4' },\n  { value: 'Город 5', label: 'Город 5' },\n]\n\n\nconst periodList = [\n  { value: 'Сутки', label: 'Сутки' },\n  { value: 'Неделя', label: 'Неделя' },\n  { value: 'Месяц [Т]', label: 'Месяц [Т]' },\n  { value: 'Месяц [П]', label: 'Месяц [П]' },\n  { value: 'Год', label: 'Год' },\n]\n\nconst manthList = [\n  { value: 'Январь', label: 'Январь' },\n  { value: 'Февраль', label: 'Февраль' },\n  { value: 'Март', label: 'Март' },\n  { value: 'Апрель', label: 'Апрель' },\n  { value: 'Май', label: 'Май' },\n  { value: 'Июнь', label: 'Июнь' },\n  { value: 'Июль', label: 'Июль' },\n  { value: 'Август', label: 'Август' },\n  { value: 'Сентябрь', label: 'Сентябрь' },\n  { value: 'Октябрь', label: 'Октябрь' },\n  { value: 'Ноябрь', label: 'Ноябрь' },\n  { value: 'Декабрь', label: 'Декабрь' },\n]\n\nconst filters = {\n  project: projList,\n  manager: managerList,\n  company: companyList,\n  period: periodList,\n}\n\nexport default function Filters({ columnFilters, setColumnFilters, setShowCalendar, setShowCalendar2 }) {\n  const { MONTHS, date, setDate, day, setDay, month, setMonth, year, setYear, startDay, setStartDay, currentDays } = useUsersContext();\n  const [startDate, setStartDate] = useState(new Date())\n  const [endDate, setEndDate] = useState(new Date())\n\n  const [filterType, setFilterType] = useState(options[0])\n  const [filter, setFilter] = useState(projList)\n  const [filter2, setFilter2] = useState(idList)\n  const [filter3, setFilter3] = useState(managerList)\n  const [filter4, setFilter4] = useState(companyList)\n  const [filter5, setFilter5] = useState(statusList)\n  const [filter6, setFilter6] = useState(cityList)\n\n  const [countPress, setCountPress] = useState(0);\n\n  const handleChangeFilterType = (selectedOption) => {\n    setFilterType(selectedOption)\n    setFilter(filters[selectedOption.value])\n  }\n\n  useEffect(() => {}, [columnFilters])\n\n  const handleFilterChange = (tt) => {\n    // setColumnFilters((prev) =>\n    //   prev.filter((f) => f.id !== filterType.value).concat({ id: filterType, value: tt }),\n    // )\n    setColumnFilters([{ id: filterType.value, value: tt.value }])\n  }\n\n  const clickChange = () => {\n    setCountPress(countPress + 1)\n    \n    if (countPress + 1 >= 2) {\n      setCountPress(0)\n    }\n\n    if (countPress + 1 === 1) {\n      setShowCalendar(false)\n      setShowCalendar2(true)\n    } else if (countPress + 1 === 2) {\n      setShowCalendar(true)\n      setShowCalendar2(false)\n    } \n    \n  }\n\n  return (\n    <>\n      <CRow lg={{ gutter: 0 }} className=\"mb-1 \">\n        <CCol className=\"align-self-center\" style={{maxWidth: '140px'}}>\n          <div className=\"filter-line\" style={{left: '12px', width: '10px'}}></div>\n          {/* <div className=\"filter-line\" style={{left: '805px', top: '60px', width: '50px'}}></div>\n          <div className=\"uley-line\" style={{left: '900px', top: '60px', width: '50px'}}></div> */}\n\n          <ul className=\"markers\" style={{paddingLeft: '14px', listStyle: 'none'}}>\n            <li><span className='title-label'>Проекты: </span>{'100'}</li>\n            <li><span className='title-label'>Часы: </span>{'1000'}</li>\n            \n          </ul>\n        </CCol>\n        <CCol className=\"align-self-center\" style={{maxWidth: '155px', position: 'relative'}}>\n          <div className=\"filter-line\" style={{left: '8px', top: '11px', width: '10px'}}></div>\n          <ul className=\"markers\" style={{paddingLeft: '20px', listStyle: 'none'}}> \n            <li><span className='title-label'>В эфире: </span>{'10'}</li>\n            <li><span className='title-label'>В обработке: </span>{'10'}</li>\n          </ul>\n        </CCol>\n        \n        <CCol className=\"align-self-center\" style={{ display: 'flex', justifyContent: 'flex-end', position: 'absolute', top: '12px', right: '10px'}} >\n              <Select\n                className=\"uley_react_select\"\n                options={options}\n                onChange={handleChangeFilterType}\n                defaultValue={filterType}\n                classNamePrefix=\"custom-select_3\"\n                autoFocus=\"true\"\n              />\n              <Select\n                className=\"uley_react_select\"\n                onChange={handleFilterChange}\n                options={filter}\n                defaultValue={filter[0]}\n                classNamePrefix=\"custom-select_2\"\n              />\n\n              <CButton onClick={()=>clickChange()} className='uley_add_user uley_select_reset' style={{marginRight: '10px', padding: '18px', marginLeft: '0'}}>\n                <span style={{position: 'absolute', top: '-4px', left: '5px'}}>\n                  <img src={ChangeSloy} alt='' width={25} />\n                </span>\n              </CButton>\n\n              <input className=\"form-control\" style={{background: 'transparent', width: '150px', marginRight: '10px'}} placeholder='Поиск'></input>\n              \n              <CCloseButton\n                className=\"uley_select_reset\"\n                style={{ height: '28px', width: '28px',marginRight: '250px', marginLeft: '0' }}\n                onClick={() => setColumnFilters([])}\n              />\n              \n              {/* <CButton onClick={() => setDate(new Date(year, month - 1, day))} className='uley_add_user uley_select_reset' style={{marginRight: '10px', padding: '18px', marginLeft: '0'}}>\n                <span style={{fontSize: '36px', color: '#2d2e38', position: 'absolute', top: '-14px', left: '11px'}}>\n                -</span>\n              </CButton>\n            \n              <Select\n                className=\"uley_react_select\"\n                options={manthList}\n                // defaultValue={manthList[0]}\n                value={MONTHS[month]}\n                classNamePrefix=\"custom-select_3\"\n              />\n\n              <CButton onClick={() => setDate(new Date(year, month + 1, day))} className='uley_add_user uley_select_reset' style={{marginLeft: '0px', padding: '18px'}}>\n                <span style={{fontSize: '36px', color: '#2d2e38', position: 'absolute', top: '-13px', left: '6px'}}>\n                +</span>\n              </CButton> */}\n        </CCol>\n\n      </CRow>\n    </>\n  )\n}\n","import { React, useEffect, useState, useRef  } from 'react'\n\nimport {\n    CButton,\n  } from '@coreui/react'\n\nimport './Calendar2.css'\nimport Select from 'react-select'\n\nimport { useUsersContext } from \"../../chat-app-new/context/usersContext\";\nimport { addProject } from '../../http/projectAPI'\nimport statusData from 'src/data/statusData';\n\nexport default function Calendar2({projects, setProjects, openProject, setHeight, showSidebar, setShowSidebar, setShowProject, setShowCalendar, setShowCalendar2}) {\n    //const { MONTHS, date, setDate, day, setDay, month, setMonth, year, setYear, startDay, setStartDay, currentDays, DAYS_OF_THE_WEEK } = useUsersContext();\n    const DAYS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    const DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    const MONTHS = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'];\n    const manthList = [\n        { value: 'Январь', label: 'Январь' },\n        { value: 'Февраль', label: 'Февраль' },\n        { value: 'Март', label: 'Март' },\n        { value: 'Апрель', label: 'Апрель' },\n        { value: 'Май', label: 'Май' },\n        { value: 'Июнь', label: 'Июнь' },\n        { value: 'Июль', label: 'Июль' },\n        { value: 'Август', label: 'Август' },\n        { value: 'Сентябрь', label: 'Сентябрь' },\n        { value: 'Октябрь', label: 'Октябрь' },\n        { value: 'Ноябрь', label: 'Ноябрь' },\n        { value: 'Декабрь', label: 'Декабрь' },\n    ]\n    // Will be implemented below\n    const today = new Date();\n    const [date, setDate] = useState(today);\n    const [day, setDay] = useState(date.getDate());\n    const [month, setMonth] = useState(date.getMonth());\n    const [year, setYear] = useState(date.getFullYear());\n    const [startDay, setStartDay] = useState(getStartDayOfMonth(date));\n    const [currentDays, setCurrentDays] = useState([]);\n    const [showButtonAdd, setShowButtonAdd] = useState([])\n    const [showButtonAdd2, setShowButtonAdd2] = useState([])\n    const [showButtonAdd3, setShowButtonAdd3] = useState([])\n    const [showButtonAdd4, setShowButtonAdd4] = useState([])\n    const [showButtonAdd5, setShowButtonAdd5] = useState([])\n    const [showButtonAdd6, setShowButtonAdd6] = useState([])\n    const [showButtonAdd7, setShowButtonAdd7] = useState([])\n\n    const [project, setProject] = useState([])\n    const [project2, setProject2] = useState([])\n    const [project3, setProject3] = useState([])\n    const [project4, setProject4] = useState([])\n    const [project5, setProject5] = useState([])\n    const [project6, setProject6] = useState([])\n    const [project7, setProject7] = useState([])\n\n    const [projectName, setProjectName] = useState([])\n    const [projectName2, setProjectName2] = useState([])\n    const [projectName3, setProjectName3] = useState([])\n    const [projectName4, setProjectName4] = useState([])\n    const [projectName5, setProjectName5] = useState([])\n    const [projectName6, setProjectName6] = useState([])\n    const [projectName7, setProjectName7] = useState([])\n\n    const [projectEnd, setProjectEnd] = useState([])\n    const [projectEnd2, setProjectEnd2] = useState([])\n    const [projectEnd3, setProjectEnd3] = useState([])\n    const [projectEnd4, setProjectEnd4] = useState([])\n    const [projectEnd5, setProjectEnd5] = useState([])\n    const [projectEnd6, setProjectEnd6] = useState([])\n    const [projectEnd7, setProjectEnd7] = useState([])\n\n    const [projectStatus, setProjectStatus] = useState([])\n    const [projectStatus2, setProjectStatus2] = useState([])\n    const [projectStatus3, setProjectStatus3] = useState([])\n    const [projectStatus4, setProjectStatus4] = useState([])\n    const [projectStatus5, setProjectStatus5] = useState([])\n    const [projectStatus6, setProjectStatus6] = useState([])\n    const [projectStatus7, setProjectStatus7] = useState([])\n\n    const [projectColor, setProjectColor] = useState([])\n    const [projectColor2, setProjectColor2] = useState([])\n    const [projectColor3, setProjectColor3] = useState([])\n    const [projectColor4, setProjectColor4] = useState([])\n    const [projectColor5, setProjectColor5] = useState([])\n    const [projectColor6, setProjectColor6] = useState([])\n    const [projectColor7, setProjectColor7] = useState([])\n\n    const [projectTime, setProjectTime] = useState([])\n    const [projectTime2, setProjectTime2] = useState([])\n    const [projectTime3, setProjectTime3] = useState([])\n    const [projectTime4, setProjectTime4] = useState([])\n    const [projectTime5, setProjectTime5] = useState([])\n    const [projectTime6, setProjectTime6] = useState([])\n    const [projectTime7, setProjectTime7] = useState([])\n\n    const [projectSpecifika, setProjectSpecifika] = useState([])\n    const [projectSpecifika2, setProjectSpecifika2] = useState([])\n    const [projectSpecifika3, setProjectSpecifika3] = useState([])\n    const [projectSpecifika4, setProjectSpecifika4] = useState([])\n    const [projectSpecifika5, setProjectSpecifika5] = useState([])\n    const [projectSpecifika6, setProjectSpecifika6] = useState([])\n    const [projectSpecifika7, setProjectSpecifika7] = useState([])\n\n    const [projectComment, setProjectComment] = useState([])\n    const [projectComment2, setProjectComment2] = useState([])\n    const [projectComment3, setProjectComment3] = useState([])\n    const [projectComment4, setProjectComment4] = useState([])\n    const [projectComment5, setProjectComment5] = useState([])\n    const [projectComment6, setProjectComment6] = useState([])\n    const [projectComment7, setProjectComment7] = useState([])\n\n    const [projectCity, setProjectCity] = useState([])\n    const [projectCity2, setProjectCity2] = useState([])\n    const [projectCity3, setProjectCity3] = useState([])\n    const [projectCity4, setProjectCity4] = useState([])\n    const [projectCity5, setProjectCity5] = useState([])\n    const [projectCity6, setProjectCity6] = useState([])\n    const [projectCity7, setProjectCity7] = useState([])\n\n    const [projectTehText, setProjectTehText] = useState([])\n    const [projectTehText2, setProjectTehText2] = useState([])\n    const [projectTehText3, setProjectTehText3] = useState([])\n    const [projectTehText4, setProjectTehText4] = useState([])\n    const [projectTehText5, setProjectTehText5] = useState([])\n    const [projectTehText6, setProjectTehText6] = useState([])\n    const [projectTehText7, setProjectTehText7] = useState([])\n\n    const [projectCompanyId, setProjectCompanyId] = useState([])\n    const [projectCompanyId2, setProjectCompanyId2] = useState([])\n    const [projectCompanyId3, setProjectCompanyId3] = useState([])\n    const [projectCompanyId4, setProjectCompanyId4] = useState([])\n    const [projectCompanyId5, setProjectCompanyId5] = useState([])\n    const [projectCompanyId6, setProjectCompanyId6] = useState([])\n    const [projectCompanyId7, setProjectCompanyId7] = useState([])\n\n    const [projectId, setProjectId] = useState([])\n    const [projectId2, setProjectId2] = useState([])\n    const [projectId3, setProjectId3] = useState([])\n    const [projectId4, setProjectId4] = useState([])\n    const [projectId5, setProjectId5] = useState([])\n    const [projectId6, setProjectId6] = useState([])\n    const [projectId7, setProjectId7] = useState([])\n\n    const ref = useRef(null)\n\n    useEffect(() => {\n        console.log(\"projects: \", projects)\n\n        let arr = [] \n        let arr2 = []\n        let arr3 = []\n        let arr4 = []\n        let arr5 = []\n        let arr6 = []\n        let arr7 = []\n\n        let nameProj = [] \n        let nameProj2 = []\n        let nameProj3 = []\n        let nameProj4 = []\n        let nameProj5 = []\n        let nameProj6 = []\n        let nameProj7 = []\n\n        let statusProj = [] \n        let statusProj2 = []\n        let statusProj3 = []\n        let statusProj4 = []\n        let statusProj5 = []\n        let statusProj6 = []\n        let statusProj7 = []\n\n        let colorProj = [] \n        let colorProj2 = []\n        let colorProj3 = []\n        let colorProj4 = []\n        let colorProj5 = []\n        let colorProj6 = []\n        let colorProj7 = []\n\n        let timeProj = [] \n        let timeProj2 = []\n        let timeProj3 = []\n        let timeProj4 = []\n        let timeProj5 = []\n        let timeProj6 = []\n        let timeProj7 = []\n\n        let cityProj = [] \n        let cityProj2 = []\n        let cityProj3 = []\n        let cityProj4 = []\n        let cityProj5 = []\n        let cityProj6 = []\n        let cityProj7 = []\n\n        let commentProj = [] \n        let commentProj2 = []\n        let commentProj3 = []\n        let commentProj4 = []\n        let commentProj5 = []\n        let commentProj6 = []\n        let commentProj7 = []\n\n        let tehProj = [] \n        let tehProj2 = []\n        let tehProj3 = []\n        let tehProj4 = []\n        let tehProj5 = []\n        let tehProj6 = []\n        let tehProj7 = []\n\n        let specifProj = [] \n        let specifProj2 = []\n        let specifProj3 = []\n        let specifProj4 = []\n        let specifProj5 = []\n        let specifProj6 = []\n        let specifProj7 = []\n\n        let endProj = [] \n        let endProj2 = []\n        let endProj3 = []\n        let endProj4 = []\n        let endProj5 = []\n        let endProj6 = []\n        let endProj7 = []\n\n        let idProj = [] \n        let idProj2 = []\n        let idProj3 = []\n        let idProj4 = []\n        let idProj5 = []\n        let idProj6 = []\n        let idProj7 = []\n\n        Array(days[month] + (startDay - 1)).fill(null).map((_, index) => {\n            const d = index - (startDay - 2);\n                \n            projects.map((item, ind)=> {\n                if (item?.dateEnd) {\n                    if (new Date(item?.dateStart.split('T')[0]).toISOString() === new Date(item?.dateEnd?.split('T')[0]).toISOString() || \n                        new Date(item?.dateStart.split('T')[0]).getTime() > new Date(item?.dateEnd?.split('T')[0]).getTime()) {\n                        // console.log(\"d==: \", ind,\n                        //     new Date(item?.dateStart.split('T')[0]).toISOString(),\n                        //     new Date(item?.dateEnd.split('T')[0]).toISOString(), //.setHours(new Date(item?.dateStart).getHours()))\n                        // ) \n                        if ((new Date(new Date(2024, month, d).setHours(new Date(2024, month, d).getHours()+3)).toISOString() === new Date(item?.dateStart.split('T')[0]).toISOString()) ) {\n                            // console.log(\"d: \", ind,\n                            //     new Date(new Date(2024, month, d).setHours(new Date(2024, month, d).getHours()+3)).toISOString(),\n                            //     new Date(item?.dateEnd.split('T')[0]).toISOString() //.setHours(new Date(item?.dateStart).getHours()))\n                            // )  \n\n                            if (!nameProj[index]) {\n                            arr[index] = true \n                            nameProj[index] = item.name\n                            setProjectName(nameProj)\n\n                            endProj[index] = item.dateEnd \n                            setProjectEnd(endProj)\n\n                            statusProj[index] = item.status \n                            setProjectStatus(statusProj)\n\n                            colorProj[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                            setProjectColor(colorProj)\n\n                            //console.log(\"timeProj: \", item)\n                            timeProj[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                            setProjectTime(timeProj)\n\n\n                            cityProj[index] = item.city \n                            setProjectCity(cityProj)\n\n                            commentProj[index] = item.comment\n                            setProjectComment(commentProj)\n\n                            specifProj[index] = item.specifika\n                            setProjectSpecifika(specifProj)\n\n                            idProj[index] = item.id\n                            setProjectId(idProj)\n                            } \n                            else if (!nameProj2[index]) {\n                                arr2[index] = true \n                                nameProj2[index] = item.name\n                                setProjectName2(nameProj2)\n\n                                endProj2[index] = item.dateEnd \n                                setProjectEnd2(endProj2)\n\n                                statusProj2[index] = item.status \n                                setProjectStatus2(statusProj2)\n\n                                colorProj2[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                                setProjectColor2(colorProj2)\n\n                                timeProj2[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                                setProjectTime2(timeProj2)\n\n                                cityProj2[index] = item.city \n                                setProjectCity2(cityProj2)\n\n                                commentProj2[index] = item.comment\n                                setProjectComment2(commentProj2)\n\n                                specifProj2[index] = item.specifika\n                                setProjectSpecifika2(specifProj2)\n\n                                idProj2[index] = item.id\n                                setProjectId2(idProj2)\n                            } \n                            else if (!nameProj3[index]) {\n                                arr3[index] = true \n                                nameProj3[index] = item.name\n                                setProjectName3(nameProj3)\n\n                                endProj3[index] = item.dateEnd \n                                setProjectEnd3(endProj3)\n\n                                statusProj3[index] = item.status \n                                setProjectStatus3(statusProj3)\n\n                                colorProj3[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                                setProjectColor3(colorProj3)\n\n                                timeProj3[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                                setProjectTime3(timeProj3)\n\n                                cityProj3[index] = item.city \n                                setProjectCity3(cityProj3)\n\n                                commentProj3[index] = item.comment\n                                setProjectComment3(commentProj3)\n\n                                specifProj3[index] = item.specifika\n                                setProjectSpecifika3(specifProj3)\n\n                                idProj3[index] = item.id\n                                setProjectId3(idProj3)\n                            } \n                            else if (!nameProj4[index]) { \n                                arr4[index] = true \n                                nameProj4[index] = item.name\n                                setProjectName4(nameProj4)\n\n                                endProj4[index] = item.dateEnd \n                                setProjectEnd4(endProj4)\n\n                                statusProj4[index] = item.status \n                                setProjectStatus4(statusProj4)\n\n                                colorProj4[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                                setProjectColor4(colorProj4)\n\n                                timeProj4[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                                setProjectTime4(timeProj4)\n\n                                cityProj4[index] = item.city \n                                setProjectCity4(cityProj4)\n\n                                commentProj4[index] = item.comment\n                                setProjectComment4(commentProj4)\n\n                                specifProj4[index] = item.specifika\n                                setProjectSpecifika4(specifProj4)\n\n                                idProj4[index] = item.id\n                                setProjectId4(idProj4)\n                            } \n                            else if (!nameProj5[index]) {\n                                arr5[index] = true \n                                nameProj5[index] = item.name\n                                setProjectName5(nameProj5)\n\n                                endProj5[index] = item.dateEnd \n                                setProjectEnd5(endProj5)\n\n                                statusProj5[index] = item.status \n                                setProjectStatus5(statusProj5)\n\n                                colorProj5[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                                setProjectColor5(colorProj5)\n\n                                timeProj5[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                                setProjectTime5(timeProj5)\n\n                                cityProj5[index] = item.city \n                                setProjectCity5(cityProj5)\n\n                                commentProj5[index] = item.comment\n                                setProjectComment5(commentProj5)\n\n                                specifProj5[index] = item.specifika\n                                setProjectSpecifika5(specifProj5)\n\n                                idProj5[index] = item.id\n                                setProjectId5(idProj5)\n                            }  \n                            else if (!nameProj6[index]) {\n                                arr6[index] = true \n                                nameProj6[index] = item.name\n                                setProjectName6(nameProj6)\n\n                                endProj6[index] = item.dateEnd \n                                setProjectEnd6(endProj6)\n\n                                statusProj6[index] = item.status \n                                setProjectStatus6(statusProj6)\n\n                                colorProj6[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                                setProjectColor6(colorProj6)\n\n                                timeProj6[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                                setProjectTime6(timeProj6)\n\n                                cityProj6[index] = item.city \n                                setProjectCity6(cityProj6)\n\n                                commentProj6[index] = item.comment\n                                setProjectComment6(commentProj6)\n\n                                specifProj6[index] = item.specifika\n                                setProjectSpecifika6(specifProj6)\n\n                                idProj6[index] = item.id\n                                setProjectId6(idProj6)\n                            } \n                            else if (!nameProj7[index]) {\n                                arr7[index] = true \n                                nameProj7[index] = item.name\n                                setProjectName7(nameProj7)\n\n                                endProj7[index] = item.dateEnd \n                                setProjectEnd7(endProj7)\n\n                                statusProj7[index] = item.status \n                                setProjectStatus7(statusProj7)\n\n                                colorProj7[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                                setProjectColor7(colorProj7)\n\n                                timeProj7[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                                setProjectTime7(timeProj7)\n\n                                cityProj7[index] = item.city \n                                setProjectCity7(cityProj7)\n\n                                commentProj7[index] = item.comment\n                                setProjectComment7(commentProj7)\n\n                                specifProj7[index] = item.specifika\n                                setProjectSpecifika7(specifProj7)\n\n                                idProj7[index] = item.id\n                                setProjectId7(idProj7)\n                            }                 \n                        }\n\n                    } else {\n                        if ((new Date(new Date(2024, month, d).setHours(new Date(2024, month, d).getHours()+3)).getTime() >= new Date(item?.dateStart.split('T')[0]).getTime()) && \n                            (new Date(new Date(2024, month, d).setHours(new Date(2024, month, d).getHours()+3)).getTime() <= new Date(item?.dateEnd?.split('T')[0]).getTime()) ) {\n\n                            if (!nameProj[index]) {\n                            arr[index] = true \n                            nameProj[index] = item.name\n                            setProjectName(nameProj)\n\n                            endProj[index] = item.dateEnd \n                            setProjectEnd(endProj)\n\n                            statusProj[index] = item.status \n                            setProjectStatus(statusProj)\n\n                            colorProj[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                            setProjectColor(colorProj)\n\n                            //console.log(\"timeProj: \", item)\n                            timeProj[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                            setProjectTime(timeProj)\n\n\n                            cityProj[index] = item.city \n                            setProjectCity(cityProj)\n\n                            commentProj[index] = item.comment\n                            setProjectComment(commentProj)\n\n                            specifProj[index] = item.specifika\n                            setProjectSpecifika(specifProj)\n\n                            idProj[index] = item.id\n                            setProjectId(idProj)\n                            } \n                            else if (!nameProj2[index]) {\n                                arr2[index] = true \n                                nameProj2[index] = item.name\n                                setProjectName2(nameProj2)\n\n                                endProj2[index] = item.dateEnd \n                                setProjectEnd2(endProj2)\n\n                                statusProj2[index] = item.status \n                                setProjectStatus2(statusProj2)\n\n                                colorProj2[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                                setProjectColor2(colorProj2)\n\n                                timeProj2[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                                setProjectTime2(timeProj2)\n\n                                cityProj2[index] = item.city \n                                setProjectCity2(cityProj2)\n\n                                commentProj2[index] = item.comment\n                                setProjectComment2(commentProj2)\n\n                                specifProj2[index] = item.specifika\n                                setProjectSpecifika2(specifProj2)\n\n                                idProj2[index] = item.id\n                                setProjectId2(idProj2)\n                            } \n                            else if (!nameProj3[index]) {\n                                arr3[index] = true \n                                nameProj3[index] = item.name\n                                setProjectName3(nameProj3)\n\n                                endProj3[index] = item.dateEnd \n                                setProjectEnd3(endProj3)\n\n                                statusProj3[index] = item.status \n                                setProjectStatus3(statusProj3)\n\n                                colorProj3[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                                setProjectColor3(colorProj3)\n\n                                timeProj3[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                                setProjectTime3(timeProj3)\n\n                                cityProj3[index] = item.city \n                                setProjectCity3(cityProj3)\n\n                                commentProj3[index] = item.comment\n                                setProjectComment3(commentProj3)\n\n                                specifProj3[index] = item.specifika\n                                setProjectSpecifika3(specifProj3)\n\n                                idProj3[index] = item.id\n                                setProjectId3(idProj3)\n                            } \n                            else if (!nameProj4[index]) { \n                                arr4[index] = true \n                                nameProj4[index] = item.name\n                                setProjectName4(nameProj4)\n\n                                endProj4[index] = item.dateEnd \n                                setProjectEnd4(endProj4)\n\n                                statusProj4[index] = item.status \n                                setProjectStatus4(statusProj4)\n\n                                colorProj4[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                                setProjectColor4(colorProj4)\n\n                                timeProj4[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                                setProjectTime4(timeProj4)\n\n                                cityProj4[index] = item.city \n                                setProjectCity4(cityProj4)\n\n                                commentProj4[index] = item.comment\n                                setProjectComment4(commentProj4)\n\n                                specifProj4[index] = item.specifika\n                                setProjectSpecifika4(specifProj4)\n\n                                idProj4[index] = item.id\n                                setProjectId4(idProj4)\n                            } \n                            else if (!nameProj5[index]) {\n                                arr5[index] = true \n                                nameProj5[index] = item.name\n                                setProjectName5(nameProj5)\n\n                                endProj5[index] = item.dateEnd \n                                setProjectEnd5(endProj5)\n\n                                statusProj5[index] = item.status \n                                setProjectStatus5(statusProj5)\n\n                                colorProj5[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                                setProjectColor5(colorProj5)\n\n                                timeProj5[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                                setProjectTime5(timeProj5)\n\n                                cityProj5[index] = item.city \n                                setProjectCity5(cityProj5)\n\n                                commentProj5[index] = item.comment\n                                setProjectComment5(commentProj5)\n\n                                specifProj5[index] = item.specifika\n                                setProjectSpecifika5(specifProj5)\n\n                                idProj5[index] = item.id\n                                setProjectId5(idProj5)\n                            }  \n                            else if (!nameProj6[index]) {\n                                arr6[index] = true \n                                nameProj6[index] = item.name\n                                setProjectName6(nameProj6)\n\n                                endProj6[index] = item.dateEnd \n                                setProjectEnd6(endProj6)\n\n                                statusProj6[index] = item.status \n                                setProjectStatus6(statusProj6)\n\n                                colorProj6[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                                setProjectColor6(colorProj6)\n\n                                timeProj6[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                                setProjectTime6(timeProj6)\n\n                                cityProj6[index] = item.city \n                                setProjectCity6(cityProj6)\n\n                                commentProj6[index] = item.comment\n                                setProjectComment6(commentProj6)\n\n                                specifProj6[index] = item.specifika\n                                setProjectSpecifika6(specifProj6)\n\n                                idProj6[index] = item.id\n                                setProjectId6(idProj6)\n                            } \n                            else if (!nameProj7[index]) {\n                                arr7[index] = true \n                                nameProj7[index] = item.name\n                                setProjectName7(nameProj7)\n\n                                endProj7[index] = item.dateEnd \n                                setProjectEnd7(endProj7)\n\n                                statusProj7[index] = item.status \n                                setProjectStatus7(statusProj7)\n\n                                colorProj7[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                                setProjectColor7(colorProj7)\n\n                                timeProj7[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                                setProjectTime7(timeProj7)\n\n                                cityProj7[index] = item.city \n                                setProjectCity7(cityProj7)\n\n                                commentProj7[index] = item.comment\n                                setProjectComment7(commentProj7)\n\n                                specifProj7[index] = item.specifika\n                                setProjectSpecifika7(specifProj7)\n\n                                idProj7[index] = item.id\n                                setProjectId7(idProj7)\n                            }                 \n                        }\n                    } \n                } else {\n                    if ((new Date(new Date(2024, month, d).setHours(new Date(2024, month, d).getHours()+3)).toISOString() === new Date(item?.dateStart.split('T')[0]).toISOString()) ) {\n                        if (!nameProj[index]) {\n                            arr[index] = true \n                            nameProj[index] = item.name\n                            setProjectName(nameProj)\n\n                            endProj[index] = item.dateEnd \n                            setProjectEnd(endProj)\n\n                            statusProj[index] = item.status \n                            setProjectStatus(statusProj)\n\n                            colorProj[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                            setProjectColor(colorProj)\n\n                            //console.log(\"timeProj: \", item)\n                            timeProj[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                            setProjectTime(timeProj)\n\n\n                            cityProj[index] = item.city \n                            setProjectCity(cityProj)\n\n                            commentProj[index] = item.comment\n                            setProjectComment(commentProj)\n\n                            specifProj[index] = item.specifika\n                            setProjectSpecifika(specifProj)\n\n                            idProj[index] = item.id\n                            setProjectId(idProj)\n                        } \n                        else if (!nameProj2[index]) {\n                            arr2[index] = true \n                            nameProj2[index] = item.name\n                            setProjectName2(nameProj2)\n\n                            endProj2[index] = item.dateEnd \n                            setProjectEnd2(endProj2)\n\n                            statusProj2[index] = item.status \n                            setProjectStatus2(statusProj2)\n\n                            colorProj2[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                            setProjectColor2(colorProj2)\n\n                            timeProj2[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                            setProjectTime2(timeProj2)\n\n                            cityProj2[index] = item.city \n                            setProjectCity2(cityProj2)\n\n                            commentProj2[index] = item.comment\n                            setProjectComment2(commentProj2)\n\n                            specifProj2[index] = item.specifika\n                            setProjectSpecifika2(specifProj2)\n\n                            idProj2[index] = item.id\n                            setProjectId2(idProj2)\n                        } \n                        else if (!nameProj3[index]) {\n                            arr3[index] = true \n                            nameProj3[index] = item.name\n                            setProjectName3(nameProj3)\n\n                            endProj3[index] = item.dateEnd \n                            setProjectEnd3(endProj3)\n\n                            statusProj3[index] = item.status \n                            setProjectStatus3(statusProj3)\n\n                            colorProj3[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                            setProjectColor3(colorProj3)\n\n                            timeProj3[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                            setProjectTime3(timeProj3)\n\n                            cityProj3[index] = item.city \n                            setProjectCity3(cityProj3)\n\n                            commentProj3[index] = item.comment\n                            setProjectComment3(commentProj3)\n\n                            specifProj3[index] = item.specifika\n                            setProjectSpecifika3(specifProj3)\n\n                            idProj3[index] = item.id\n                            setProjectId3(idProj3)\n                        } \n                        else if (!nameProj4[index]) { \n                            arr4[index] = true \n                            nameProj4[index] = item.name\n                            setProjectName4(nameProj4)\n\n                            endProj4[index] = item.dateEnd \n                            setProjectEnd4(endProj4)\n\n                            statusProj4[index] = item.status \n                            setProjectStatus4(statusProj4)\n\n                            colorProj4[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                            setProjectColor4(colorProj4)\n\n                            timeProj4[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                            setProjectTime4(timeProj4)\n\n                            cityProj4[index] = item.city \n                            setProjectCity4(cityProj4)\n\n                            commentProj4[index] = item.comment\n                            setProjectComment4(commentProj4)\n\n                            specifProj4[index] = item.specifika\n                            setProjectSpecifika4(specifProj4)\n\n                            idProj4[index] = item.id\n                            setProjectId4(idProj4)\n                        } \n                        else if (!nameProj5[index]) {\n                            arr5[index] = true \n                            nameProj5[index] = item.name\n                            setProjectName5(nameProj5)\n\n                            endProj5[index] = item.dateEnd \n                            setProjectEnd5(endProj5)\n\n                            statusProj5[index] = item.status \n                            setProjectStatus5(statusProj5)\n\n                            colorProj5[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                            setProjectColor5(colorProj5)\n\n                            timeProj5[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                            setProjectTime5(timeProj5)\n\n                            cityProj5[index] = item.city \n                            setProjectCity5(cityProj5)\n\n                            commentProj5[index] = item.comment\n                            setProjectComment5(commentProj5)\n\n                            specifProj5[index] = item.specifika\n                            setProjectSpecifika5(specifProj5)\n\n                            idProj5[index] = item.id\n                            setProjectId5(idProj5)\n                        }  \n                        else if (!nameProj6[index]) {\n                            arr6[index] = true \n                            nameProj6[index] = item.name\n                            setProjectName6(nameProj6)\n\n                            endProj6[index] = item.dateEnd \n                            setProjectEnd6(endProj6)\n\n                            statusProj6[index] = item.status \n                            setProjectStatus6(statusProj6)\n\n                            colorProj6[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                            setProjectColor6(colorProj6)\n\n                            timeProj6[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                            setProjectTime6(timeProj6)\n\n                            cityProj6[index] = item.city \n                            setProjectCity6(cityProj6)\n\n                            commentProj6[index] = item.comment\n                            setProjectComment6(commentProj6)\n\n                            specifProj6[index] = item.specifika\n                            setProjectSpecifika6(specifProj6)\n\n                            idProj6[index] = item.id\n                            setProjectId6(idProj6)\n                        } \n                        else if (!nameProj7[index]) {\n                            arr7[index] = true \n                            nameProj7[index] = item.name\n                            setProjectName7(nameProj7)\n\n                            endProj7[index] = item.dateEnd \n                            setProjectEnd7(endProj7)\n\n                            statusProj7[index] = item.status \n                            setProjectStatus7(statusProj7)\n\n                            colorProj7[index] = statusData.find((stat)=> stat.label === item.status)?.color \n                            setProjectColor7(colorProj7)\n\n                            timeProj7[index] = item.dateStart.split('T')[1]?.slice(0, 5) \n                            setProjectTime7(timeProj7)\n\n                            cityProj7[index] = item.city \n                            setProjectCity7(cityProj7)\n\n                            commentProj7[index] = item.comment\n                            setProjectComment7(commentProj7)\n\n                            specifProj7[index] = item.specifika\n                            setProjectSpecifika7(specifProj7)\n\n                            idProj7[index] = item.id\n                            setProjectId7(idProj7)\n                        }                 \n                    }\n                }\n                           \n            })\n            \n\n            setProject(arr)     \n            setProject2(arr2) \n            setProject3(arr3) \n            setProject4(arr4) \n            setProject5(arr5) \n            setProject6(arr6) \n            setProject7(arr7) \n        })\n\n    }, [projects, month])\n\n\n\n\n    // Создание проекта\n    const addNewProject = async(item, number, day) => {\n        console.log(\"day: \", day)\n\n        day.setHours(day.getHours() + 3); //00:00\n\n        const projectTitle = 'Название проекта'\n        const projectStatus = 'Новый'\n        const projectColor = '#1E90FF'\n\n        const data = {\n            name: projectTitle, \n            status: projectStatus,\n            specifika: '',\n            city: '',\n            datestart: day, \n            dateend: null, //new Date(endDay.setDate(endDay.getDate() + 1)).toISOString(), \n            teh: '', \n            managerId: '', \n            companyId: '', \n            chatId: '1775583141', \n            spec: '', \n            geo: '',\n            index: 1,\n            number: number,\n        }\n\n        //добавить проект в базу данных\n        const res = await addProject(data)\n\n        console.log(\"res: \", res)\n\n        //setProjectName(projectTitle)\n\n        if (number === 1) {\n            let arr = [...project]\n            arr[item] = true\n            setProject(arr)\n\n            let nameProj = [...projectName]\n            nameProj[item] = projectTitle\n            setProjectName(nameProj)\n\n            let statusProj = [...projectStatus]\n            statusProj[item] = projectStatus\n            setProjectStatus(statusProj)\n\n            let colorProj = [...projectColor]\n            colorProj[item] = projectColor\n            setProjectColor(colorProj)\n\n            let idProj = [...projectId]\n            idProj[item] = res?.id\n            setProjectId(idProj)\n\n            // let endDay = new Date(day.getTime());\n            // let endProj = [...projectEnd]\n            // endProj[item] =  endDay //new Date(endDay.setDate(endDay.getDate() + 1)).toISOString() \n            // setProjectEnd(endProj)\n\n            let timeProj = []\n            timeProj[item] = \"00:00\" \n            setProjectTime(timeProj)\n\n            let arr2 = []\n            arr2[item] = false\n            setShowButtonAdd(arr2)\n        } \n        if (number === 2) {\n            let arr = [...project2]\n            arr[item] = true\n            setProject2(arr)\n\n            let nameProj = [...projectName2]\n            nameProj[item] = projectTitle\n            setProjectName2(nameProj)\n\n            let statusProj2 = [...projectStatus2]\n            statusProj2[item] = projectStatus\n            setProjectStatus2(statusProj2)\n\n            let colorProj2 = [...projectColor2]\n            colorProj2[item] = projectColor\n            setProjectColor2(colorProj2)\n\n            let idProj = [...projectId2]\n            idProj[item] = res?.id\n            setProjectId2(idProj)\n\n            // let endDay = new Date(day.getTime());\n            // let endProj = [...projectEnd2]\n            // endProj[item] =  endDay //new Date(endDay.setDate(endDay.getDate() + 1)).toISOString() \n            // setProjectEnd2(endProj)\n\n            let timeProj = []\n            timeProj[item] = \"00:00\" \n            setProjectTime2(timeProj)\n\n            let arr2 = []\n            arr2[item] = false\n            setShowButtonAdd2(arr2)\n        } \n        if (number === 3) {\n            let arr = [...project3]\n            arr[item] = true\n            setProject3(arr)\n\n            let nameProj = [...projectName3]\n            nameProj[item] = projectTitle\n            setProjectName3(nameProj)\n\n            let statusProj3 = [...projectStatus3]\n            statusProj3[item] = projectStatus\n            setProjectStatus3(statusProj3)\n\n            let colorProj3 = [...projectColor3]\n            colorProj3[item] = projectColor\n            setProjectColor3(colorProj3)\n\n            let idProj = [...projectId3]\n            idProj[item] = res?.id\n            setProjectId3(idProj)\n\n            // let endDay = new Date(day.getTime());\n            // let endProj = [...projectEnd3]\n            // endProj[item] = endDay // new Date(endDay.setDate(endDay.getDate() + 1)).toISOString() \n            // setProjectEnd3(endProj)\n\n            let timeProj = []\n            timeProj[item] = \"00:00\" \n            setProjectTime3(timeProj)\n\n            let arr2 = []\n            arr2[item] = false\n            setShowButtonAdd3(arr2)\n        } \n        if (number === 4) {\n            let arr = [...project4]\n            arr[item] = true\n            setProject4(arr)\n\n            let nameProj = [...projectName4]\n            nameProj[item] = projectTitle\n            setProjectName4(nameProj)\n\n            let statusProj4 = [...projectStatus4]\n            statusProj4[item] = projectStatus\n            setProjectStatus4(statusProj4)\n\n            let colorProj4 = [...projectColor4]\n            colorProj4[item] = projectColor\n            setProjectColor4(colorProj4)\n\n            let idProj = [...projectId4]\n            idProj[item] = res?.id\n            setProjectId4(idProj)\n\n            // let endDay = new Date(day.getTime());\n            // let endProj = [...projectEnd4]\n            // endProj[item] = endDay // new Date(endDay.setDate(endDay.getDate() + 1)).toISOString() \n            // setProjectEnd4(endProj)\n\n            let timeProj = []\n            timeProj[item] = \"00:00\" \n            setProjectTime4(timeProj)\n\n            let arr2 = []\n            arr2[item] = false\n            setShowButtonAdd4(arr2)\n        }\n        if (number === 5) {\n            let arr = [...project5]\n            arr[item] = true\n            setProject5(arr)\n\n            let nameProj = [...projectName5]\n            nameProj[item] = projectTitle\n            setProjectName5(nameProj)\n\n            let statusProj5 = [...projectStatus5]\n            statusProj5[item] = projectStatus\n            setProjectStatus5(statusProj5)\n\n            let colorProj5 = [...projectColor5]\n            colorProj5[item] = projectColor\n            setProjectColor5(colorProj5)\n\n            let idProj = [...projectId5]\n            idProj[item] = res?.id\n            setProjectId5(idProj)\n\n            // let endDay = new Date(day.getTime());\n            // let endProj = [...projectEnd5]\n            // endProj[item] = endDay // new Date(endDay.setDate(endDay.getDate() + 1)).toISOString() \n            // setProjectEnd5(endProj)\n\n            let timeProj = []\n            timeProj[item] = \"00:00\" \n            setProjectTime5(timeProj)\n\n            let arr2 = []\n            arr2[item] = false\n            setShowButtonAdd5(arr2)\n        } \n        if (number === 6) {\n            let arr = [...project6]\n            arr[item] = true\n            setProject6(arr)\n\n            let nameProj = [...projectName6]\n            nameProj[item] = projectTitle\n            setProjectName6(nameProj)\n\n            let statusProj6 = [...projectStatus6]\n            statusProj6[item] = projectStatus\n            setProjectStatus6(statusProj6)\n\n            let colorProj6 = [...projectColor6]\n            colorProj6[item] = projectColor\n            setProjectColor6(colorProj6)\n\n            let idProj = [...projectId6]\n            idProj[item] = res?.id\n            setProjectId6(idProj)\n\n            // let endDay = new Date(day.getTime());\n            // let endProj = [...projectEnd6]\n            // endProj[item] = endDay // new Date(endDay.setDate(endDay.getDate() + 1)).toISOString() \n            // setProjectEnd6(endProj)\n\n            let timeProj = []\n            timeProj[item] = \"00:00\" \n            setProjectTime6(timeProj)\n\n            let arr2 = []\n            arr2[item] = false\n            setShowButtonAdd6(arr2)\n        } \n        if (number === 7) {\n            let arr = [...project7]\n            arr[item] = true\n            setProject7(arr)\n\n            let nameProj = [...projectName7]\n            nameProj[item] = projectTitle\n            setProjectName7(nameProj)\n\n            let statusProj7 = [...projectStatus7]\n            statusProj7[item] = projectStatus\n            setProjectStatus7(statusProj7)\n\n            let colorProj7 = [...projectColor7]\n            colorProj7[item] = projectColor\n            setProjectColor7(colorProj7)\n\n            let idProj = [...projectId7]\n            idProj[item] = res?.id\n            setProjectId7(idProj)\n\n            // let endDay = new Date(day.getTime());\n            // let endProj = [...projectEnd7]\n            // endProj[item] = endDay // new Date(endDay.setDate(endDay.getDate() + 1)).toISOString() \n            // setProjectEnd7(endProj)\n\n            let timeProj = []\n            timeProj[item] = \"00:00\" \n            setProjectTime7(timeProj)\n\n            let arr2 = []\n            arr2[item] = false\n            setShowButtonAdd7(arr2)\n        }\n\n\n        setTimeout(()=> {\n            setProjects((projects) => {\t\n                const usersCopy = JSON.parse(JSON.stringify(projects));\n                usersCopy.push(res)\n\n                return usersCopy;\n            });\n        }, 10000)\n        \n        \n    }\n\n\n    useEffect(() => {\n        //console.log(ref.current.clientHeight)\n        setHeight(ref.current.clientHeight + 74)\n        \n    })\n\n    useEffect(() => {\n        //console.log(today)\n        setDay(date.getDate());\n        setMonth(date.getMonth());\n        setYear(date.getFullYear());\n        setStartDay(getStartDayOfMonth(date));\n\n        const firstDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\n        const weekdayOfFirstDay = firstDayOfMonth.getUTCDay();\n        \n        let arr = []\n        for (let day = 0; day < 35; day++) {\n        if (day === 0 && weekdayOfFirstDay === 0) {\n            firstDayOfMonth.setDate(firstDayOfMonth.getDate() - 7);\n        } else if (day === 0) {\n            firstDayOfMonth.setDate(firstDayOfMonth.getDate() + (day - weekdayOfFirstDay));\n        } else {\n            firstDayOfMonth.setDate(firstDayOfMonth.getDate() + 1);\n        }\n    \n        let calendarDay = {\n            currentMonth: (firstDayOfMonth.getMonth() === date.getMonth()),\n            date: (new Date(firstDayOfMonth)),\n            month: firstDayOfMonth.getMonth(),\n            number: firstDayOfMonth.getDate(),\n            selected: (firstDayOfMonth.toDateString() === date.toDateString()),\n            year: firstDayOfMonth.getFullYear()\n        }\n    \n        arr.push(calendarDay);\n        setCurrentDays(arr)\n        //console.log(currentDays)\n        }\n    }, [date]);\n\n    function getStartDayOfMonth(date) {\n        return new Date(date.getFullYear(), date.getMonth(), 0).getDay();\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);\n    }\n\n    const days = isLeapYear(date.getFullYear()) ? DAYS_LEAP : DAYS;\n\n    const overDay = (index, td) => {\n        let arr = []\n        arr[index] = true\n\n        if (td === 1) {\n            if (!project[index]) {\n                setShowButtonAdd(arr)\n            }           \n        } else if (td === 2) {\n            if (!project2[index]) {\n                setShowButtonAdd2(arr)\n            } \n        } else if (td === 3) {\n            if (!project3[index]) {\n                setShowButtonAdd3(arr)\n            } \n        } else if (td === 4) {\n            if (!project4[index]) {\n                setShowButtonAdd4(arr)\n            } \n        } else if (td === 5) {\n            if (!project5[index]) {\n                setShowButtonAdd5(arr)\n            }  \n        } else if (td === 6) {\n            if (!project6[index]) {\n                setShowButtonAdd6(arr)\n            }  \n        } else if (td === 7) {\n            if (!project7[index]) {\n                setShowButtonAdd7(arr)\n            }  \n        }\n    }\n\n    const outDay = (index, td) => {\n        let arr = []\n        arr[index] = false\n        if (td === 1) {           \n            setShowButtonAdd(arr)\n        } else if (td === 2) {\n            setShowButtonAdd2(arr) \n        } else if (td === 3) {\n            setShowButtonAdd3(arr) \n        } else if (td === 4) {\n            setShowButtonAdd4(arr) \n        } else if (td === 5) {\n            setShowButtonAdd5(arr) \n        } else if (td === 6) {\n            setShowButtonAdd6(arr) \n        } else if (td === 7) {\n            setShowButtonAdd7(arr) \n        }\n        \n    }\n\n    const nextMonth = () => {\n        setDate(new Date(year, month + 1, day))\n        //setMonth(month + 1)\n    }\n\n    const prevMonth = () => {\n        setDate(new Date(year, month - 1, day))\n    }\n\n\n    const changeMonth = (selectedOption) => {\n        //console.log(manthList.findIndex(el => el.value === selectedOption.value)); \n        let index = manthList.findIndex(el => el.value === selectedOption.value)\n        setDate(new Date(year, index, day))\n    }\n    \n  return (\n    <div className='frame2' ref={ref} style={{overflow: 'scroll', height: '640px'}}>\n        <div className='calendar-header'>\n            <CButton onClick={prevMonth} className='uley_add_user uley_select_reset' style={{marginRight: '10px', padding: '18px', marginLeft: '0'}}>\n                <span style={{fontSize: '36px', color: '#2d2e38', position: 'absolute', top: '-14px', left: '11px'}}>\n                -</span>\n              </CButton>\n            <Select\n                className=\"uley_react_select\"\n                options={manthList}\n                //defaultValue={manthList[month]}\n                value={manthList[month]}\n                onChange={changeMonth}\n                classNamePrefix=\"custom-select_3\"\n            />\n            <CButton onClick={nextMonth} className='uley_add_user uley_select_reset' style={{marginLeft: '0px', padding: '18px'}}>\n                <span style={{fontSize: '36px', color: '#2d2e38', position: 'absolute', top: '-13px', left: '6px'}}>\n                +</span>\n            </CButton>\n        </div>\n        <table className='frame2'>\n            <tr style={{position: 'sticky', top: '0px', backgroundColor: '#131c21', zIndex: '100'}}>\n                <th className='table-header'>1</th>\n                <th className='table-header'>2</th>\n                <th className='table-header'>3</th>\n                <th className='table-header'>4</th>\n                <th className='table-header'>5</th>\n                <th className='table-header'>6</th>\n                <th className='table-header'>7</th>\n            </tr>\n            {Array(days[month] + (startDay - 1)).fill(null).map((_, index) => {\n                const d = index - (startDay - 2);\n                const isWeekend = new Date(2024, month, d) \n                //console.log(\"index: \", index, startDay, d)\n\n                if (d > 0) {\n                    return (\n                        <><tr key={index}>\n                            <td className='day2' onMouseOver={()=>overDay(index, 1)} onMouseOut={()=>outDay(index, 1)} style={{backgroundColor: isWeekend.getDay() == 6 || isWeekend.getDay() == 0 ? '#11171a' : ''}}>\n                                <p className='date-day'>{String(d).padStart(2, \"0\") + '.'+ String(month+1).padStart(2, \"0\")}</p>\n                                <CButton onClick={()=>addNewProject(index, 1, new Date(2024, month, d))} className='uley_add_user uley_select_reset joinBtn' style={{display: showButtonAdd[index] ? 'block' : 'none', height: '26px', width: '26px'}}>\n                                    <span style={{fontSize: '25px', color: '#2d2e38', position: 'absolute', top: '-10px', left: '4px'}}>\n                                    +</span>\n                                </CButton>\n                                {project[index] ? \n                                    <><p className='date-proj-day2' style={{color: `${projectColor[index]}`}}>{String(d).padStart(2, \"0\") + '.'+ String(month+1).padStart(2, \"0\")}</p>\n                                    <div className='view-project' \n                                        onClick={()=>openProject(month, index, 1, projectId[index], projectName[index], projectEnd[index], projectStatus[index], projectTime[index], projectSpecifika[index])} \n                                        style={{border: `1px solid ${projectColor[index]}`}}\n                                    >\n                                        <p style={{fontSize: '16px', marginBottom: '3px'}}>{projectName[index] && projectName[index].length > 15 ? projectName[index].substr(0, 15) + '...' : projectName[index]}</p>   \n                                        <p className='viewStatus' style={{color: `${projectColor[index]}`}}>{projectStatus[index]}</p>\n\n                                        <p className='time-project' style={{color: `${projectColor[index]}`}}>{projectTime[index]}</p>\n                                    </div></>\n                                    : <></>\n                                }\n                            </td>\n                            <td className='day2' onMouseOver={()=>overDay(index, 2)} onMouseOut={()=>outDay(index, 2)} style={{backgroundColor: isWeekend.getDay() == 6 || isWeekend.getDay() == 0 ? '#11171a' : ''}}>\n                                <p className='date-day'>{String(d).padStart(2, \"0\") + '.'+ String(month+1).padStart(2, \"0\")}</p>\n                                <CButton onClick={()=>addNewProject(index, 2, new Date(2024, month, d))} className='uley_add_user uley_select_reset joinBtn' style={{display: showButtonAdd2[index] ? 'block' : 'none', height: '26px', width: '26px'}}>\n                                    <span style={{fontSize: '25px', color: '#2d2e38', position: 'absolute', top: '-10px', left: '4px'}}>\n                                    +</span>\n                                </CButton>\n                                {project2[index] ? \n                                    <><p className='date-proj-day2' style={{color: `${projectColor2[index]}`}}>{String(d).padStart(2, \"0\") + '.'+ String(month+1).padStart(2, \"0\")}</p>\n                                    <div className='view-project' \n                                        onClick={()=>openProject(month, index, 2, projectId2[index], projectName2[index], projectEnd2[index], projectStatus2[index], projectTime2[index], projectSpecifika2[index])} \n                                        style={{border: `1px solid ${projectColor2[index]}`}}\n                                    >\n                                        <p style={{fontSize: '16px', marginBottom: '3px'}}>{projectName2[index] && projectName2[index].length > 15 ? projectName2[index].substr(0, 15) + '...' : projectName2[index]}</p>   \n                                        <p className='viewStatus' style={{color: `${projectColor2[index]}`}}>{projectStatus2[index]}</p>\n\n                                        <p className='time-project' style={{color: `${projectColor2[index]}`}}>{projectTime2[index]}</p>\n                                    </div></>\n                                    : <></>\n                                }\n                            </td>\n                            <td className='day2' onMouseOver={()=>overDay(index, 3)} onMouseOut={()=>outDay(index, 3)} style={{backgroundColor: isWeekend.getDay() == 6 || isWeekend.getDay() == 0 ? '#11171a' : ''}}>\n                                <p className='date-day'>{String(d).padStart(2, \"0\") + '.'+ String(month+1).padStart(2, \"0\")}</p>\n                                <CButton onClick={()=>addNewProject(index, 3, new Date(2024, month, d))} className='uley_add_user uley_select_reset joinBtn' style={{display: showButtonAdd3[index] ? 'block' : 'none', height: '26px', width: '26px'}}>\n                                    <span style={{fontSize: '25px', color: '#2d2e38', position: 'absolute', top: '-10px', left: '4px'}}>\n                                    +</span>\n                                </CButton>\n                                {project3[index] ? \n                                    <><p className='date-proj-day2' style={{color: `${projectColor3[index]}`}}>{String(d).padStart(2, \"0\") + '.'+ String(month+1).padStart(2, \"0\")}</p>\n                                    <div className='view-project' \n                                        onClick={()=>openProject(month, index, 3, projectId3[index], projectName3[index], projectEnd3[index], projectStatus3[index], projectTime3[index], projectSpecifika3[index])} \n                                        style={{border: `1px solid ${projectColor3[index]}`}}\n                                    >\n                                        <p style={{fontSize: '16px', marginBottom: '3px'}}>{projectName3[index] && projectName3[index].length > 15 ? projectName3[index].substr(0, 15) + '...' : projectName3[index]}</p>   \n                                        <p className='viewStatus' style={{color: `${projectColor3[index]}`}}>{projectStatus3[index]}</p>\n\n                                        <p className='time-project' style={{color: `${projectColor3[index]}`}}>{projectTime3[index]}</p>\n                                    </div></>\n                                    : <></>\n                                }\n                            </td>\n                            <td className='day2' onMouseOver={()=>overDay(index, 4)} onMouseOut={()=>outDay(index, 4)} style={{backgroundColor: isWeekend.getDay() == 6 || isWeekend.getDay() == 0 ? '#11171a' : ''}}>\n                                <p className='date-day'>{String(d).padStart(2, \"0\") + '.'+ String(month+1).padStart(2, \"0\")}</p>\n                                <CButton onClick={()=>addNewProject(index, 4, new Date(2024, month, d))} className='uley_add_user uley_select_reset joinBtn' style={{display: showButtonAdd4[index] ? 'block' : 'none', height: '26px', width: '26px'}}>\n                                    <span style={{fontSize: '25px', color: '#2d2e38', position: 'absolute', top: '-10px', left: '4px'}}>\n                                    +</span>\n                                </CButton>\n                                {project4[index] ? \n                                    <><p className='date-proj-day2' style={{color: `${projectColor4[index]}`}}>{String(d).padStart(2, \"0\") + '.'+ String(month+1).padStart(2, \"0\")}</p>\n                                    <div className='view-project' \n                                        onClick={()=>openProject(month, index, 4, projectId4[index], projectName4[index], projectEnd4[index], projectStatus4[index], projectTime4[index], projectSpecifika4[index])} \n                                        style={{border: `1px solid ${projectColor4[index]}`}}\n                                    >\n                                        <p style={{fontSize: '16px', marginBottom: '3px'}}>{projectName4[index] && projectName4[index].length > 15 ? projectName4[index].substr(0, 15) + '...' : projectName4[index]}</p>   \n                                        <p className='viewStatus' style={{color: `${projectColor4[index]}`}}>{projectStatus4[index]}</p>\n\n                                        <p className='time-project' style={{color: `${projectColor4[index]}`}}>{projectTime4[index]}</p>\n                                    </div></>\n                                    : <></>\n                                }\n                            </td>\n                            <td className='day2' onMouseOver={()=>overDay(index, 5)} onMouseOut={()=>outDay(index, 5)} style={{backgroundColor: isWeekend.getDay() == 6 || isWeekend.getDay() == 0 ? '#11171a' : ''}}>\n                                <p className='date-day'>{String(d).padStart(2, \"0\") + '.'+ String(month+1).padStart(2, \"0\")}</p>\n                                <CButton onClick={()=>addNewProject(index, 5, new Date(2024, month, d))} className='uley_add_user uley_select_reset joinBtn' style={{display: showButtonAdd5[index] ? 'block' : 'none', height: '26px', width: '26px'}}>\n                                    <span style={{fontSize: '25px', color: '#2d2e38', position: 'absolute', top: '-10px', left: '4px'}}>\n                                    +</span>\n                                </CButton>\n                                {project5[index] ? \n                                    <><p className='date-proj-day2' style={{color: `${projectColor5[index]}`}}>{String(d).padStart(2, \"0\") + '.'+ String(month+1).padStart(2, \"0\")}</p>\n                                    <div className='view-project' \n                                        onClick={()=>openProject(month, index, 5, projectId5[index], projectName5[index], projectEnd5[index], projectStatus5[index], projectTime5[index], projectSpecifika5[index])} \n                                        style={{border: `1px solid ${projectColor5[index]}`}}\n                                    >\n                                        <p style={{fontSize: '16px', marginBottom: '3px'}}>{projectName5[index] && projectName5[index].length > 15 ? projectName5[index].substr(0, 15) + '...' : projectName5[index]}</p>   \n                                        <p className='viewStatus' style={{color: `${projectColor5[index]}`}}>{projectStatus5[index]}</p>\n\n                                        <p className='time-project' style={{color: `${projectColor5[index]}`}}>{projectTime5[index]}</p>\n                                    </div></>\n                                    : <></>\n                                }\n                            </td>\n                            <td className='day2' onMouseOver={()=>overDay(index, 6)} onMouseOut={()=>outDay(index, 6)} style={{backgroundColor: isWeekend.getDay() == 6 || isWeekend.getDay() == 0 ? '#11171a' : ''}}>\n                                <p className='date-day'>{String(d).padStart(2, \"0\") + '.'+ String(month+1).padStart(2, \"0\")}</p>\n                                <CButton onClick={()=>addNewProject(index, 6, new Date(2024, month, d))} className='uley_add_user uley_select_reset joinBtn' style={{display: showButtonAdd6[index] ? 'block' : 'none', height: '26px', width: '26px'}}>\n                                    <span style={{fontSize: '25px', color: '#2d2e38', position: 'absolute', top: '-10px', left: '4px'}}>\n                                    +</span>\n                                </CButton>\n                                {project6[index] ?\n                                    <><p className='date-proj-day2' style={{color: `${projectColor6[index]}`}}>{String(d).padStart(2, \"0\") + '.'+ String(month+1).padStart(2, \"0\")}</p>\n                                    <div className='view-project' \n                                        onClick={()=>openProject(month, index, 6, projectId6[index], projectName6[index], projectEnd6[index], projectStatus6[index], projectTime6[index], projectSpecifika6[index])} \n                                        style={{border: `1px solid ${projectColor6[index]}`}}\n                                    >\n                                        <p style={{fontSize: '16px', marginBottom: '3px'}}>{projectName6[index] && projectName6[index].length > 15 ? projectName6[index].substr(0, 15) + '...' : projectName6[index]}</p>   \n                                        <p className='viewStatus' style={{color: `${projectColor6[index]}`}}>{projectStatus6[index]}</p>\n\n                                        <p className='time-project' style={{color: `${projectColor6[index]}`}}>{projectTime6[index]}</p>\n                                    </div></>\n                                    : <></>\n                                }\n                            </td>\n                            <td className='day2' onMouseOver={()=>overDay(index, 7)} onMouseOut={()=>outDay(index, 7)} style={{backgroundColor: isWeekend.getDay() == 6 || isWeekend.getDay() == 0 ? '#11171a' : ''}}>\n                                <p className='date-day'>{String(d).padStart(2, \"0\") + '.'+ String(month+1).padStart(2, \"0\")}</p>\n                                <CButton onClick={()=>addNewProject(index, 7, new Date(2024, month, d))} className='uley_add_user uley_select_reset joinBtn' style={{display: showButtonAdd7[index] ? 'block' : 'none', height: '26px', width: '26px'}}>\n                                    <span style={{fontSize: '25px', color: '#2d2e38', position: 'absolute', top: '-10px', left: '4px'}}>\n                                    +</span>\n                                </CButton>\n                                {project7[index] ? \n                                    <><p className='date-proj-day2' style={{color: `${projectColor7[index]}`}}>{String(d).padStart(2, \"0\") + '.'+ String(month+1).padStart(2, \"0\")}</p>\n                                    <div className='view-project' \n                                        onClick={()=>openProject(month, index, 7, projectId7[index], projectName7[index], projectEnd7[index], projectStatus7[index], projectTime7[index], projectSpecifika7[index])} \n                                        style={{border: `1px solid ${projectColor7[index]}`}}\n                                    >\n                                        <p style={{fontSize: '16px', marginBottom: '3px'}}>{projectName7[index] && projectName7[index].length > 15 ? projectName7[index].substr(0, 15) + '...' : projectName7[index]}</p>   \n                                        <p className='viewStatus' style={{color: `${projectColor7[index]}`}}>{projectStatus7[index]}</p>\n\n                                        <p className='time-project' style={{color: `${projectColor7[index]}`}}>{projectTime7[index]}</p>\n                                    </div></>\n                                    : <></>\n                                }\n                            </td>\n\n                        </tr>\n                        <tr style={{height: '20px'}}></tr>\n                        </>\n                    )\n                }\n            }) \n            }\n            \n        </table>\n        <p onClick={()=>setShowSidebar(true)} style={{position: 'absolute', top: '50%', right: '2px'}}>^</p>\n    </div>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"dropdown\":\"Dropdown52_dropdown__RjSNP\",\"menu\":\"Dropdown52_menu__qMc8Z\",\"active\":\"Dropdown52_active__eEDpc\",\"menuOpen\":\"Dropdown52_menuOpen__yrcCj\",\"close\":\"Dropdown52_close__u5HCk\"};","import React, {useState, useRef, useEffect} from 'react';\nimport Select2 from '../Select2/Select2'\nimport drp from './Dropdown52.module.css'\nimport Close from \"../../assets/images/close.svg\"\nimport { \n  CFormInput,\n} from '@coreui/react'\n\nconst Dropdown5 = ({options, selected, setSelected, index, element, placeholder, setWorker, style}) => {\n    const [menuShow, setMenuShow] = useState(false)\n    const [arrSelect, setArrSelect] = useState({})\n    const [clearShow, setClearShow] = useState(false)\n\n    useEffect(()=> {\n      //console.log(\"selected2: \", selected, index)\n    }, [selected])\n\n    const selectOption = (e, color) => {\n        console.log(\"selected: \", {name: e.target.innerText, color: color})\n        \n        let arr = JSON.parse(JSON.stringify(selected));\n        const userObject = arr[index];\n\t\t\t  arr[index] = { ...userObject, [element]: JSON.stringify({name: e.target.innerText, color: color})};\n\n        setWorker(arr)\n        \n        console.log(\"arr: \", arr)\n        setSelected(arr)\n\n        setMenuShow(!menuShow)\n        setClearShow(false)\n    }\n\n    const dropdownList = options.map((option, i) =>\n        <li key={i} onClick={(e)=>selectOption(e, option.color)} style={{color: `${option.color}`}}>{option.label}</li>\n    )\n\n    const wrapperRef = useRef(null);\n\n  useEffect(() => {\n      /**\n       * Alert if clicked on outside of element\n       */\n      function handleClickOutside(event) {\n        if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n          //alert(\"You clicked outside of me!\");\n          setClearShow(false)\n\n          setMenuShow(false)\n          event.stopPropagation();\n        }\n      }\n      // Bind the event listener\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        // Unbind the event listener on clean up\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n  }, [wrapperRef ]);\n\n  const clickClear = ()=> {\n    setClearShow(false)\n    setMenuShow(false)\n    //setElement('')\n\n    let arr = JSON.parse(JSON.stringify(selected));\n    const userObject = arr[index];\n\t\tarr[index] = { ...userObject, [element]: JSON.stringify({name: '', color: ''})};\n        \n    //console.log(\"arr: \", arr)\n    setSelected(arr)\n  }\n\n    return (\n        <div className={drp.dropdown} ref={wrapperRef}>\n            <Select2\n                menuShow={menuShow}\n                setMenuShow={setMenuShow}\n                clearShow={clearShow} \n                setClearShow={setClearShow}\n                selected={selected ? selected[index] : ''}\n                index={index}\n                el={element}\n                style={{border: 'none!important', color: ``}}\n            />\n            <div style={{position: 'relative'}}>\n                <img src={Close} onClick={clickClear} width={15} alt='' className={drp.close} style={{visibility: clearShow ? 'visible' : 'hidden'}}></img>\n            </div>\n            <ul className={`${drp.menu} ${menuShow && drp.menuOpen}`} style={style}>\n                {dropdownList}\n            </ul>\n        </div>\n    );\n};\n\nexport default Dropdown5;","import {$authHost, $host} from \"./index\";\n\nexport const getMainSpecProject = async (id) =>{\n    try {\n       let response = await $host.get(`api/mainspec/project/get/${id}`);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getMainSpecProject api\", error.message);\n    }\n}\n\nexport const editMainspec = async (data, id) =>{\n    try {\n        await $host.patch(`api/mainspec/update/${id}`, data); \n    } catch (error) {\n        console.log(\"error while calling editMainspec api\",error.message);\n    }\n}\n\nexport const addMainspec = async (data) =>{\n    try {\n        let response = await $host.post(`api/mainspec/add`, data); \n        return response.data;\n    } catch (error) {\n        console.log(\"error while calling addMainspec api\",error.message);\n    }\n}\n\nexport const deleteMainspec = async (id) =>{\n    try {\n        await $host.get(`api/mainspec/delete/${id}`); \n    } catch (error) {\n        console.log(\"error while calling deleteMainspec api\",error.message);\n    }\n}\n\nexport const deleteMainspecProject = async (id) =>{\n    try {\n        await $host.get(`api/mainspec/project/delete/${id}`); \n    } catch (error) {\n        console.log(\"error while calling deleteMainspecProject api\",error.message);\n    }\n}\n\nexport const getMainSpecId = async (id) =>{\n    try {\n       let response = await $host.get(`api/mainspec/${id}`);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getMainSpecId api\", error.message);\n    }\n}\n","import React, { Suspense, useState, useEffect, useRef } from 'react'\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport { Link, useLocation } from 'react-router-dom'\nimport { \n  CContainer, \n  CSpinner, \n  CCol,\n  CRow,\n  CButton, \n  CFormInput,\n  CCard,\n  CCardBody,\n  CTable,\n  CTableBody,\n  CTableRow,\n  CTableDataCell,\n  CTableFoot,\n  CTableHead,\n  CTableHeaderCell,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n  CCardHeader,\n  CCardTitle,\n  CCardText,\n  CCollapse,\n  CFormCheck,\n  CTooltip,\n} from '@coreui/react'\n\n//import Icon from \"./../chat-app-worker/components/Icon\";\nimport InputMask from 'react-input-mask';\nimport {\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from '@tanstack/react-table'\nimport Autocomplete from '@mui/material/Autocomplete';\n\nimport DatePicker from \"react-datepicker\";\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nimport { useUsersContext } from \"../chat-app-new/context/usersContext\";\n\nimport { useTableData } from 'src/components/table/useTableData'\nimport TableHeader from 'src/components/table/TableHeader'\nimport Filters from 'src/components/table/Filters'\n// import Calendar from 'src/components/Calendar/Calendar_old'\nimport Calendar from \"src/components/Calendar/Calendar\";\nimport Calendar2 from \"src/components/Calendar3/Calendar2\";\n\nimport MyDropdown from 'src/components/Dropdown/Dropdown';\nimport MyDropdown4 from 'src/components/Dropdown4/Dropdown4';\nimport MyDropdown5 from 'src/components/Dropdown5/Dropdown5';\nimport MyDropdown52 from 'src/components/Dropdown52/Dropdown52';\nimport MyDropdown6 from 'src/components/Dropdown6/Dropdown6';\n\n\nimport Close from \"../assets/images/clear.svg\"\nimport zamok from \"../assets/images/замок.png\"\nimport zamok2 from \"../assets/images/замок2.png\"\nimport addAvatar from \"../assets/images/add_avatar.png\"\nimport Krestik from './../assets/images/krestik.png';\nimport imgBlock18 from \"./../assets/images/block18.png\";\nimport Trubka from \"./../assets/images/trubka.png\";\nimport Tg from \"./../assets/images/tg.png\";\nimport Star from \"./../assets/images/star.png\";\nimport StarActive from \"./../assets/images/star_activ.svg\";\nimport Disketa from \"./../assets/images/disketa.png\";\nimport arrowDown from 'src/assets/images/arrowDown.svg'\nimport threeDots from 'src/assets/images/three-dots.svg'\n\nimport btnBlue from 'src/assets/images/button_blue.png'\nimport btnRed from 'src/assets/images/button_red.png'\nimport btnGreen from 'src/assets/images/button_green.jpg'\nimport btnYellow from 'src/assets/images/button_yellow.jpg'\n\nimport statusData from 'src/data/statusData';\nimport cities from 'src/data/cities';\nimport specifikaData from 'src/data/specifikaData';\nimport vids from 'src/data/vids';\nimport comtegs from 'src/data/comtegs';\nimport specOnlyData2 from 'src/data/specOnlyData2';\n\nimport { addCanceled, getCanceled, getCanceledId } from '../http/workerAPI'\nimport { getPretendentProjectId, editPretendent, getCreatePredSmeta, getCreateFinSmeta, getCreatePoster } from '../http/adminAPI'\nimport { getProjects, deleteProject, editProject, getProjectId } from '../http/projectAPI'\nimport { sendSpecialistOtkaz } from '../http/specAPI'\nimport { addMainspec, deleteMainspec, editMainspec, getMainSpecProject, getMainSpecId, deleteMainspecProject } from '../http/mainspecAPI'\n\nconst Projects = () => {\n  //const navigate = useNavigate();\n\n  const { columns, data, setData, columnFilters, setColumnFilters, handleActive } = useTableData()\n  const { companysAll, managersAll, workersAll, platformsAll } = useUsersContext();\n\n  const [showSidebar, setShowSidebar] = useState(false)\n  const [showCalendar, setShowCalendar] = useState(false)\n  const [showCalendar2, setShowCalendar2] = useState(true)\n  const [showProject, setShowProject] = useState(false)\n\n  const [showSaveAddress, setShowSaveAddress] = useState(false)\n\n  const [height, setHeight] = useState(600)\n\n  const [projects, setProjects] = useState([]);\n\n  const [id, setId] = useState('');\n  const [crmID, setCrmID] = useState('');\n  const [projectName, setProjectName] = useState('');\n  const [startDate, setStartDate] = useState('')\n  const [endDate, setEndDate] = useState('')\n  const [startTime, setStartTime] = useState('00:00')\n  const [endTime, setEndTime] = useState('')\n  const [city, setCity] = useState('');\n  const [statusProject, setStatusProject] = useState({name: '', color: ''});\n  const [specifikaProject, setSpecifikaProject] = useState({name: '', color: ''});\n  const [vidProject, setVidProject] = useState([]);\n  const [company, setCompany] = useState('');\n  const [companyName, setCompanyName] = useState('');\n  const [companysData, setCompanysData] = useState([]);\n\n  const [managerName, setManagerName] = useState('');\n  const [managerName2, setManagerName2] = useState('');\n\n  const [managersData, setManagersData] = useState([]);\n  const [workersData, setWorkersData] = useState([]);\n  const [specialistName, setSpecialistName] = useState([]);\n\n  const [locationProject, setLocationProject] = useState('');\n  const [platformsData, setPlatformsData] = useState([]);\n\n  const [phone, setPhone] = useState('');\n  const [phone2, setPhone2] = useState('');\n\n  const [teh1, setTeh1] = useState('');\n  const [teh2, setTeh2] = useState('');\n  const [teh3, setTeh3] = useState('');\n  const [teh4, setTeh4] = useState('');\n  const [teh5, setTeh5] = useState('');\n  const [teh6, setTeh6] = useState('');\n  const [teh7, setTeh7] = useState('');\n  const [teh8, setTeh8] = useState('');\n  const [tehText, setTehText] = useState('');\n  const [address, setAddress] = useState('');\n  const [geoId, setGeoId] = useState('');\n  const [comment, setComment] = useState('');\n  \n  const [comteg, setComteg] = useState([]);\n  const [spec, setSpec] = useState([]);\n  const [stavka, setStavka] = useState([]);\n  const [statusPretendent, setStatusPretendent] = useState('');\n\n  const [visibleDelete, setVisibleDelete] = useState(false)\n  const [visibleA, setVisibleA] = useState(false)\n  const [visibleB, setVisibleB] = useState(false)\n  const [visibleC, setVisibleC] = useState(false)\n\n  const [showMainTable, setShowMainTable] = useState(false)\n  const [showPretendentTable, setShowPretendentTable] = useState(false)\n  const [showPosterTable, setShowPosterTable] = useState(false)\n  const [showDots, setShowDots] = useState(false)\n  const [showModal, setShowModal] = useState(false)\n\n  const [playPredSmeta, setPlayPredSmeta] = useState(false)\n  const [donePredSmeta, setDonePredSmeta] = useState(false)\n\n  const [playFinSmeta, setPlayFinSmeta] = useState(false)\n  const [doneFinSmeta, setDoneFinSmeta] = useState(false)\n\n  const [playPoster, setPlayPoster] = useState(false)\n  const [showLoader, setShowLoader] = useState(false)\n  const [sortedCities, setSortedCities] = useState([])\n  const [mainspec, setMainspec] = useState([])\n  const [dateProject, setDateProject] = useState([])\n  const [timeProject, setTimeProject] = useState([])\n  const [pretendents, setPretendents] = useState([])\n\n  const [countPressDate, setCountPressDate] = useState(0);\n\n\n  const table = useReactTable({\n    defaultColumn: {\n      size: 200, //starting column size\n      minSize: 40, //enforced during column resizing\n      maxSize: 500, //enforced during column resizing\n    },\n    data,\n    columns,\n    state: {\n      columnFilters,\n    },\n    meta: {\n      updateData: (rowIndex, columnId, value) =>\n        setData((prev) =>\n          prev.map((row, index) =>\n            index === rowIndex ? { ...prev[rowIndex], [columnId]: value } : row,\n          ),\n        ),\n    },\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnFiltersChange: setColumnFilters,\n\n    getPaginationRowModel: getPaginationRowModel(),\n\n    enableRowSelection: true,\n    getRowCanExpand: () => true,\n  })\n\n\n  useEffect(()=> {\n    // сортировка городов\n    const newCities = cities.map((item)=> { \n      const newArr = item.label\n      return newArr\n    })\n    const one = [...newCities].slice(0, 4)\n    const city = [...newCities].slice(5)\n    const sorted = city.sort((a, b) => {       \n      var cityA = a, cityB = b\n      return (cityA < cityB) ? -1 : (cityA > cityB) ? 1 : 0;  //сортировка по возрастанию \n    })\n    const newSorted = [...one, ...city]\n    setSortedCities(newSorted)\n\n    //1\n    let arrCompanys = []\n    companysAll.map((item, index)=> {\n      arrCompanys.push(item.title)\n    })\n    const sortedComp = [...arrCompanys].sort((a, b) => {       \n      var cityA = a, cityB = b\n      return (cityA < cityB) ? -1 : (cityA > cityB) ? 1 : 0;  //сортировка по возрастанию \n    })\n\n    setCompanysData(sortedComp)\n\n    //2\n    let arrManagers = []\n    managersAll.map((item, index)=> {\n      if (item.fio) {\n        arrManagers.push(item.fio)\n      }  \n    })\n    const sortedManager = [...arrManagers].sort((a, b) => {       \n      return (a < b) ? -1 : (a > b) ? 1 : 0;  //сортировка по возрастанию \n    })\n    //console.log(\"sortedManager: \", sortedManager)\n    setManagersData(sortedManager)\n\n    //3\n    let arrWorkers = []\n    //console.log(\"workersAll: \", workersAll)\n    // workersAll.map((item, index)=> {\n    //   const obj = {\n    //     id: item.id,\n    //     label: item.userfamily + ' ' + item.username,\n    //     value: index,\n    //   }\n    //   arrWorkers.push(obj)\n    // })\n    // //console.log(\"arrWorkers: \", arrWorkers)\n    // setWorkersData(arrWorkers)\n\n    //4\n    let arrPlatfroms = []\n    platformsAll.map((item, index)=> {\n      arrPlatfroms.push(item.title)\n    })\n    const sortedPlat = [...arrPlatfroms].sort((a, b) => {       \n      var cityA = a.toLowerCase(), cityB = b.toLowerCase()\n      return (cityA < cityB) ? -1 : (cityA > cityB) ? 1 : 0;  //сортировка по возрастанию \n    })\n\n    setPlatformsData(sortedPlat)\n\n    //5\n    const fetchData = async() => {\n      const projs = await getProjects()\n      //console.log(\"projs: \", projs)\n      const sortProj = [...projs].sort((a, b) => {  \n        if (a.dateStart < b.dateStart)\n          return -1;\n        if (a.dateStart > b.dateStart)\n            return 1;\n        return 0;\n      })\n\n      setProjects(sortProj)\n    }\n\n    fetchData()\n    \n}, [])\n\n\n\n  useEffect(()=> {\n    console.log(\"height: \", height)\n  }, [height])\n\n\n// Открыть проект  \n  const openProject = async(month, item, number, id, name, end, status, timeStart, specifika) => {\n    console.log(\"item: \", month+1, item, number, specifika, end)\n\n    setShowProject(true)\n    setShowCalendar(false)\n    setShowCalendar2(false)\n    \n\n    const resProj = await getProjectId(id)\n    console.log(\"resProj: \", resProj)\n\n    // const resPretendents = await getPretendentProjectId(id)\n    // console.log(\"pretendents: \", resPretendents)\n\n    \n\n    let newArray = []\n    let colorStatus = ''\n    // resPretendents.map((item)=> {\n    //   const fioSpec = workersAll.find(el=> el.id === parseInt(item.workerId))\n    //   //console.log(\"workers: \", workersAll)\n    //   //console.log(\"fioSpec: \", fioSpec)\n    //   const localDate = new Date(item.createdAt).toLocaleString().split(',')[0] + \" | \" + new Date(item.createdAt).toLocaleString().split(',')[1].slice(1, 6)\n\n    //   if (item.status === 'В Проект') colorStatus = 'green'\n    //   if (item.status === 'Отказано') colorStatus = 'yellow'\n\n    //   const newObj = {\n    //     id: item.id,\n    //     data: localDate,\n    //     status: item.status ? JSON.stringify({name: item.status, color: colorStatus}) : '',\n    //     fio: fioSpec?.userfamily + \" \" + fioSpec?.username, \n    //     workerId: fioSpec?.id,\n    //     projectId: item.projectId,\n    //     receiverId: item.receiverId,\n    //     spec: JSON.parse(fioSpec?.worklist)[0]?.spec,\n    //     comment: JSON.parse(fioSpec?.comment),\n    //     comteg: JSON.parse(fioSpec?.comteg),\n    //   }\n    //   newArray.push(newObj)\n    // })\n    // setPretendents(newArray)\n\n    setId(id)\n    setCrmID(resProj.crmID)\n    setProjectName(name)\n      \n    var d = new Date(resProj.dateStart); // создаём объект даты\n    var d2 = resProj.dateEnd ? new Date(resProj.dateEnd) : ''; // создаём объект даты\n    setStartDate(d.setHours(d.getHours() - 3))\n    setEndDate(d2 !== '' ? d2.setHours(d2.getHours() - 3) : '')\n\n    setStartTime(timeStart) \n    setEndTime(resProj.dateEnd?.split('T')[1]?.slice(0, 5)) \n\n    setStatusProject({name: status, color: statusData.find((stat)=> stat.label === resProj.status)?.color})\n    setSpecifikaProject({name: specifika, color: specifikaData.find((stat)=> stat.label === resProj.specifika)?.color})\n\n    const compTitle = companysAll.find(item=> item.id.toString() === resProj.companyId)\n    //console.log(\"companyName: \", compTitle?.title ? compTitle?.title : '')\n    setCompanyName(compTitle?.title ? compTitle?.title : '')\n\n    const managerFio = managersAll.find(item=> item.id.toString() === resProj.managerId)\n    setManagerName(managerFio?.fio)\n\n    const comp = managersAll.find(item=> item.fio === managerFio?.fio)\n    if (comp) {\n      setPhone(comp.phone)\n    } else {\n      setPhone('')\n    }\n\n    const managerFio2 = managersAll.find(item=> item.id.toString() === resProj.managerId2)\n    setManagerName2(managerFio2?.fio)\n\n    const comp2 = managersAll.find(item=> item.fio === managerFio2?.fio)\n    if (comp2) {\n      setPhone2(comp2.phone)\n    } else {\n      setPhone2('')\n    }\n\n    //setLocationProject(resProj.geo)\n    const loc = platformsAll.find(item=> item.id === parseInt(resProj?.geo))\n    console.log(\"platformsAll: \", platformsAll)\n    console.log(\"geo: \", resProj?.geo)\n    console.log(\"loc: \", loc)\n    if (loc) {\n      let text = `${loc.city}\n${loc.address}     \n${loc.track}   \n${loc.url}`;\n      setAddress(text)\n      setLocationProject(loc.title)\n    } else {\n      setLocationProject('')\n      setAddress('')\n    }\n\n    setGeoId(resProj?.geo)\n\n    setCity(resProj.city)\n    setComment(resProj.comment) \n\n    setTehText(resProj.teh)\n    setTeh1(resProj.teh1)\n    setTeh2(resProj.teh2)\n    setTeh3(resProj.teh3)\n    setTeh4(resProj.teh4)\n    setTeh5(resProj.teh5)\n    setTeh6(resProj.teh6)\n    setTeh7(resProj.teh7)\n    setTeh8(resProj.teh8)\n\n\n    // let resMain\n    // resMain = await getMainSpecProject(id)\n    // console.log(\"resMain: \", resMain)\n\n    // if (resMain.length > 0) {\n    //   let arr = []\n    //   let myColor = ''\n    //   let myColor2 = ''\n\n    //   resMain.map((item)=>{\n    //     if (item.vidWork === 'Фальшстарт' || item.vidWork === 'Отмена') myColor = 'red'\n    //     if (item.vidWork === 'Офис') myColor = 'purple'\n\n    //     const obj = {\n    //       name: item.vidWork,\n    //       color: myColor\n    //     }\n\n    //     const obj1 = {\n    //       name: item.specialization,\n    //       color: ''\n    //     }\n\n    //     const obj2 = {\n    //       name: item.stavka,\n    //       color: ''\n    //     }\n\n    //     if (item.comteg === 'Опоздание' || item.comteg === 'Невыход') myColor = 'red'\n\n    //     const obj3 = {\n    //       name: item.comteg,\n    //       color: myColor2\n    //     }\n\n    //     const newObj = {\n    //       id: item.id,\n    //       date: item.date,\n    //       specId: item.specId,\n    //       vidWork: JSON.stringify(obj),\n    //       specialization: JSON.stringify(obj1),\n    //       comteg: JSON.stringify(obj3),\n    //       comment: item.comment,\n    //       stavka: JSON.stringify(obj2),   \n    //       numder: item.number, \n    //       hr: item.hr,  \n    //       count: item.count,  \n    //       projectId: id,\n    //     }\n\n    //     arr.push(newObj)\n    //   })\n\n    //   //console.log(arr)\n    //   setMainspec(arr)\n\n    // } else {\n    //   //новый состав специалистов\n    //   const startD = new Date(resProj.dateStart?.split('T')[0]).toLocaleString().split(',')[0]\n    //   const startT = resProj.dateStart?.split('T')[1]?.slice(0, 5)\n\n    //   //console.log(\"startD: \", startD, startT)\n\n    //   const data = {\n    //     //id: resProj.crmID+1,\n    //     date: startD+'T'+resProj.dateStart?.split('T')[1].slice(0,5),\n    //     vidWork: null,\n    //     specId: null,\n    //     specialization: null,\n    //     stavka: JSON.stringify({label: '№1', name: '№1', color: ''}),\n    //     comment: null,\n    //     comteg: null,\n    //     taxi: null,\n    //     merch: null,\n    //     projectId: id,    \n    //   }\n\n    //   let arr = []\n    //   setMainspec(\n    //     //[...arr, {...data, id: parseInt(resProj.crmID)+1}, {...data, id: parseInt(resProj.crmID)+2}, {...data, id: parseInt(resProj.crmID)+3}, {...data, id: parseInt(resProj.crmID)+4}]\n    //     [...arr, data, data, data, data]\n    //   );\n    // }\n\n    \n    setVisibleA(true)\n    setVisibleB(true)\n    setShowMainTable(true)\n    setShowPretendentTable(true)\n    setShowPosterTable(true)\n\n\n    setTimeout(()=> {\n      setHeight(509)\n    }, 200)\n    \n  }\n\n  useEffect(()=>{\n    console.log(\"Основной состав: \", mainspec)\n  }, [mainspec])\n\n  //сохранить проект\n  const saveProject = async(id) => {\n\n    //Toast\n    setShowModal(true)\n\n    console.log(\"id: \", id)\n    console.log(\"start: \", startDate)\n    console.log(\"end: \", endDate)\n    console.log(\"managerId: \", managersAll.find(item=> item.fio === managerName)?.id)\n    console.log(\"managerId2: \", managersAll.find(item=> item.fio === managerName)?.id)\n    console.log(\"companyId: \", companysAll.find(item=> item.title === companyName)?.id)\n\n    //удаляем старые записи из Основного состава\n    //const resAllDel = await deleteMainspecProject(id)\n    //console.log(\"resAllDel: \", resAllDel)\n\n    const month = String(new Date(startDate).getMonth()+1).padStart(2, \"0\");\n    const day = String(new Date(startDate).getDate()).padStart(2, \"0\");\n\n    const month2 = String(new Date(endDate).getMonth()+1).padStart(2, \"0\");\n    const day2 = String(new Date(endDate).getDate()).padStart(2, \"0\");\n  \n    const saveData = {\n      name: projectName,\n      status: statusProject.name,\n      datestart: `${new Date(startDate).getFullYear()}-${month}-${day}T${startTime}:00.000Z`,\n      dateend: endDate ? `${new Date(endDate).getFullYear()}-${month2}-${day2}T${endTime}:00.000Z` : '',\n      teh: tehText, \n      teh1,\n      teh2,\n      teh3,\n      teh4,\n      teh5,\n      teh6,\n      teh7,\n      teh8,\n      geo: geoId, \n      //managerId: managersAll.find(item=> item.fio === managerName)?.id, \n      //managerId2: managersAll.find(item=> item.fio === managerName2)?.id,\n      companyId: companysAll.find(item=> item.title === companyName)?.id, \n      comment, \n      specifika: specifikaProject.name, \n      city,\n    }\n    console.log(saveData)\n  \n    //сохранить изменения в базе\n    const resSave = await editProject(saveData, id) \n    console.log(\"resSave: \", resSave)\n\n    // console.log(\"mainSpec save: \", mainspec)\n    // mainspec.map(async(item, index)=> {\n    //   //setTimeout(async()=> {\n    //     console.log(\"id item: \", item.id)\n    //     if (item.id) {\n    //       const resEdit = await editMainspec(\n    //         {\n    //           date: item.date,\n    //           vidWork: item.vidWork ? JSON.parse(item.vidWork).name : '',\n    //           specId: item.specId,\n    //           specialization: item.specialization ? JSON.parse(item.specialization).name : '',\n    //           stavka: item.stavka ? JSON.parse(item.stavka).name : '',\n    //           comteg: item.comteg ? JSON.parse(item.comteg).name : '',\n    //           comment: item.comment,\n    //           projectId: item.projectId,\n    //           number: index+1,\n    //           hr: item.hr,\n    //         },\n    //         item.id\n    //       )\n    //       console.log(\"resEdit: \", resEdit)\n    //     } else {\n    //       await addMainspec(\n    //         {\n    //           date: item.date,\n    //           vidWork: item.vidWork ? JSON.parse(item.vidWork).name : '',\n    //           specId: item.specId,\n    //           specialization: item.specialization ? JSON.parse(item.specialization).name : '',\n    //           stavka: item.stavka ? JSON.parse(item.stavka).name : '',\n    //           comteg: item.comteg ? JSON.parse(item.comteg).name : '',\n    //           comment: item.comment,\n    //           projectId: item.projectId,\n    //           number: index+1,\n    //           hr: item.hr,\n    //         }\n    //       )\n    //     }\n        \n    //   //}, 500 * ++index)\n    // })\n\n\n    //send otkaz\n    // pretendents.map(async(item, index)=> {\n    //   console.log(\"pretendent: \", item, index)\n    //   setTimeout(async() => {\n    //     if (item.status) {\n    //       if (JSON.parse(item.status).name === 'Отказано') {\n\n    //         //сохранение отказа в базе\n    //         const newObj = {\n    //           projectId: item.projectId,\n    //           workerId: item.workerId.toString(),  \n    //           receiverId: item.receiverId, \n    //           cancel: true\n    //         }\n    //         console.log(\"newObj: \", newObj)\n\n    //         //отправка сообщения об отказе\n    //         const retCanceled = await getCanceledId(newObj)\n    //         console.log(\"retCanceled: \", retCanceled)\n    //         if (!retCanceled) {\n    //           await sendSpecialistOtkaz(item.workerId, {projectId: item.projectId})\n    //         }\n\n    //         const resAdd = await addCanceled(newObj)\n    //         console.log(\"resAdd: \", resAdd)\n    //       }\n\n    //       await editPretendent(item.id, {status: JSON.parse(item.status).name})\n    //     } \n    //   }, 1000 * ++index)\n      \n        \n    // })\n\n    //const resTable = await editMainspec({date: dateProject + 'T' + timeProject})\n  \n    setProjects((projects) => {\t\n      const month = String(new Date(startDate).getMonth()+1).padStart(2, \"0\");\n      const day = String(new Date(startDate).getDate()).padStart(2, \"0\");\n  \n      let userIndex = projects.findIndex((item) => item.id === id);\n      console.log(userIndex)\n      const usersCopy = JSON.parse(JSON.stringify(projects));\n  \n      const userObject = usersCopy[userIndex];\n      usersCopy[userIndex] = { ...userObject, \n        id: id,\n        name: projectName, \n        status: statusProject.name,\n        specifika: specifikaProject.name,\n        dateStart: `${new Date(startDate).getFullYear()}-${month}-${day}T${startTime}:00.000Z`,\n        dateEnd: endDate ? `${new Date(endDate).getFullYear()}-${month2}-${day2}T${endTime}:00.000Z` : '',\n      };\n  \n      console.log(\"update user: \", usersCopy)\n  \n      return usersCopy;\n    });\n\n\n    setTimeout(()=> {\n      setShowModal(false)\n      closeProfile()\n    }, 500)\n  }\n\n  const closeProfile = () => {\n    setShowProject(false)\n    setShowCalendar2(true)\n    setShowMainTable(false)\n    setShowPretendentTable(false)\n    setShowPosterTable(false)\n\n    //очистить переменные\n    setId('')\n    setCrmID('')\n    setProjectName('')  \n    setStartDate('')\n    setEndDate('')\n    setStartTime('') \n    setEndTime('') \n    setStatusProject({name: '', color: ''})\n    setSpecifikaProject({name: '', color: ''})\n    setCompanyName('')\n    setManagerName('')\n    setPhone('')\n    setManagerName2('')\n    setPhone2('')\n    setLocationProject('')\n    setAddress('')\n    setGeoId('')\n    setCity('')\n    setComment('') \n    setTehText('')\n    setTeh1('')\n    setTeh2('')\n    setTeh3('')\n    setTeh4('')\n    setTeh5('')\n    setTeh6('')\n    setTeh7('')\n    setTeh8('')\n\n    setMainspec([])\n    setPretendents([])\n  }\n\n\n  const onChangeManager = (e, index) => {\n    //console.log(e.target.value, index)\n\n    setManagerName(e.target.value)\n\n    // setManagersObj((managersObj) => {                                           \n    //   const usersCopy = JSON.parse(JSON.stringify(managersObj));\t\t\t\n    //   const userObject = JSON.parse(usersCopy[index]);\n    //   usersCopy[index] = JSON.stringify({ ...userObject, fio: e.target.value});\t\t\n    //   //console.log(usersCopy) \n    //   return usersCopy;\n    // });   \n  }\n\n  const onChangeManager2 = (e, index) => {\n    if (e) {\n      setManagerName2(e.target.value) \n    } else {\n      setManagerName2('') \n    }\n  }\n\n  const clickDelete = (id) => {\n    console.log(id)\n\n    setVisibleDelete(!visibleDelete)\n\n  }\n\n  //удаление специалиста\n  const deleteProfile = async(id) => {\n    console.log(id)\n    setVisibleDelete(false)\n\n    //удаление проекта из БД\n    //await deleteProject(id)\n\n\n    //перемещение в корзину\n    const data = {\n      deleted: true\n    }\n    await editProject(data, id)\n\n    //addToast(deleteToast) //ваши данные сохранены\n\n    setProjects([...projects].filter(item=>item.id !== id))\n\n    closeProfile()\n  }\n\n\n  const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n    <img \n      src={threeDots} \n      className='hidden-element' alt='' \n      ref={ref}\n      onClick={(e) => {\n        e.preventDefault();\n        onClick(e);\n      }}\n      width={15} \n      style={{ cursor: 'pointer'}}\n    >\n        {children}\n    </img>\n\t));\n\n  CustomToggle.displayName = \"Edit\";\n  \n\n\tconst CustomMenu = React.forwardRef(\n\t\t({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n\t\t  const [value, setValue] = useState('');\n\t  \n\t\t  return (\n\t\t\t<div\n\t\t\t  ref={ref}\n\t\t\t  style={{backgroundColor: '#20272b', left: '5px', borderRadius: '6px', padding: '0 0 0 0', fontSize: '14px', top: '-45px', minWidth:'50px'}}\n\t\t\t  className={className}\n\t\t\t  aria-labelledby={labeledBy}\n\t\t\t>\n\t\t\t  <ul className=\"list-unstyled\" style={{marginBottom: '0', padding: '5px 10px'}}>\n\t\t\t\t{React.Children.toArray(children).filter(\n\t\t\t\t  (child) =>\n\t\t\t\t\t!value || child.props.children?.toLowerCase().startsWith(value),\n\t\t\t\t)}\n\t\t\t  </ul>\n\t\t\t</div>\n\t\t  );\n\t\t},\n\t);\n\n  CustomMenu.displayName = \"Edit\";\n\n  const changeAddSpec = async (eventkey) => {\n\t\tconsole.log(\"spec: \", eventkey)\n\n    //Добавить\n    if (eventkey.split(' ')[0] === '1' || eventkey==='1') {\n      const resProj = await getProjectId(id)\n      const startDate = new Date(resProj.dateStart.split('T')[0]).toLocaleString().split(',')[0]\n      const startTime = resProj.dateStart.split('T')[1].slice(0,5)\n\n      //добавить строку в основной состав\n\t\t  const resAdd = await addMainspec({date: startDate+'T'+startTime, projectId: id, number: parseInt(eventkey.split(' ')[2])+1, stavka: \"№1\"})\n      console.log(\"resAdd: \", resAdd.id)\n\n      const arrayCopy = JSON.parse(JSON.stringify(mainspec));\n      //readyArray.splice(2, 0, 60);\n      arrayCopy.splice(parseInt(eventkey.split(' ')[2])+1, 0, {\n        id: resAdd.id,\n        date: startDate+'T'+startTime,\n        specId: '', \n        vidWork: '', \n        specialization: '', \n        comteg: '',\n        comment: '',\n        stavka: JSON.stringify({label: '№1', name: '№1'}),\n        taxi: '',\n        merch: '',\n        projectId: id,\n        number: parseInt(eventkey.split(' ')[2])+1,\n      })\n      console.log(\"arrayCopy: \", arrayCopy)\n      setMainspec(arrayCopy)\n\n    } else\n\n    //дублировать\n    if (eventkey.split(' ')[0] === '2' || eventkey==='2') {\n\n      const checkedItem = mainspec.find((item)=>item.isChecked === true)\n\n      if (checkedItem) {\n        console.log(\"edit all checked\")\n        handleAllEdit(eventkey)\n      } else {\n        const dublSpec = mainspec.find((item)=>item.id === parseInt(eventkey.split(' ')[1]))\n        console.log(\"dublSpec: \", dublSpec)\n        \n        const resAdd = await addMainspec({projectId: dublSpec.projectId, hr: dublSpec.hr})\n        console.log(\"resAddId: \", resAdd.id)\n\n        const arrayCopy = JSON.parse(JSON.stringify(mainspec));\n        \n        arrayCopy.splice(parseInt(eventkey.split(' ')[2])+1, 0, {\n          id: resAdd.id,\n          date: dublSpec.date,\n          specId: dublSpec.specId,\n          vidWork: dublSpec.vidWork, //JSON.stringify({name: resAdd.vidWork, color: ''}),\n          specialization: dublSpec.specialization, //JSON.stringify({name: resAdd.specialization, color: ''}),\n          stavka: dublSpec.stavka, //JSON.stringify({name: resAdd.stavka, color: ''}),\n          taxi: dublSpec.number,\n          merch: dublSpec.merch,\n          comment: dublSpec.comment,\n          comteg: dublSpec.comteg, //JSON.stringify({name: resAdd.comteg, color: ''}),\n          hr: dublSpec.hr,\n          projectId: dublSpec.projectId,\n        })\n        console.log(\"arrayCopy: \", arrayCopy)\n        setMainspec(arrayCopy)\n      }\n    } else\n    //добавить разделитель\n    if (eventkey.split(' ')[0] === '3' || eventkey==='3') {\n      //добавить строку в основной состав\n\t\t  const resAdd = await addMainspec({projectId: id, hr: true, number: parseInt(eventkey.split(' ')[2])+1})\n      console.log(\"resAddId: \", resAdd.id)\n\n      const arrayCopy = JSON.parse(JSON.stringify(mainspec));\n      \n      arrayCopy.splice(parseInt(eventkey.split(' ')[2])+1, 0, {\n        id: resAdd.id,\n        date: '',\n        specId: '', \n        vidWork: '', \n        specialization: '', \n        comteg: '',\n        comment: '',\n        stavka: '',\n        taxi: '',\n        merch: '',\n        projectId: id,\n        hr: true,\n      })\n      console.log(\"arrayCopy: \", arrayCopy)\n      setMainspec(arrayCopy)\n    } else\n\n    //удалить\n    if (eventkey.split(' ')[0] === '4') {\n      console.log(\"index: \", eventkey.split(' ')[1])\n      const checkedItem = mainspec.find((item)=>item.isChecked === true)\n      //console.log(\"checkedItem: \", checkedItem)\n\n      if (checkedItem) {\n        handleAllDelete()\n      } else {\n        setMainspec([...mainspec].filter(item=>item.id !== parseInt(eventkey.split(' ')[1])))\n        deleteMainspec(eventkey.split(' ')[1])\n      }\n    }\n\t}\n\n  useEffect(()=> {\n    if (endDate !== '' && endDate !== null) {\n      //setEndTime('00:00')\n      console.log(\"endDate: \", endDate)\n    }\n    \n  }, [endDate])\n\n\n  const changeDateProject=(e, index)=> {\n    console.log(\"change Date: \", index, e.target.value+'T'+'00:00')\n    let arr = []\n    arr = [...mainspec]\n    // console.log(\"arr: \", arr)\n    arr[index].date = e.target.value+'T' + arr[index].date?.split('T')[1]\n    setMainspec(arr)\n  }\n\n  const changeTimeProject=(e, index)=> {\n    //console.log(e.target.value, index)\n    let arr = []\n    arr = [...mainspec]\n    arr[index].date = arr[index].date.split('T')[0] + 'T'+ e.target.value\n    setMainspec(arr)\n  }\n\n  const changeCommentMain=(e, index)=> {\n    console.log(e.target.value, index)\n    let arr = []\n    arr = [...mainspec]\n    arr[index].comment = e.target.value\n    setMainspec(arr)\n  }\n\n\n  const handleChange=(e)=> {\n    const {name, checked} = e.target\n    console.log(\"checked: \", name, checked)\n\n    if (name ==='allselect') {\n      const checkedvalue = mainspec.map((user)=>{ return {...user, isChecked: checked}})\n      console.log(checkedvalue)\n      setMainspec(checkedvalue)\n    } else {\n      console.log(\"mainspec: \", mainspec)\n      \n      const checkedvalue = mainspec.map((user)=>\n      user.id === parseInt(name) ? {...user, isChecked: checked} : user)\n      console.log(\"checkedvalue: \", checkedvalue)\n      setMainspec(checkedvalue)\n    }\n  }\n\n  const handleAllEdit = async(eventkey)=> {\n    const checkedinputvalue=[]\n    for(let i=0; i<mainspec.length; i++) \n    {\n      if (mainspec[i].isChecked === true) {\n        checkedinputvalue.push(parseInt(mainspec[i].id))\n      }\n    }\n    //console.log(\"checkedinputvalue: \", checkedinputvalue)\n\n    const arrayCopy = JSON.parse(JSON.stringify(mainspec));\n    let arr = []\n\n    checkedinputvalue.map(async(item, index)=> {\n      //setTimeout(async()=> {\n        const dublSpec = mainspec.find((el)=>el.id === parseInt(item))\n        console.log(\"dublSpec: \", dublSpec)\n\n        // const resAdd = await addMainspec({projectId: dublSpec.projectId, hr: dublSpec.hr})\n        // console.log(\"resAddId: \", resAdd.id)\n      \n        const newObj = {\n            //id: resAdd.id,\n            date: dublSpec.date,\n            specId: dublSpec.specId,\n            vidWork: dublSpec.vidWork, //JSON.stringify({name: dublSpec.vidWork, color: ''}),\n            specialization: dublSpec.specialization, //JSON.stringify({name: dublSpec.specialization, color: ''}),\n            stavka: dublSpec.stavka, //JSON.stringify({name: dublSpec.stavka, color: ''}),\n            taxi: dublSpec.number,\n            merch: dublSpec.merch,\n            comment: dublSpec.comment,\n            comteg: dublSpec.comteg, //JSON.stringify({name: dublSpec.comteg, color: ''}),\n            projectId: dublSpec.projectId, \n            hr: dublSpec.hr,\n        }\n\n        console.log(\"newObj: \", newObj)\n        arrayCopy.splice(parseInt(eventkey.split(' ')[2])+1, 0, newObj)\n      //}, 2000)   \n    })\n\n    console.log(\"newArr: \", arrayCopy)\n    const checkedvalue = arrayCopy.map((user)=>{ return {...user, isChecked: false}})\n\n    // const newCheckArr = checkedvalue.map(async(item)=> {\n    //   if (!item.id) {\n    //     const resAdd = await addMainspec({projectId: item.projectId, hr: item.hr})\n    //     console.log(\"resAddId: \", resAdd.id)\n\n    //     return {...item, id: resAdd.id}\n    //   }\n    //   return item\n\n    // })\n    // //setMainspec(newCheckArr)\n    \n    setMainspec(checkedvalue)\n  }\n\n  const handleAllDelete =()=> {\n    const checkedinputvalue=[]\n    for(let i=0; i<mainspec.length; i++) \n    {\n      if (mainspec[i].isChecked === true) {\n        checkedinputvalue.push(parseInt(mainspec[i].id))\n      }\n    }\n\n    const copyArray = JSON.parse(JSON.stringify(mainspec));\n    \n    checkedinputvalue.map(async(item)=> {\n      await deleteMainspec(item)\n    })\n\n    const result = copyArray.filter(item => !checkedinputvalue.some(el => item.id === el));\n    console.log(\"copyArray: \", result)\n\n    setMainspec(result)\n  }\n\n  const onChangeCity = (e) => {\n    //console.log(e.target.value)\n    if (e) {\n      setCity(e.target.value)  \n    } else {\n      setCity('')  \n    }    \n  }\n\n  const onChangeCompany= (e) => {\n    //console.log(e.target.value)\n    if (e) {\n      setCompanyName(e.target.value)  \n    } else {\n      setCompanyName('')  \n    }    \n  }\n\n  const changeLocation = (e) => {\n    setLocationProject(e.target.value)\n    if (e.target.value === '') {\n      setAddress('')\n    }\n  }\n\n\n  // const filterOptions = (options, state) => {\n  //   let newOptions = [];\n  //   options.forEach((element) => {\n  //     if (\n  //       element\n  //         //.replace(\",\", \"\")\n  //         .toLowerCase()\n  //         .includes(state.inputValue.toLowerCase())\n  //     )\n  //       newOptions.push(element);\n  //   });\n  //   return newOptions;\n  // };\n  \n\n  const clickSave = () => {\n\n  }\n\n  // const createPredSmeta = async(id) => {\n\t// \t// Button begins to shake\n\t// \tsetPress(true);\n\t// \tconsole.log(press)\n        \n\t// \t// Buttons stops to shake after 2 seconds\n\t// \tsetTimeout(() => setPress(false), 200);\n\n\t// \taudioIshodCall.play();\n\t// \tawait getSendCall(id)\n\t// }\n\n  const pressPredSmeta = async() => {\n    setPlayPredSmeta(!playPredSmeta)\n\n    //api\n    console.log(\"crmID: \", crmID)\n    const resAddSmeta = await getCreatePredSmeta(crmID)\n    console.log(\"resAddSmeta: \", resAddSmeta)\n\n    setTimeout(()=> {\n      if (resAddSmeta) {\n        setDonePredSmeta(true)\n      }\n    }, 5000)\n  }\n\n  const pressFinSmeta = async() => {\n    setPlayFinSmeta(!playFinSmeta)\n\n    //api\n    console.log(\"crmID: \", crmID)\n    const resAddSmeta = await getCreateFinSmeta(crmID)\n    console.log(\"resAddSmeta: \", resAddSmeta)\n\n    setTimeout(()=> {\n      if (resAddSmeta) {\n        setDoneFinSmeta(true)\n      }\n    }, 5000)\n  }\n\n  const pressPoster = async() => {\n    setPlayPoster(!playPoster)\n    setShowLoader(true)\n\n    //api\n    const resAddPoster = await getCreatePoster(crmID)\n    console.log(\"resAddPoster: \", resAddPoster)\n\n    setTimeout(()=> {\n      setShowLoader(false)\n    }, 2000)\n  }\n\n\n  const sortDate = () => {\n    setCountPressDate(countPressDate + 1)\n    \n    if (countPressDate + 1 >= 3) {\n      setCountPressDate(0)\n    }\n    console.log(\"check sort\", countPressDate + 1)\n\n    if (countPressDate + 1 === 1) {\n      const sortedWorker = [...pretendents].sort((a, b) => {       \n        var tgA = a.data, tgB = b.data \n        return (tgA < tgB) ? -1 : (tgA > tgB) ? 1 : 0;  //сортировка по возрастанию \n      })\n      setPretendents(sortedWorker)\n    } else if (countPressDate + 1 === 2) {\n      const sortedWorker = [...pretendents].sort((a, b) => {       \n        var tgA = a.data, tgB = b.data \n        return (tgA > tgB) ? -1 : (tgA < tgB) ? 1 : 0;  //сортировка по возрастанию \n      })\n      setPretendents(sortedWorker)\n    } else {\n      const sortedWorker = [...pretendents].sort((a, b) => {       \n        var fioA = a.id, fioB = b.id \n        return fioB-fioA  //сортировка по убыванию \n      })\n\n      setPretendents(sortedWorker)\n    }\n  }\n\n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n                <Suspense fallback={<CSpinner color=\"primary\" />}>\n                    {/* <h2>Проекты</h2> */}\n                    <CRow className=\"mt-2\">\n                      <CCol xs>\n                        <CCard className=\"mb-4\">\n                          {/* <CCardHeader>Сметы</CCardHeader> */}\n\n                          <CCardBody style={{padding: '12px', height: `${height}px`}}>\n                            {!showProject ? <Filters setShowCalendar={setShowCalendar} setShowCalendar2={setShowCalendar2} columnFilters={columnFilters} setColumnFilters={setColumnFilters} /> : '' }\n                            {\n                              showCalendar ? \n                                // <Calendar openProject={openProject} showSidebar={showSidebar} setShowSidebar={setShowSidebar} setShowProject={setShowProject} setShowCalendar={setShowCalendar} setShowCalendar2={setShowCalendar2} setHeight={setHeight}/>\n                                <h2 style={{marginTop: '25%', textAlign: 'center'}}>Раздел находится в разработке</h2>\n                                :\n                                (showCalendar2 ?\n                                  <Calendar2 openProject={openProject} projects={projects} setProjects={setProjects} showSidebar={showSidebar} setShowSidebar={setShowSidebar} setShowProject={setShowProject} setShowCalendar={setShowCalendar} setShowCalendar2={setShowCalendar2} setHeight={setHeight}/>\n                                  : \n                                  (showProject ? \n                                    <div style={{position: 'relative', height: '494px', display: 'flex', flexDirection: 'row', marginTop: '35px'}}>\n                                              <div style={{position: 'absolute', top: '-34px', left: '0px'}}>\n                                                <div className=\"text-field\">\n                                                  <input disabled={true} className=\"text-field__input\" type=\"text\" name=\"projectId\" id=\"projectId\" value={crmID} style={{width: '120px', marginRight: '25px'}}/>\n                                                </div>\n                                              </div>\n                                              \n                                              <div style={{position: 'absolute', top: '-25px', right: '4px', color: '#fff', fontSize: '33px', zIndex: '100', display: 'flex', justifyContent: 'flex-end', width: '-webkit-fill-available'}}>   \n                                                <div style={{display: 'flex'}}>\n                                                  {/* <Icon id=\"delete\" onClick={()=>clickDelete(id)} /> */}\n                                                  <img src={Trubka} style={{cursor: 'pointer', width: '24px', height: '24px', marginLeft: '20px'}}/>\n                                                  <img src={Tg}  style={{cursor: 'pointer', width: '24px', height: '24px', marginLeft: '20px'}}/>\n                                                  <img src={zamok}  style={{cursor: 'pointer', width: '19px', height: '24px', marginLeft: '20px'}}/>\n                                                  <img src={Disketa} onClick={()=>saveProject(id)} style={{cursor: 'pointer', width: '24px', height: '24px', marginLeft: '20px'}}/>\n                                                  <img src={Close} onClick={closeProfile} style={{ cursor: 'pointer', width: '19px', height: '24px', marginLeft: '20px'}}/>  \n                                                </div>\n                                              </div>\n                                          {/* 1 */}                               \n                                          <div style={{display: 'flex', flexDirection: 'column', width: '230px', textAlign: 'center', marginTop: '8px', marginRight: '40px'}}>\n                                            \n                                              <label className='title-label'></label>\n                                              <div style={{display: 'flex', justifyContent: 'space-between', paddingTop: '25px', width: '230px'}}>\n                                                <div className=\"text-field\">\n                                                  {/*<input disabled={true} className=\"text-field__input\" type=\"text\" value='01.01.2024' name=\"dateReg\" id=\"dateReg\" style={{width: '120px'}}/>*/}\n                                                  <DatePicker\n                                                    className=\"uley-datepicker-control text-center text-field__input\"\n                                                    style={{ height: '40px', width: '120px'}}\n                                                    selected={startDate}\n                                                    onChange={(date) => setStartDate(date)}\n                                                    selectsStart\n                                                    //startDate={startDate}\n                                                    dateFormat=\"dd.MM.yyyy\"\n                                                  />\n                                                </div>\n                                                <div className=\"text-field\">\n                                                  <input disabled={false} className=\"text-field__input\" type=\"text\" value={startTime} onChange={(e)=>setStartTime(e.target.value)} name=\"dateReg2\" id=\"dateReg2\" style={{width: '90px',}}/>\n                                                </div>\n                                              </div>\n\n                                              <div style={{display: 'flex', justifyContent: 'space-between', paddingTop: '25px', width: '230px'}}>\n                                                <div className=\"text-field\">\n                                                  {/* <input disabled={true} className=\"text-field__input\" type=\"text\" value='01.01.2024' name=\"dateReg3\" id=\"dateReg3\" style={{width: '120px'}}/> */}\n                                                  <DatePicker\n                                                    className=\"uley-datepicker-control text-center text-field__input\"\n                                                    style={{ height: '40px', width: '120px'}}\n                                                    selected={endDate}\n                                                    onChange={(date) => setEndDate(date)}\n                                                    selectsStart\n                                                    //endDate={endDate}\n                                                    dateFormat=\"dd.MM.yyyy\"\n                                                  />\n                                                </div>\n                                                <div className=\"text-field\">\n                                                  <input disabled={false} className=\"text-field__input\" type=\"text\" value={endTime} onChange={(e)=>setEndTime(e.target.value)} name=\"dateReg4\" id=\"dateReg4\" style={{width: '90px'}}/>\n                                                </div>\n                                              </div>\n\n                                              <label className='title-label'>Статус</label>\n                                              <div className=\"text-field\">\n                                                <MyDropdown4\n                                                  style={{backgroundColor: '#131c21'}}\n                                                  options={statusData}\n                                                  selected={statusProject}\n                                                  setSelected={setStatusProject}\n                                                  // onChange={addCity}\n                                                />\n                                                {/* <input disabled={true} className=\"text-field__input\" type=\"text\" name=\"dateReg\" id=\"dateReg\" style={{width: '230px', marginRight: '40px'}}/> */}\n                                              </div>\n\n                                              \n                                              <label className='title-label'>Специфика</label>\n                                              <div className=\"text-field\">\n                                                <MyDropdown4\n                                                  style={{backgroundColor: '#131c21'}}\n                                                  options={specifikaData}\n                                                  selected={specifikaProject}\n                                                  setSelected={setSpecifikaProject}\n                                                  placeholder='Выбери специфику'\n                                                  // onChange={addCity}\n                                                />\n                                                {/* <input disabled={true} className=\"text-field__input\" type=\"text\" name=\"dateReg\" id=\"dateReg\" style={{width: '230px', marginRight: '40px'}}/> */}\n                                              </div>\n\n                                              <label className='title-label'>Комментарии</label>\n                                              <div className=\"text-field\" style={{marginBottom: '0px'}}>\n                                                <textarea \n                                                  className=\"text-field__input\" \n                                                  type=\"text\" \n                                                  name=\"comment\" \n                                                  id=\"comment\"\n                                                  style={{resize: 'none', width: '230px', height: '80px', whiteSpace: 'pre-line', borderRadius: '6px', textAlign: 'left', marginRight: '40px'}}\n                                                  value={comment}\n                                                  onChange={(e)=>setComment(e.target.value)}\n                                                />\n                                              </div> \n                                        </div>\n\n                                        {/* 2 */}   \n                                        <div style={{textAlign: 'center', marginTop: '10px', width: '320px', marginRight: '40px'}}>\n                                          <label className='title-label'>Проект</label>\n                                          <div className=\"text-field\">\n                                            <input disabled={false} className=\"text-field__input\" type=\"text\" name=\"projectName\" id=\"projectName\" value={projectName} onChange={(e)=>setProjectName(e.target.value)} style={{width: '320px'}}/>\n                                          </div>\n\n                                          <label className='title-label'>Компания</label>\n                                          <div className=\"text-field\">\n                                            {/* <input disabled={true} className=\"text-field__input\" type=\"text\" name=\"dateReg\" id=\"dateReg\" style={{width: '320px'}}/> */}\n                                            <Autocomplete\n                                              sx={{\n                                                  display: 'inline-block',\n                                                  '& input': {zIndex: '25',\n                                                    width: '100%',\n                                                    border: 'none',\n                                                    height: '40px',\n                                                    padding: '5px 4px',\n                                                    fontFamily: 'inherit',\n                                                    fontSize: '14px',\n                                                    fontWeight: '700',\n                                                    lineHeight: '1.5',\n                                                    textAlign: 'center',\n                                                    color: '#ffffff',\n                                                    backgroundColor: 'transparent',\n                                                  }\n                                              }}\n                                              className=\"text-field__input\" \n                                              openOnFocus\n                                              id=\"custom-input-company\"\n                                              options={companysData}\n                                              style={{width: '100%', padding: '0'}}\n                                              onInputChange={onChangeCompany}\n                                              //isOptionEqualToValue={(option, value) => option === value}\n                                              onChange={(event, newValue) => {\n                                                  if (newValue && newValue.length) {                                       \n                                                      const comp = companysAll.find(item=> item.title === newValue)\n                                                      console.log(\"comp: \", comp)\n                                                      if (comp) {\n                                                        setCompanyName(comp.title)\n                                                        setCompany(comp.id)\n                                                        setPhone()\n                                                        // setInn(comp.inn) \n                                                        // setSklad(comp.sklad)\n                                                        // setOffice(comp.office)\n                                                      }\n                                                  }  \n                                              }}\n                                              value={companyName}\n                                              inputValue={companyName}\n                                              renderInput={(params) => (\n                                              <div ref={params.InputProps.ref} style={{position: 'relative'}}>\n                                                  <input \n                                                      className=\"text-field__input\" \n                                                      type=\"text\" {...params.inputProps} \n                                                      placeholder=''\n                                                  />\n                                              </div>\n                                              )}\n                                            />\n                                          </div>\n\n                                          <label className='title-label'>Город</label>\n                                          <div className=\"text-field\">\n                                            {/* <MyDropdown\n                                              style={{backgroundColor: '#131c21'}}\n                                              options={sortedCities}\n                                              selected={city}\n                                              setSelected={setCity}\n                                            /> */}\n                                            <Autocomplete\n                                              sx={{\n                                                  display: 'inline-block',\n                                                  '& input': {zIndex: '25',\n                                                      width: '100%',\n                                                      border: 'none',\n                                                      height: '40px',\n                                                      padding: '5px 4px',\n                                                      fontFamily: 'inherit',\n                                                      fontSize: '14px',\n                                                      fontWeight: '700',\n                                                      lineHeight: '1.5',\n                                                      textAlign: 'center',\n                                                      color: '#ffffff',\n                                                      backgroundColor: 'transparent', \n                                                  }\n                                              }}\n                                              className=\"text-field__input\" \n                                              openOnFocus\n                                              id=\"custom-input-demo\"\n                                              options={sortedCities}\n                                              style={{width: '100%', padding: '0'}}\n                                              //isOptionEqualToValue={(option, value) => option.value === value.value}\n                                              onInputChange={onChangeCity}\n                                              onChange={(event, newValue) => {\n                                                if (newValue && newValue.length) {                                                      \n                                                  setCity(newValue)\n                                                }  \n                                              }}\n                                              value={city} \n                                              inputValue={city}\n                                              renderInput={(params) => (\n                                              <div ref={params.InputProps.ref} style={{position: 'relative'}}>\n                                                  <input \n                                                      className=\"text-field__input\" \n                                                      type=\"text\" {...params.inputProps} \n                                                      placeholder=''\n                                                      autoComplete='off'\n                                                  />\n                                              </div>\n                                              )}\n                                            />\n                                          </div>\n\n                                          <label className='title-label'>Локация</label>\n                                          <div className=\"text-field\" style={{width: '320px'}}>\n                                            {/* <input disabled={true} className=\"text-field__input\" type=\"text\" name=\"dateReg\" id=\"dateReg\" style={{width: '320px'}}/> */}\n                                            <Autocomplete\n                                              sx={{\n                                                  display: 'inline-block',\n                                                  '& input': {zIndex: '25',\n                                                    width: '100%',\n                                                    border: 'none',\n                                                    height: '40px',\n                                                    padding: '5px 4px',\n                                                    fontFamily: 'inherit',\n                                                    fontSize: '14px',\n                                                    fontWeight: '700',\n                                                    lineHeight: '1.5',\n                                                    textAlign: 'center',\n                                                    color: '#ffffff',\n                                                    backgroundColor: 'transparent',\n                                                  }\n                                              }}\n                                              className=\"text-field__input\" \n                                              openOnFocus\n                                              id=\"custom-input-demo\"\n                                              options={platformsData}\n                                              style={{width: '100%', padding: '0'}}\n                                              onInputChange={(e)=>setLocationProject(e.target.value)}\n                                              //onInputChange={(e)=>console.log(e.target.value)}\n                                              //isOptionEqualToValue={(option, value) => option.value === value.value}\n                                              onChange={(event, newValue) => {\n                                                  if (newValue && newValue.length) {\n                                                      setLocationProject(newValue)\n                                                      \n                                                      const loc = platformsAll.find(item=> item.title === newValue)\n                                                      console.log(\"loc: \", loc)\n                                                      if (loc) {\n                                                        let text = `${loc.city}\n${loc.address}     \n${loc.track}   \n${loc.url}`;\n                                                        setAddress(text)\n                                                        setGeoId(loc.id)\n                                                      }\n                                                  }  \n                                              }}\n                                              value={locationProject}\n                                              inputValue={locationProject}\n                                              renderInput={(params) => (\n                                              <div ref={params.InputProps.ref} style={{position: 'relative'}}>\n                                                  <input \n                                                      className=\"text-field__input\" \n                                                      type=\"text\" {...params.inputProps} \n                                                      placeholder=''\n                                                  />\n                                              </div>\n                                              )}\n                                            />\n                                          </div>\n\n                                          <div style={{position:'relative'}}>\n                                            <label className='title-label'>Адрес</label>\n                                            <div className=\"text-field\" style={{marginBottom: '0px'}} onMouseOver={()=>setShowSaveAddress(true)} onMouseOut={()=>setShowSaveAddress(false)}>\n                                              <textarea \n                                                className=\"text-field__input\" \n                                                type=\"text\" \n                                                name=\"address\" \n                                                id=\"address\"\n                                                value={address}\n                                                style={{resize: 'none', width: '320px', height: '80px', whiteSpace: 'nowrap', borderRadius: '6px', textAlign: 'left'}}\n                                              />\n                                            </div> \n                                            <img src={Disketa} onClick={()=>{navigator.clipboard.writeText(address)}} alt=\"\" style={{visibility: showSaveAddress ? 'visible' : 'hidden', position: 'absolute', top: '30px', left: '288px', cursor: 'pointer', width: '25px', height: '25px'}}/>\n                                          </div>\n                                          \n                                        </div>\n\n                                        {/* 3 */}   \n                                        <div style={{textAlign: 'center', marginTop: '10px', width: '320px', marginRight: '40px'}}>\n                                          <label className='title-label'>Менеджер</label>\n                                          <div className=\"text-field\">\n                                            {/* <input disabled={true} className=\"text-field__input\" type=\"text\" name=\"dateReg\" id=\"dateReg\" style={{width: '320px'}}/> */}\n                                            <Autocomplete\n                                              sx={{\n                                                  display: 'inline-block',\n                                                  '& input': {zIndex: '25',\n                                                      width: '100%',\n                                                      border: 'none',\n                                                      height: '40px',\n                                                      padding: '5px 4px',\n                                                      fontFamily: 'inherit',\n                                                      fontSize: '14px',\n                                                      fontWeight: '700',\n                                                      lineHeight: '1.5',\n                                                      textAlign: 'center',\n                                                      color: '#ffffff',\n                                                      backgroundColor: 'transparent', \n                                                  }\n                                              }}\n                                              className=\"text-field__input\" \n                                              id=\"custom-input-manager\"\n                                              options={managersData}\n                                              style={{width: '100%', padding: '0'}}\n                                              //isOptionEqualToValue={(option, value) => option.value === value.value}\n                                              //filterOptions={filterOptions}\n                                              //onInputChange={(e)=>setManagerName(e.target.value)}\n                                              onInputChange={(event, newInputValue) => {\n                                                setManagerName(newInputValue);\n                                              }}\n                                              onChange={(event, newValue) => {\n                                                if (newValue && newValue.length) {                                                      \n                                                  const comp = managersAll.find(item=> item.fio === newValue)\n                                                  console.log(\"comp: \", comp)\n                                                  if (comp) {\n                                                    setPhone(comp.phone)\n                                                    setManagerName(comp.fio)\n                                                  }\n                                                } \n                                              }}\n                                              value={managerName} \n                                              inputValue={managerName}\n                                              renderInput={(params) => (\n                                                <div ref={params.InputProps.ref} style={{position: 'relative'}}>\n                                                    <input \n                                                        className=\"text-field__input\" \n                                                        type=\"text\" {...params.inputProps} \n                                                        placeholder='ФИО'\n                                                    />\n                                                </div>\n                                              )}\n                                            />\n                                          </div>\n\n                                          <label className='title-label'>Старший</label>\n                                          <div className=\"text-field\">\n                                            {/* <input disabled={true} className=\"text-field__input\" type=\"text\" name=\"dateReg\" id=\"dateReg\" style={{width: '320px'}}/> */}\n                                            <Autocomplete\n                                              sx={{\n                                                  display: 'inline-block',\n                                                  '& input': {zIndex: '25',\n                                                      width: '100%',\n                                                      border: 'none',\n                                                      height: '40px',\n                                                      padding: '5px 4px',\n                                                      fontFamily: 'inherit',\n                                                      fontSize: '14px',\n                                                      fontWeight: '700',\n                                                      lineHeight: '1.5',\n                                                      textAlign: 'center',\n                                                      color: '#ffffff',\n                                                      backgroundColor: 'transparent', \n                                                  }\n                                              }}\n                                              className=\"text-field__input\" \n                                              openOnFocus\n                                              id=\"custom-input-manager2\"\n                                              options={managersData}\n                                              style={{width: '100%', padding: '0'}}\n                                              //isOptionEqualToValue={(option, value) => option.value === value.value}\n                                              onInputChange={onChangeManager2}\n                                              onChange={(event, newValue) => {\n                                                if (newValue && newValue.length) {                                                      \n                                                  const comp = managersAll.find(item=> item.fio === newValue)\n                                                  console.log(\"comp: \", comp)\n                                                  if (comp) {\n                                                    setPhone2(comp.phone)\n                                                    setManagerName2(comp.fio)\n                                                  }\n                                                }  \n                                              }}\n                                              value={managerName2} \n                                              inputValue={managerName2}\n                                              renderInput={(params) => (\n                                              <div ref={params.InputProps.ref} style={{position: 'relative'}}>\n                                                  <input \n                                                      className=\"text-field__input\" \n                                                      type=\"text\" {...params.inputProps} \n                                                      placeholder='ФИО'\n                                                  />\n                                              </div>\n                                              )}\n                                            />\n                                          </div>\n\n                                          <label className='title-label'>Техническое Задание</label>\n                                          <div className=\"text-field\" style={{marginBottom: '0px'}}>\n                                            <textarea \n                                              className=\"text-field__input\" \n                                              type=\"text\" \n                                              name=\"comment\" \n                                              id=\"comment\"\n                                              value={tehText}\n                                              onChange={(e)=>setTehText(e.target.value)}\n                                              style={{resize: 'none', width: '320px', height: '123px', whiteSpace: 'pre-line', borderRadius: '6px', textAlign: 'left', marginBottom: '20px'}}\n                                            />\n                                          </div> \n\n                                          <label className='title-label' style={{marginTop: '44px', position: 'absolute', top: '300px', right: '240px'}}>Техническое Задание</label>\n\n                                          <div  style={{display: 'flex', flexDirection: 'row', marginTop: '45px'}}>\n                                            <div>\n                                              <div style={{display: 'flex'}}>\n                                                <div className=\"text-field\" style={{marginBottom: '0px'}}>\n                                                  <input disabled={false} className=\"text-field__input\" type=\"text\" name=\"teh1\" id=\"teh1\" value={teh1} onChange={(e)=>setTeh1(e.target.value)} style={{textAlign: 'left', width: '160px', marginRight: '0px'}}/>\n                                                </div>\n                                                <div className=\"text-field\" style={{marginBottom: '0px'}}>\n                                                  <input disabled={false} className=\"text-field__input\" type=\"text\" name=\"teh2\" id=\"teh2\" value={teh2} onChange={(e)=>setTeh2(e.target.value)} style={{textAlign: 'left', width: '160px', marginRight: '0px'}}/>\n                                                </div>\n                                              </div>\n                                              <div style={{display: 'flex'}}>\n                                                <div className=\"text-field\" style={{marginBottom: '0px'}}>\n                                                  <input disabled={false} className=\"text-field__input\" type=\"text\" name=\"teh3\" id=\"teh3\" value={teh3} onChange={(e)=>setTeh3(e.target.value)} style={{textAlign: 'left', width: '160px', marginRight: '0px'}}/>\n                                                </div>\n                                                <div className=\"text-field\" style={{marginBottom: '0px'}}>\n                                                  <input disabled={false} className=\"text-field__input\" type=\"text\" name=\"teh4\" id=\"teh4\" value={teh4} onChange={(e)=>setTeh4(e.target.value)} style={{textAlign: 'left', width: '160px', marginRight: '0px'}}/>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n\n                                        {/* 4 */}   \n                                        <div style={{textAlign: 'center', marginTop: '10px', width: '230px',marginRight: '10px'}}>\n                                          <label className='title-label'>Телефон</label>\n                                          <div className=\"text-field\">\n                                            {/* <input disabled={true} className=\"text-field__input\" type=\"text\" name=\"dateReg\" id=\"dateReg\" style={{width: '230px', marginRight: '10px'}}/> */}\n                                            <InputMask\n                                                className=\"text-field__input\" \n                                                style={{width: '230px', marginRight: '10px'}}\n                                                type=\"text\" \n                                                name=\"phone\" \n                                                id=\"phone\"\n                                                mask=\"+7 (999) 999-99-99\"\n                                                disabled={true}\n                                                maskChar=\"\"\n                                                // onChange={(e) => setPhone(e.target.value)} \n                                                value={phone}\n                                                placeholder=''\n                                            >\n                                            </InputMask>\n                                          </div>\n\n                                          <label className='title-label'> </label>\n                                          <div className=\"text-field\">\n                                            {/* <input disabled={true} className=\"text-field__input\" type=\"text\" name=\"dateReg\" id=\"dateReg\" style={{width: '230px', marginRight: '10px'}}/> */}\n                                            <InputMask\n                                                className=\"text-field__input\" \n                                                style={{width: '230px', marginRight: '10px'}}\n                                                type=\"text\" \n                                                name=\"phone2\" \n                                                id=\"phone2\"\n                                                mask=\"+7 (999) 999-99-99\"\n                                                disabled={true}\n                                                maskChar=\"\"\n                                                // onChange={(e) => setPhone2(e.target.value)} \n                                                value={phone2}\n                                                placeholder=''\n                                            >\n                                            </InputMask>\n                                          </div>\n\n                                          <div style={{textAlign: 'left', display: 'flex', flexDirection: 'column', marginTop: '33px'}}>\n                                            <label className='title-label' style={{marginTop: '15px'}}>Предварительная смета</label>\n\n                                            <label className='title-label' style={{marginTop: '20px'}}>Финальная смета</label>\n\n                                            <label className='title-label' style={{marginTop: '20px'}}>Постер</label>\n                                          </div>\n\n                                          <div style={{marginTop: '52px', marginLeft: '-40px'}}>\n                                              <div style={{display: 'flex'}}>\n                                                <div className=\"text-field\" style={{marginBottom: '0px'}}>\n                                                  <input disabled={false} className=\"text-field__input\" type=\"text\" name=\"teh5\" id=\"teh5\" value={teh5} onChange={(e)=>setTeh5(e.target.value)} style={{textAlign: 'left', width: '160px', marginRight: '0px'}}/>\n                                                </div>\n                                                <div className=\"text-field\" style={{marginBottom: '0px'}}>\n                                                  <input disabled={false} className=\"text-field__input\" type=\"text\" name=\"teh6\" id=\"teh6\" value={teh6} onChange={(e)=>setTeh6(e.target.value)} style={{textAlign: 'left', width: '160px', marginRight: '0px'}}/>\n                                                </div>\n                                              </div>\n                                              <div style={{display: 'flex'}}>\n                                                <div className=\"text-field\" style={{marginBottom: '0px'}}>\n                                                  <input disabled={false} className=\"text-field__input\" type=\"text\" name=\"teh7\" id=\"teh7\" value={teh7} onChange={(e)=>setTeh7(e.target.value)} style={{textAlign: 'left', width: '160px', marginRight: '0px'}}/>\n                                                </div>\n                                                <div className=\"text-field\" style={{marginBottom: '0px'}}>\n                                                  <input disabled={false} className=\"text-field__input\" type=\"text\" name=\"teh8\" id=\"teh8\" value={teh8} onChange={(e)=>setTeh8(e.target.value)} style={{textAlign: 'left', width: '160px', marginRight: '0px'}}/>\n                                                </div>\n                                              </div>\n                                          </div>\n                                        </div>\n\n                                        {/* 5 */}   \n                                        <div style={{textAlign: 'center', marginTop: '10px'}}>\n                                          {/* <label className='title-label'> </label> */}\n                                          <div className=\"text-field text-field__input\" style={{textAlign: 'center', height: '40px', width: '40px', padding: '5px', marginTop: '24px'}}>\n                                            <img src={Trubka} style={{cursor: 'pointer', width: '24px', height: '24px'}}/>\n                                          </div>\n\n                                          {/* <label className='title-label'> </label> */}\n                                          <div className=\"text-field text-field__input\" style={{textAlign: 'center', height: '40px', width: '40px', padding: '5px', marginTop: '44px'}}>\n                                            <img src={Trubka} style={{cursor: 'pointer', width: '24px', height: '24px'}}/>\n                                          </div>\n\n                                          <div onClick={pressPredSmeta} className=\"text-field text-field__input\" style={{textAlign: 'center', height: '40px', width: '40px', marginBottom: '5px', fontSize: '20px', marginTop: '40px'}}>\n                                            {\n                                              playPredSmeta ? \n                                              (donePredSmeta ? <img src={btnYellow} alt='' width={25} style={{marginBottom: '7px'}}/> :   \n                                                <img src={btnBlue} alt='' width={25} style={{marginBottom: '7px'}}/>\n                                              )\n                                              \n                                              : '🟥'\n                                            }\n                                          </div>\n\n                                          <div onClick={pressFinSmeta} className=\"text-field text-field__input\" style={{textAlign: 'center', height: '40px', width: '40px', marginBottom: '5px', fontSize: '20px'}}>\n                                          {\n                                              playFinSmeta ? \n                                              (doneFinSmeta ? <img src={btnYellow} alt='' width={25} style={{marginBottom: '7px'}}/> :   \n                                                <img src={btnBlue} alt='' width={25} style={{marginBottom: '7px'}}/>\n                                              )\n                                              \n                                              : <img src={btnRed} alt='' width={25} style={{marginBottom: '7px'}}/>\n                                            }                   \n                                          </div>\n\n                                          <div onClick={pressPoster} className=\"text-field text-field__input\" style={{textAlign: 'center', height: '40px', width: '40px', marginBottom: '5px', fontSize: '20px', color: 'blue'}}>\n                                            {\n                                              playPoster ? \n                                              (showLoader ? <CSpinner style={{width: '20px', height: '20px'}}/> :\n                                                <img src={btnYellow} alt='' width={25} style={{marginBottom: '7px'}}/>\n                                              )\n                                              : <img src={btnBlue} alt='' width={25} style={{marginBottom: '7px'}}/>\n                                            }\n                                          </div>\n                                        </div>\n                                        \n\n                                    </div>\n                                  :'')\n                                )\n                              \n                            }\n                            {/* Сайдбар с комментариями */}\n                            <div style={{\n                                display: showSidebar ? 'block' : 'none',\n                                position: 'absolute',\n                                right: '0px',\n                                top: '120px',\n                                height: '580px',\n                                background: '#10171a'\n                              }}>\n\n                              <div>\n                                <img src={Close} onClick={()=>setShowSidebar(false)} style={{position: 'absolute', top: '15px', right: '15px'}}/>\n                              </div>\n\n                              <div style={{width: '20rem'}}>\n\n                              </div>\n\n                            </div>\n\n                          </CCardBody>\n                        </CCard>\n\n                        \n                        <CCard className=\"mb-4\" style={{display: showMainTable ? 'block' : 'none'}}>\n                          <CCardHeader onClick={() => setVisibleA(!visibleA)}>Специалисты</CCardHeader>\n                          <CCollapse visible={visibleA}>\n                            <CCardBody style={{padding: '12px'}}>\n                              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive style={{fontSize: '16px',overflow: 'hidden', width: '1592px', borderRadius: '5px' }}>\n                                <CTableHead className=\"text-center\" color=\"light\">\n                                  <CTableRow>\n                                    <CTableHeaderCell className=\"text-center\" style={{width: '56px'}}>\n                                      <CFormCheck\n                                        name=\"allselect\"\n                                        checked={ !mainspec.some((user)=>user?.isChecked !== true) }\n                                        onChange={handleChange}\n                                        style={{backgroundColor: '#181924', border: '1px solid #121212'}}\n                                      />\n                                    </CTableHeaderCell> \n                                    <CTableHeaderCell className=\"text-center\" style={{width: '180px'}}>Дата</CTableHeaderCell> \n                                    <CTableHeaderCell className=\"text-center\" style={{minWidth: '170px'}}>Вид работ</CTableHeaderCell>  \n                                    <CTableHeaderCell className=\"text-center\" style={{minWidth: '250px'}}>ФИО</CTableHeaderCell>\n                                    <CTableHeaderCell className=\"text-center\" style={{minWidth: '20px'}}></CTableHeaderCell> \n                                    <CTableHeaderCell className=\"text-center\" style={{minWidth: '250px'}}>Специальность</CTableHeaderCell>  \n                                    <CTableHeaderCell className=\"text-center\" style={{minWidth: '40px'}}>Ставка</CTableHeaderCell>\n                                    <CTableHeaderCell className=\"text-center\" style={{minWidth: '20px'}}>С</CTableHeaderCell>\n                                    <CTableHeaderCell className=\"text-center\" style={{minWidth: '20px'}}>Д</CTableHeaderCell>\n                                    <CTableHeaderCell className=\"text-center\" style={{minWidth: '250px'}}>Комтег</CTableHeaderCell>                         \n                                    <CTableHeaderCell className=\"text-center\" style={{minWidth: '170px'}}>Комментарий</CTableHeaderCell>\n                                    <CTableHeaderCell className=\"text-center\" style={{minWidth: '50px'}}>Мерч</CTableHeaderCell>\n                                    <CTableHeaderCell className=\"text-center\" style={{minWidth: '50px'}}>Такси</CTableHeaderCell>\n                                  </CTableRow>\n                                </CTableHead>\n                                <CTableBody> \n                                { mainspec.length > 0 ?\n                                 mainspec.map((item, index)=> (\n                                    <CTableRow key={item.id} v-for=\"item in tableItems\" style={{lineHeight: '14px'}}>\n                                    <CTableDataCell className=\"text-center\" style={{position: 'relative', height: '30px'}}>\n                                      <div className=\"parent-element\" style={{position: 'absolute', left: '3px', top: '6px'}}>\n                                        <Dropdown onSelect={changeAddSpec}>\n                                          <Dropdown.Toggle \n                                            as={CustomToggle} \n                                            //id=\"dropdown-custom-components\"\n                                            key={item.id}\n                                            id={`dropdown-button-drop-${item.id}`}\n                                            drop={index === mainspec.length-1 ? 'up' : 'down'}\n                                          >\t\t\t\t\t\t\t\t\t\t\t\n                                          </Dropdown.Toggle>\n                                          <Dropdown.Menu as={CustomMenu}> \n                                          <Dropdown.Item eventKey={`1 ${item.id} ${index}`}>Добавить</Dropdown.Item>\n                                          <Dropdown.Item eventKey={`2 ${item.id} ${index}`}>Дублировать</Dropdown.Item>\n                                          <Dropdown.Item eventKey={`3 ${item.id} ${index}`}>Разделитель</Dropdown.Item>\n                                          <Dropdown.Item eventKey={`4 ${item.id} ${index}`}>Удалить</Dropdown.Item>\n                                          </Dropdown.Menu>\n                                        </Dropdown>\n                                      </div>                              \n\n                                      <CFormCheck \n                                        name={item.id}\n                                        checked={item?.isChecked || false}\n                                        onChange={handleChange}\n                                        style={{backgroundColor: '#181924', border: '1px solid #434343', margin: '0px 5px', position: 'absolute', left: '15px', top: '7px'}} \n                                      />\n                                      \n                                      {/* {item.hr ? '' : <span style={{position: 'absolute', left: '45px', top: '8px'}}>❌</span>} */}\n                                      {item.hr ? '' : <span style={{position: 'absolute', left: '45px', top: '8px'}}>{item.count}</span>}\n                                    </CTableDataCell> \n                                    <CTableDataCell className=\"text-center\">\n                                      {item.hr ?\n                                      <></>\n                                      :<div style={{display: 'flex'}}>\n                                        <InputMask \n                                          mask=\"99.99.9999\"\n                                          value={item.date !== 'undefined' ? item.date?.split('T')[0] : ''}\n                                          onChange={(e)=>changeDateProject(e, index)}>\n                                          {(inputProps) => <CFormInput \n                                                            {...inputProps} \n                                                            placeholder=\"\" \n                                                            disableUnderline\n                                                            aria-label=\"sm input example\"\n                                                            style={{backgroundColor: 'transparent', height: '14px', textAlign: 'center', border: 'none', borderRadius: '5px', width: '100px'}} \n                                                          />}\n                                        </InputMask>\n                                        <InputMask \n                                          mask=\"99:99\"\n                                          value={item.date !== 'undefined' ? item.date?.split('T')[1] : ''}\n                                          onChange={(e)=>changeTimeProject(e, index)}>\n                                          {(inputProps) => <CFormInput \n                                                            {...inputProps} \n                                                            placeholder=\"\" \n                                                            disableUnderline\n                                                            aria-label=\"sm input example\"\n                                                            style={{backgroundColor: 'transparent', height: '14px', border: 'none', borderRadius: '5px', width: '50px', padding: '5px 0px'}} \n                                                          />}\n                                        </InputMask>\n                                      </div>\n                                    } \n                                    </CTableDataCell>  \n                                    <CTableDataCell className=\"text-center\" style={{height: '26px'}}>\n                                      {item.hr ?\n                                      <></> \n                                      :\n                                      <MyDropdown5\n                                        options={vids}\n                                        selected={mainspec}\n                                        setSelected={setMainspec}\n                                        index={index}\n                                        element={'vidWork'}\n                                        placeholder='—'\n                                      />\n                                      }\n                                    </CTableDataCell>   \n                                    <CTableDataCell className=\"text-center\">\n                                    {item.hr ?\n                                      <></> \n                                      :<MyDropdown6\n                                        options={workersData}\n                                        selected={mainspec}\n                                        setSelected={setMainspec}\n                                        index={index}\n                                        element={'specId'}\n                                        placeholder=''\n                                        style={{width: '370px'}}\n                                      />\n                                    }\n                                    </CTableDataCell> \n                                    <CTableDataCell className=\"text-center\" style={{padding: '0px 5px'}}>\n                                      {/* <img src={Trubka} alt='' style={{cursor: 'pointer', width: '20px', height: '20px'}}/> */}\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center widthSpace\">\n                                    {item.hr ?\n                                      <></> \n                                      :<MyDropdown5\n                                        options={specOnlyData2}\n                                        selected={mainspec}\n                                        setSelected={setMainspec}\n                                        index={index}\n                                        element={'specialization'}\n                                      />\n                                    }\n                                    </CTableDataCell> \n                                    <CTableDataCell className=\"text-center\">\n                                    {item.hr ?\n                                      <></> \n                                      :<MyDropdown5\n                                        options={[{value: 1, label: \"№1\", name: '№1', color: ''}, {value: 2, label: \"№2\", name: '№2', color: ''}, {value: 3, label: \"№3\", name: '№3', color: ''}, {value: 4, label: \"№4\", name: '№4', color: ''}, {value: 5, label: \"№5\", name: '№5', color: ''}, {value: 6, label: \"№6\", name: '№6', color: ''}, {value: 7, label: \"№7\", value: '7', color: ''}, {value: 8, label: \"№8\", value: '8', color: ''}]}\n                                        selected={mainspec}\n                                        setSelected={setMainspec}\n                                        index={index}\n                                        element={'stavka'}\n                                        style={{width: '130px'}}\n                                      />\n                                    }\n                                    </CTableDataCell> \n                                    <CTableDataCell className=\"text-center\">\n                                      {/* 🟩 */}\n                                    </CTableDataCell> \n                                    <CTableDataCell className=\"text-center\">\n                                      {/* 🟩 */}\n                                    </CTableDataCell> \n                                    <CTableDataCell className=\"text-center\">\n                                    {item.hr ?\n                                      <></> \n                                      :<MyDropdown5\n                                        options={comtegs}\n                                        selected={mainspec}\n                                        setSelected={setMainspec}\n                                        index={index}\n                                        element={'comteg'}\n                                        style={{width: '300px'}}\n                                      />\n                                    }\n                                    </CTableDataCell>   \n                                    <CTableDataCell className=\"text-center\">\n                                      {item.hr ?\n                                      <></>\n                                      :<input\n                                        name='commentMain'\n                                        value={item.comment}\n                                        onChange={(e)=>changeCommentMain(e, index)}\n                                        style={{backgroundColor: 'transparent', height: '15px', textAlign: 'center', border: 'none', width: '140px', padding: '5px 0px', color: '#f3f3f3', fontSize: '14px'}} \n                                      ></input>\n                                      }\n                                    </CTableDataCell> \n                                    <CTableDataCell className=\"text-center\">\n                                      {/* ✅ */}\n                                    </CTableDataCell> \n                                    <CTableDataCell className=\"text-center\">\n                                      {/* ✅ */}\n                                      {item.numder}\n                                    </CTableDataCell>           \n                                    </CTableRow>\n                                  ))\n                                  :\"\"\n                                }\n                                </CTableBody>                   \n                              </CTable>\n                            </CCardBody>\n                          </CCollapse>\n                        </CCard>\n\n                        <CCard className=\"mb-4\" style={{display: showPretendentTable ? 'block' : 'none'}}>\n                          <CCardHeader onClick={() => setVisibleB(!visibleB)}>Претенденты</CCardHeader>\n                          <CCollapse visible={visibleB}>\n                            <CCardBody style={{padding: '12px'}}>\n                            <CTable align=\"middle\" className=\"mb-0 border\" hover responsive style={{fontSize: '16px',overflow: 'auto', width: '1471px', borderRadius: '5px' }}>\n                                <CTableHead className=\"text-center\" color=\"light\">\n                                  <CTableRow>\n                                    <CTableHeaderCell className=\"text-center\" style={{width: '61px'}}>\n                                      <CFormCheck\n                                        style={{backgroundColor: '#181924', border: '1px solid #121212'}}\n                                      />\n                                      <split style={{position: 'absolute', left: '65px', top: '61px'}}>{pretendents.length}</split>\n                                    </CTableHeaderCell> \n                                    <CTableHeaderCell onClick={sortDate} className=\"text-center\" style={{width: '160px'}}>Дата</CTableHeaderCell> \n                                    <CTableHeaderCell className=\"text-center\" style={{minWidth: '150px'}}>Статус</CTableHeaderCell>  \n                                    <CTableHeaderCell className=\"text-center\" style={{minWidth: '250px'}}>ФИО</CTableHeaderCell>\n                                    <CTableHeaderCell className=\"text-center\" style={{minWidth: '20px'}}></CTableHeaderCell> \n                                    <CTableHeaderCell className=\"text-center\" style={{minWidth: '250px'}}>Специальность</CTableHeaderCell>  \n                                    <CTableHeaderCell className=\"text-center\" style={{minWidth: '40px'}}>Проекты</CTableHeaderCell>  \n                                    <CTableHeaderCell className=\"text-center\" style={{minWidth: '250px'}}>Комтег</CTableHeaderCell>                      \n                                    <CTableHeaderCell className=\"text-center\" style={{minWidth: '170px'}}>Комментарий</CTableHeaderCell>\n                                    <CTableHeaderCell className=\"text-center\" style={{minWidth: '20px'}}>С</CTableHeaderCell>\n                                    <CTableHeaderCell className=\"text-center\" style={{minWidth: '20px'}}>Д</CTableHeaderCell>\n                                  </CTableRow>\n                                </CTableHead>\n                                <CTableBody>   \n                                { pretendents.length > 0 ?\n                                 pretendents.map((item, index)=> (                               \n                                  <CTableRow key={item.id}  v-for=\"item in tableItems\" style={{lineHeight: '14px'}}>\n                                    <CTableDataCell className=\"text-center\" style={{position: 'relative'}}>\n                                      <div className=\"parent-element\" style={{position: 'absolute', left: '2px', top: '6px'}}>\n                                        <Dropdown>\n                                          <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\t\t\t\t\t\t\t\t\t\t\t\n                                          </Dropdown.Toggle>\n                                          <Dropdown.Menu as={CustomMenu}> \n                                          <Dropdown.Item>Добавить</Dropdown.Item>\n                                          <Dropdown.Item>Дублировать</Dropdown.Item>\n                                          <Dropdown.Item>Разделитель</Dropdown.Item>\n                                          <Dropdown.Item>Удалить</Dropdown.Item>\n                                          </Dropdown.Menu>\n                                        </Dropdown>\n                                      </div>\n\n                                      <CFormCheck \n                                        style={{backgroundColor: '#181924', border: '1px solid #434343', margin: '0px 5px', position: 'absolute', left: '15px', top: '7px'}} \n                                        \n                                      />\n                                      \n                                      {/* <span style={{position: 'absolute', left: '45px', top: '8px'}}>❌</span> */}\n                                    </CTableDataCell> \n                                    <CTableDataCell className=\"text-center\">\n                                      {item.data}\n                                    </CTableDataCell>  \n                                    <CTableDataCell className=\"text-center\">\n                                      <MyDropdown52\n                                        options={[{label: \"В Проект\", name: 'В Проект', color: 'green'}, {label: \"Отказано\", name: 'Отказано', color: 'yellow'}]}\n                                        selected={pretendents}\n                                        setSelected={setPretendents}\n                                        index={index}\n                                        setWorker={setPretendents}\n                                        element={'status'}\n                                        placeholder='—'\n                                        style={{height: '60px'}}\n                                      />\n                                    </CTableDataCell>   \n                                    <CTableDataCell className=\"text-center\" style={{cursor: 'pointer'}}>\n                                      <Link to={'/specialist'} state={{ workerId: item.workerId, }}>\n                                        {item.fio}\n                                      </Link>\n                                    </CTableDataCell> \n                                    <CTableDataCell className=\"text-center\" style={{padding: '0px 5px'}}>\n                                      <img src={Trubka} alt='' onClick={clickSave} style={{cursor: 'pointer', width: '20px', height: '20px'}}/>\n                                    </CTableDataCell>\n                                    <CTableDataCell className=\"text-center widthSpace\">\n                                      <CTooltip\n                                        content={item.spec}\n                                        placement=\"bottom\"\n                                      >\n                                        <div>{item.spec}</div>\n                                      </CTooltip>\n\n                                    </CTableDataCell> \n                                    <CTableDataCell className=\"text-center\">\n                                      0 | 0\n                                    </CTableDataCell>  \n                                    <CTableDataCell className=\"text-center\">\n                                      {item.comteg ? \n                                      // <CTooltip\n                                      //   content={item.comteg[0]?.name}\n                                      //   placement=\"bottom\"\n                                      // >\n                                      <div>{item.comteg[0]?.name}</div>\n                                      // </CTooltip>\n                                      :''}\n                                    </CTableDataCell>    \n                                    <CTableDataCell className=\"text-center\">\n                                      {item.comment ? \n                                      <CTooltip\n                                        content={item.comment[0]?.content}\n                                        placement=\"bottom\"\n                                      >\n                                        <div>{item.comment[0]?.content && item.comment[0]?.content.length > 10 ? item.comment[0]?.content.substr(0, 10) + '...' : item.comment[0]?.content}</div>\n                                      </CTooltip>  \n                                      :''}\n                                    </CTableDataCell> \n                                    <CTableDataCell className=\"text-center\">\n                                      🟩\n                                    </CTableDataCell> \n                                    <CTableDataCell className=\"text-center\">\n                                      🟩\n                                    </CTableDataCell>           \n                                  </CTableRow>\n                                  ))\n                                  :\"\"\n                                }\n                                </CTableBody>                   \n                              </CTable>\n                            </CCardBody>\n                          </CCollapse>\n                        </CCard>\n\n                        <CCard className=\"mb-4\" style={{display: showPosterTable ? 'block' : 'none'}}>\n                          <CCardHeader onClick={() => setVisibleC(!visibleC)}>Постеры</CCardHeader>\n                          <CCollapse visible={visibleC}>\n                            <CCardBody style={{padding: '12px'}}>\n                              <table className='frame2'>\n                                <><tr>\n                                    <td className='day2'>\n                                        <p className='date-day'></p>\n                                    </td>\n                                    <td className='day2'>\n                                        <p className='date-day'></p>\n                                    </td>\n                                    <td className='day2'>\n                                        <p className='date-day'></p>\n                                    </td>\n                                    <td className='day2'>\n                                        <p className='date-day'></p>\n                                    </td>\n                                    <td className='day2'>\n                                        <p className='date-day'></p>\n                                    </td>\n                                    <td className='day2'>\n                                        <p className='date-day'></p>\n                                    </td>\n                                    <td className='day2'>\n                                        <p className='date-day'></p>\n                                    </td>\n                                </tr>\n                                <tr style={{height: '20px'}}></tr>\n                                </>\n                              </table>\n                            </CCardBody>\n                          </CCollapse>\n                        </CCard>\n\n                      </CCol>\n                    </CRow>\n\n                    <CModal\n                      alignment=\"center\"\n                      visible={showModal}\n                      onClose={() => setShowModal(false)}\n                      aria-labelledby=\"VerticallyCenteredExample\"\n                    >\n                      <CModalBody style={{height: '100px', textAlign: 'center', fontSize: '18px', paddingTop: '15px'}}>\n                        Идёт сохранение данных...\n                      </CModalBody>\n                    </CModal>\n\n                    <CModal\n                      backdrop=\"static\"\n                      visible={visibleDelete}\n                      onClose={() => setVisibleDelete(false)}\n                      aria-labelledby=\"StaticBackdropExampleLabel\"\n                    >\n                      <CModalHeader>\n                        <CModalTitle id=\"StaticBackdropExampleLabel\">Предупреждение</CModalTitle>\n                      </CModalHeader>\n                      <CModalBody>\n                        Проект будет удален из базы!\n                      </CModalBody>\n                      <CModalFooter>\n                        <CButton color=\"secondary\" onClick={() => setVisibleDelete(false)}>\n                          Отмена\n                        </CButton>\n                        <CButton color=\"primary\" onClick={()=>deleteProfile(id)}>Удалить</CButton>\n                      </CModalFooter>\n                    </CModal>\n                </Suspense>\n            </CContainer>\n\n            \n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default Projects\n","/* eslint-disable react/react-in-jsx-scope */\nimport { Link } from 'react-router-dom'\nimport { createColumnHelper } from '@tanstack/react-table'\nimport { CFormCheck } from '@coreui/react'\nimport { useMemo, useState } from 'react'\n//import { format } from '../../../utils'\n\nimport estimates from '../../data/data'\n\nexport const useTableData = () => {\n  const [data, setData] = useState(estimates)\n  const [columnFilters, setColumnFilters] = useState()\n  const [active, setActive] = useState(false)\n  const columnHelper = createColumnHelper()\n\n  function handleActive() {\n    console.log(active)\n    setActive(!active)\n  }\n\n  const columns = useMemo(\n    () => [\n      columnHelper.display({\n        id: 'selection',\n        size: 30,\n        header: ({ table }) => (\n          <CFormCheck\n            checked={table.getIsAllRowsSelected()}\n            onChange={table.getToggleAllRowsSelectedHandler()}\n          />\n        ),\n        cell: ({ row }) => (\n          <CFormCheck checked={row.getIsSelected()} onChange={row.getToggleSelectedHandler()} />\n        ),\n        footer: ({ table }) =>\n          table.getFilteredRowModel().rows.reduce((acc, val) => {\n            acc += 1\n            return acc\n          }, 0),\n      }),\n      columnHelper.accessor('date', {\n        id: 'date',\n        header: 'Дата',\n        size: 95,\n      }),\n      columnHelper.accessor('vid', {\n        id: 'vid',\n        header: 'Вид работ',\n        size: 300,\n        minSize: 150,\n        cell: (value) => (\n          <Link to={'/business/estimates/estimate'} className=\"nav-link\">\n            {value.getValue()}\n          </Link>\n        ),\n        filterFn: (row, id, value) => {\n          return value.includes(row.getValue(id))\n        },\n      }),\n      columnHelper.accessor('manager', {\n        id: 'fio',\n        header: 'ФИО',\n        size: 300,\n        minSize: 150,\n        filterFn: (row, id, value) => {\n          return value.includes(row.getValue(id))\n        },\n      }),\n\n      columnHelper.accessor('specialnost', {\n        id: 'specialnost',\n        header: 'Специальность',\n        size: 300,\n        minSize: 150,\n        filterFn: (row, id, value) => {\n          return value.includes(row.getValue(id))\n        },\n      }),\n\n      columnHelper.accessor('hours', {\n        id: 'stavka',\n        header: 'Ставка',\n        size: 57,\n        footer: ({ table }) =>\n          table.getFilteredRowModel().rows.reduce((acc, val) => {\n            acc += Number(val.getValue('hours'))\n            return acc\n          }, 0),\n      }),\n      columnHelper.accessor('comteg', {\n        id: 'comteg',\n        header: 'Комтег',\n        size: 100,\n        cell: '',\n\n      }),\n      columnHelper.accessor('comment', {\n        id: 'comment',\n        header: 'Комментарий',\n        size: 50,\n        // cell: StatusCell,\n        cell: (value) => {\n          const { icon } = value.getValue() || {}\n\n          return icon\n        },\n      }),\n    ],\n    [],\n  )\n\n  return { columns, data, setData, columnFilters, setColumnFilters, handleActive }\n}\n"],"names":["getSpecCount","async","count","prev","$host","get","concat","data","error","console","log","message","editSpecialist","id","patch","addSpecialist","post","deleteSpecialist","getWContacts","STATUS_IN_PROGRESS","name","color","icon","STATUS_DONE","STATUS_NEW","project","date","manager","hours","payment","company","status","options","value","label","projList","managerList","idList","statusList","companyList","cityList","filters","period","Filters","_ref","columnFilters","setColumnFilters","setShowCalendar","setShowCalendar2","MONTHS","setDate","day","setDay","month","setMonth","year","setYear","startDay","setStartDay","currentDays","useUsersContext","startDate","setStartDate","useState","Date","endDate","setEndDate","filterType","setFilterType","filter","setFilter","filter2","setFilter2","filter3","setFilter3","filter4","setFilter4","filter5","setFilter5","filter6","setFilter6","countPress","setCountPress","useEffect","_jsx","_Fragment","children","_jsxs","CRow","lg","gutter","className","CCol","style","maxWidth","left","width","paddingLeft","listStyle","position","top","display","justifyContent","right","Select","onChange","selectedOption","defaultValue","classNamePrefix","autoFocus","tt","CButton","onClick","marginRight","padding","marginLeft","src","ChangeSloy","alt","background","placeholder","CCloseButton","height","Calendar2","projects","setProjects","openProject","setHeight","showSidebar","setShowSidebar","setShowProject","manthList","today","getDate","getMonth","getFullYear","getStartDayOfMonth","setCurrentDays","showButtonAdd","setShowButtonAdd","showButtonAdd2","setShowButtonAdd2","showButtonAdd3","setShowButtonAdd3","showButtonAdd4","setShowButtonAdd4","showButtonAdd5","setShowButtonAdd5","showButtonAdd6","setShowButtonAdd6","showButtonAdd7","setShowButtonAdd7","setProject","project2","setProject2","project3","setProject3","project4","setProject4","project5","setProject5","project6","setProject6","project7","setProject7","projectName","setProjectName","projectName2","setProjectName2","projectName3","setProjectName3","projectName4","setProjectName4","projectName5","setProjectName5","projectName6","setProjectName6","projectName7","setProjectName7","projectEnd","setProjectEnd","projectEnd2","setProjectEnd2","projectEnd3","setProjectEnd3","projectEnd4","setProjectEnd4","projectEnd5","setProjectEnd5","projectEnd6","setProjectEnd6","projectEnd7","setProjectEnd7","projectStatus","setProjectStatus","projectStatus2","setProjectStatus2","projectStatus3","setProjectStatus3","projectStatus4","setProjectStatus4","projectStatus5","setProjectStatus5","projectStatus6","setProjectStatus6","projectStatus7","setProjectStatus7","projectColor","setProjectColor","projectColor2","setProjectColor2","projectColor3","setProjectColor3","projectColor4","setProjectColor4","projectColor5","setProjectColor5","projectColor6","setProjectColor6","projectColor7","setProjectColor7","projectTime","setProjectTime","projectTime2","setProjectTime2","projectTime3","setProjectTime3","projectTime4","setProjectTime4","projectTime5","setProjectTime5","projectTime6","setProjectTime6","projectTime7","setProjectTime7","projectSpecifika","setProjectSpecifika","projectSpecifika2","setProjectSpecifika2","projectSpecifika3","setProjectSpecifika3","projectSpecifika4","setProjectSpecifika4","projectSpecifika5","setProjectSpecifika5","projectSpecifika6","setProjectSpecifika6","projectSpecifika7","setProjectSpecifika7","projectComment","setProjectComment","projectComment2","setProjectComment2","projectComment3","setProjectComment3","projectComment4","setProjectComment4","projectComment5","setProjectComment5","projectComment6","setProjectComment6","projectComment7","setProjectComment7","projectCity","setProjectCity","projectCity2","setProjectCity2","projectCity3","setProjectCity3","projectCity4","setProjectCity4","projectCity5","setProjectCity5","projectCity6","setProjectCity6","projectCity7","setProjectCity7","projectTehText","setProjectTehText","projectTehText2","setProjectTehText2","projectTehText3","setProjectTehText3","projectTehText4","setProjectTehText4","projectTehText5","setProjectTehText5","projectTehText6","setProjectTehText6","projectTehText7","setProjectTehText7","projectCompanyId","setProjectCompanyId","projectCompanyId2","setProjectCompanyId2","projectCompanyId3","setProjectCompanyId3","projectCompanyId4","setProjectCompanyId4","projectCompanyId5","setProjectCompanyId5","projectCompanyId6","setProjectCompanyId6","projectCompanyId7","setProjectCompanyId7","projectId","setProjectId","projectId2","setProjectId2","projectId3","setProjectId3","projectId4","setProjectId4","projectId5","setProjectId5","projectId6","setProjectId6","projectId7","setProjectId7","ref","useRef","arr","arr2","arr3","arr4","arr5","arr6","arr7","nameProj","nameProj2","nameProj3","nameProj4","nameProj5","nameProj6","nameProj7","statusProj","statusProj2","statusProj3","statusProj4","statusProj5","statusProj6","statusProj7","colorProj","colorProj2","colorProj3","colorProj4","colorProj5","colorProj6","colorProj7","timeProj","timeProj2","timeProj3","timeProj4","timeProj5","timeProj6","timeProj7","cityProj","cityProj2","cityProj3","cityProj4","cityProj5","cityProj6","cityProj7","commentProj","commentProj2","commentProj3","commentProj4","commentProj5","commentProj6","commentProj7","specifProj","specifProj2","specifProj3","specifProj4","specifProj5","specifProj6","specifProj7","endProj","endProj2","endProj3","endProj4","endProj5","endProj6","endProj7","idProj","idProj2","idProj3","idProj4","idProj5","idProj6","idProj7","Array","days","fill","map","_","index","d","item","ind","_item$dateEnd","_item$dateEnd2","_statusData$find","_item$dateStart$split","_item$dateEnd3","_statusData$find8","_item$dateStart$split8","_statusData$find15","_item$dateStart$split15","dateEnd","dateStart","split","toISOString","getTime","setHours","getHours","_statusData$find7","_item$dateStart$split7","statusData","find","stat","slice","city","comment","specifika","_statusData$find6","_item$dateStart$split6","_statusData$find5","_item$dateStart$split5","_statusData$find4","_item$dateStart$split4","_statusData$find3","_item$dateStart$split3","_statusData$find2","_item$dateStart$split2","_statusData$find14","_item$dateStart$split14","_statusData$find13","_item$dateStart$split13","_statusData$find12","_item$dateStart$split12","_statusData$find11","_item$dateStart$split11","_statusData$find10","_item$dateStart$split10","_statusData$find9","_item$dateStart$split9","_statusData$find21","_item$dateStart$split21","_statusData$find20","_item$dateStart$split20","_statusData$find19","_item$dateStart$split19","_statusData$find18","_item$dateStart$split18","_statusData$find17","_item$dateStart$split17","_statusData$find16","_item$dateStart$split16","addNewProject","number","projectTitle","datestart","dateend","teh","managerId","companyId","chatId","spec","geo","res","addProject","setTimeout","usersCopy","JSON","parse","stringify","push","getDay","current","clientHeight","firstDayOfMonth","weekdayOfFirstDay","getUTCDay","calendarDay","currentMonth","selected","toDateString","isLeapYear","overDay","td","outDay","overflow","prevMonth","fontSize","findIndex","el","nextMonth","backgroundColor","zIndex","isWeekend","onMouseOver","onMouseOut","String","padStart","border","marginBottom","length","substr","setSelected","element","setWorker","menuShow","setMenuShow","arrSelect","setArrSelect","clearShow","setClearShow","dropdownList","option","i","e","selectOption","target","innerText","userObject","_objectSpread","wrapperRef","handleClickOutside","event","contains","stopPropagation","document","addEventListener","removeEventListener","drp","Select2","Close","clickClear","visibility","addMainspec","deleteMainspec","Projects","columns","setData","handleActive","useTableData","estimates","active","setActive","columnHelper","createColumnHelper","useMemo","size","header","table","CFormCheck","checked","getIsAllRowsSelected","getToggleAllRowsSelectedHandler","cell","_ref2","row","getIsSelected","getToggleSelectedHandler","footer","_ref3","getFilteredRowModel","rows","reduce","acc","val","accessor","minSize","Link","to","getValue","filterFn","includes","_ref4","Number","companysAll","managersAll","workersAll","platformsAll","showCalendar","showCalendar2","showProject","showSaveAddress","setShowSaveAddress","setId","crmID","setCrmID","startTime","setStartTime","endTime","setEndTime","setCity","statusProject","setStatusProject","specifikaProject","setSpecifikaProject","vidProject","setVidProject","setCompany","companyName","setCompanyName","companysData","setCompanysData","managerName","setManagerName","managerName2","setManagerName2","managersData","setManagersData","workersData","setWorkersData","specialistName","setSpecialistName","locationProject","setLocationProject","platformsData","setPlatformsData","phone","setPhone","phone2","setPhone2","teh1","setTeh1","teh2","setTeh2","teh3","setTeh3","teh4","setTeh4","teh5","setTeh5","teh6","setTeh6","teh7","setTeh7","teh8","setTeh8","tehText","setTehText","address","setAddress","geoId","setGeoId","setComment","comteg","setComteg","setSpec","stavka","setStavka","statusPretendent","setStatusPretendent","visibleDelete","setVisibleDelete","visibleA","setVisibleA","visibleB","setVisibleB","visibleC","setVisibleC","showMainTable","setShowMainTable","showPretendentTable","setShowPretendentTable","showPosterTable","setShowPosterTable","showDots","setShowDots","showModal","setShowModal","playPredSmeta","setPlayPredSmeta","donePredSmeta","setDonePredSmeta","playFinSmeta","setPlayFinSmeta","doneFinSmeta","setDoneFinSmeta","playPoster","setPlayPoster","showLoader","setShowLoader","sortedCities","setSortedCities","mainspec","setMainspec","dateProject","setDateProject","timeProject","setTimeProject","pretendents","setPretendents","countPressDate","setCountPressDate","useReactTable","defaultColumn","maxSize","state","meta","updateData","rowIndex","columnId","getCoreRowModel","getSortedRowModel","onColumnFiltersChange","getPaginationRowModel","enableRowSelection","getRowCanExpand","newCities","cities","one","newSorted","sort","a","b","arrCompanys","title","sortedComp","arrManagers","fio","sortedManager","arrPlatfroms","sortedPlat","cityA","toLowerCase","cityB","sortProj","getProjects","fetchData","closeProfile","CustomToggle","React","threeDots","preventDefault","cursor","displayName","CustomMenu","labeledBy","setValue","borderRadius","minWidth","toArray","child","_child$props$children","props","startsWith","changeAddSpec","eventkey","resProj","getProjectId","toLocaleString","resAdd","parseInt","arrayCopy","splice","specId","vidWork","specialization","taxi","merch","isChecked","handleAllEdit","dublSpec","hr","handleAllDelete","handleChange","checkedvalue","user","checkedinputvalue","newObj","copyArray","result","some","clickSave","AppSidebar","AppHeader","CContainer","Suspense","fallback","CSpinner","xs","CCard","CCardBody","marginTop","textAlign","end","timeStart","_resProj$dateEnd","_resProj$dateEnd$spli","_specifikaData$find","d2","specifikaData","compTitle","toString","managerFio","comp","managerFio2","managerId2","comp2","loc","text","track","url","flexDirection","disabled","type","Trubka","Tg","zamok","Disketa","_managersAll$find","_managersAll$find2","_companysAll$find","_companysAll$find2","month2","day2","saveData","resSave","editProject","userIndex","saveProject","paddingTop","DatePicker","selectsStart","dateFormat","MyDropdown4","resize","whiteSpace","Autocomplete","sx","fontFamily","fontWeight","lineHeight","openOnFocus","onInputChange","newValue","inputValue","renderInput","params","InputProps","inputProps","autoComplete","navigator","clipboard","writeText","newInputValue","onChangeManager2","InputMask","mask","maskChar","resAddSmeta","getCreatePredSmeta","btnYellow","btnBlue","getCreateFinSmeta","btnRed","resAddPoster","getCreatePoster","CCardHeader","CCollapse","visible","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","CTableBody","_item$date","_item$date2","CTableDataCell","Dropdown","onSelect","Toggle","as","drop","Menu","Item","eventKey","margin","changeDateProject","_arr$index$date","CFormInput","disableUnderline","changeTimeProject","MyDropdown5","vids","MyDropdown6","specOnlyData2","comtegs","changeCommentMain","numder","sortDate","sortedWorker","tgA","tgB","fioA","_item$comteg$","_item$comment$","_item$comment$2","_item$comment$3","_item$comment$4","_item$comment$5","MyDropdown52","workerId","CTooltip","content","placement","CModal","alignment","onClose","CModalBody","backdrop","CModalHeader","CModalTitle","CModalFooter","deleted","deleteProfile","AppFooter"],"sourceRoot":""}