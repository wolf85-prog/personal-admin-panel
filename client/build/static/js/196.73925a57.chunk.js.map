{"version":3,"file":"static/js/196.73925a57.chunk.js","mappings":"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","sources":["webpack://client/./src/components/Dropdown2/Dropdown2.module.css?3038","components/Dropdown2/Dropdown2.jsx","http/platformAPI.js","pages/Platforms.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dropdown\":\"Dropdown2_dropdown__mo16b\",\"speclist\":\"Dropdown2_speclist__S9Lh-\",\"menu\":\"Dropdown2_menu__xeqTf\",\"active\":\"Dropdown2_active__YFYfk\",\"menuOpen\":\"Dropdown2_menuOpen__2nVER\",\"close\":\"Dropdown2_close__rxhdg\"};","import React, {useState, useRef, useEffect} from 'react';\nimport drp from './Dropdown2.module.css'\nimport Close from \"../../assets/images/close.svg\"\n\nconst Dropdown2 = ({options, tags, setTags, widthStyle}) => {\n    const [menuShow, setMenuShow] = useState(false)\n    const [selected, setSelected] = useState(options[0])\n    const [showClose, setShowClose] = useState(false)\n\n    //console.log(spec)\n\n    const selectOption = e => {\n        \n        const res = tags.find(item => item === e.target.innerText)\n        if (!res) {\n            tags.push(e.target.innerText)\n            setTags(tags) \n        } else {\n            console.log('Специальность уже существует!')\n        }\n        \n        //console.log(\"spec: \", tags)\n        setMenuShow(!menuShow)\n    }\n\n    function removeTag(index, e){\n        e.stopPropagation();\n        setTags(tags.filter((el, i) => i !== index))\n    }\n\n\n    const specList = tags.map((item, i) =>\n       // if (item !== 'Blacklist') {\n            <li key={i} onMouseOver={()=>setShowClose(true)} onMouseOut={()=>setShowClose(false)}>\n                {item} <div style={{position: 'relative'}}><img src={Close} onClick={(e) => removeTag(i, e)} width={15} alt='' className={drp.close} style={{visibility: showClose ? 'visible' : 'hidden'}}></img></div>\n            </li>\n       // }\n    )\n\n    const dropdownList = options.map((option, i) =>\n        <li key={i} onClick={selectOption} style={{color: `${option.color}`}}>{option.label}</li>\n    )\n\n    const wrapperRef = useRef(null);\n\n    useEffect(() => {\n        /**\n         * Alert if clicked on outside of element\n         */\n        function handleClickOutside(event) {\n          if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n            //alert(\"You clicked outside of me!\");\n            setMenuShow(false)\n            event.stopPropagation();\n          }\n        }\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n          // Unbind the event listener on clean up\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [wrapperRef ]);\n\n    return (\n        <div className={drp.dropdown} ref={wrapperRef}>\n            <ul onClick={()=>setMenuShow(!menuShow)} className={`${drp.speclist}`} style={{width: widthStyle}}>\n                {specList}\n            </ul>\n\n            <ul className={`${drp.menu} ${menuShow && drp.menuOpen}`} style={{display: menuShow ? 'block' : 'none', listStyle: 'disc', padding: '0.2em 2.0em'}}>\n                {dropdownList}\n            </ul>\n        </div>\n    );\n};\n\nexport default Dropdown2;","import {$authHost, $host} from \"./index\";\n\nexport const getPlatforms = async () =>{\n    try {\n       let response = await $host.get('api/platforms/get');\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getCompany api\", error.message);\n    }\n}\n\nexport const getPlatformId = async (id) =>{\n    try {\n       let response = await $host.get(`api/platforms/${id}`);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getProjectId api\", error.message);\n    }\n}\n\nexport const getPlatformCount = async (count, prev) =>{\n    try {\n       let response = await $host.get(`api/platforms/count/get/${count}/${prev}`);\n       return response.data;\n    } catch (error) {\n        console.log(\"error while calling getCompanyCount api\", error.message);\n    }\n}\n\nexport const editPlatform = async (data, id) =>{\n    try {\n        await $host.patch(`api/platforms/update/${id}`, data); \n    } catch (error) {\n        console.log(\"error while calling editPlatform api\",error.message);\n    }\n}\n\nexport const addPlatform = async (data) =>{\n    try {\n        let response = await $host.post(`api/platforms/add`, data); \n        return response.data;\n    } catch (error) {\n        console.log(\"error while calling addCompany api\",error.message);\n    }\n}\n\nexport const deletePlatform = async (id) =>{\n    try {\n        await $host.get(`api/platforms/delete/${id}`); \n    } catch (error) {\n        console.log(\"error while calling deleteCompany api\",error.message);\n    }\n}\n\n\nexport const getPlatformCountAll = async () =>{\n    try {\n        let response = await $host.get(`api/platforms/count/get`); \n        return response.data; \n    } catch (error) {\n        console.log(\"error while calling getCompanyCountAll api\",error.message);\n    }\n}\n\n//file\nexport const uploadAvatar = async (data) =>{\n    try {\n        return await $host.post(`api/file/avatar`, data, {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        });\n    } catch (error) {\n        console.log(\"error while calling uploadFile api\",error.message);\n        \n    }\n}","import React, { Suspense, useState, useEffect } from 'react'\nimport { \n  CContainer, \n  CSpinner, \n  CCol,\n  CRow,\n  CFormInput,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CCard,\n  CCardBody,\n  CCollapse,\n  CButton, \n  CTooltip,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n  CFormSelect,\n  CToast, \n  CToastBody,\n  CToastClose,\n  CToaster,\n } from '@coreui/react'\n// import Icon from \"./../chat-app-worker/components/Icon\";\nimport { AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nimport { useUsersContext } from \"../chat-app-new/context/usersContext\";\n\nimport Autocomplete from '@mui/material/Autocomplete';\nimport DatePicker from \"react-datepicker\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport InputMask from 'react-input-mask';\n\nimport MyDropdown from 'src/components/Dropdown/Dropdown';\nimport MyDropdown2 from 'src/components/Dropdown2/Dropdown2';\nimport MyDropdown4 from 'src/components/Dropdown4/Dropdown4';\nimport MyDropdown5 from 'src/components/Dropdown5/Dropdown5';\nimport MyDropdown6 from 'src/components/Dropdown6/Dropdown6';\n\nimport Close from \"../assets/images/clear.svg\"\nimport zamok from \"../assets/images/замок.png\"\nimport zamok2 from \"../assets/images/замок2.png\"\nimport addAvatar from \"../assets/images/add_avatar.png\"\nimport Krestik from './../assets/images/krestik.png';\nimport imgBlock18 from \"./../assets/images/block18.png\";\nimport Trubka from \"./../assets/images/trubka.png\";\nimport Tg from \"./../assets/images/tg.png\";\nimport Star from \"./../assets/images/star.png\";\nimport StarActive from \"./../assets/images/star_activ.svg\";\nimport Disketa from \"./../assets/images/disketa.png\";\nimport arrowDown from 'src/assets/images/arrowDown.svg'\nimport threeDots from 'src/assets/images/three-dots.svg'\n\nimport statusData from 'src/data/statusData';\nimport cities from 'src/data/cities';\nimport specifikaData from 'src/data/specifikaData';\nimport vids from 'src/data/vids';\nimport comtegs from 'src/data/comtegs';\nimport specOnlyData2 from 'src/data/specOnlyData2';\n\nimport { getProjectsDel, editProject } from '../http/projectAPI'\nimport { useAsyncError } from 'react-router-dom';\nimport Filters from 'src/components/table/Filters2'\nimport { getPlatforms, getPlatformId, editPlatform, getPlatformCount, addPlatform, deletePlatform } from 'src/http/platformAPI';\n\nconst Platforms = () => {\n  const { platforms, setPlatforms, platformsAll, setPlatformsAll } = useUsersContext();\n\n  const [platformCount, setPlatformCount] = useState([]);\n\n  const [projects, setProjects] = useState([])\n  const [showProject, setShowProject] = useState(false)\n\n  const [loading, setLoading]= useState(true);\n  const [text, setText]= useState(\"\");\n  //const [spec, setSpec] = useState([]); \n  const [visibleSm, setVisibleSm] = useState(false)\n  const [modalWorker, setModalWorker] = useState({})\n  const [showProfile, setShowProfile] = useState(false)\n  const [showSpec, setShowSpec] = useState(false)\n  const [showClose, setShowClose] = useState(false)\n  const [showUpload, setShowUpload] = useState(false)\n  const [showSearch, setShowSearch] = useState(true)\n  const [showClear, setShowClear] = useState(false)\n  const [showMenuBlock18, setShowMenuBlock18] = useState(false)\n  const [showBlock18, setShowBlock18] = useState(false)\n  const [block18, setBlock18] = useState(false)\n  const [blockW, setBlockW] = useState(false)\n  const [showMenuKrest, setShowMenuKrest] = useState(false)\n  const [showKrest, setShowKrest] = useState(false)\n  \n  const [cityValue, setCityValue] = useState(0)\n  \n  const [showSave, setShowSave] = useState(false)\n  const [showSave2, setShowSave2] = useState(false)\n  const [showSave3, setShowSave3] = useState(false)\n\n  const [showSaveAddress, setShowSaveAddress] = useState(false)\n  const [showSaveTrack, setShowSaveTrack] = useState(false)\n  const [showSaveUrl, setShowSaveUrl] = useState(false)\n\n  const [id, setId] = useState('');\n  const [title, setTitle] = useState('');\n  const [city, setCity] = useState('');\n  const [address, setAddress] = useState('');\n  const [track, setTrack] = useState('');\n  const [url, setUrl] = useState('');\n  const [comment, setComment] = useState('');\n\n  const [blockProfile, setBlockProfile] = useState(true)\n  const [showBlacklist, setShowBlacklist] = useState(false)\n  const [showMenu1, setShowMenu1] = useState(false)\n  const [showMenu2, setShowMenu2] = useState(false)\n  const [showClearCity, setShowClearCity] = useState(false)\n\n  const [visibleDelete, setVisibleDelete] = useState(false)\n  const [showModal, setShowModal] = useState(false)\n\n  const [file, setFile] = useState(0);\n  const [filePreview, setFilePreview] = useState('');\n  const [image, setImage]= useState(\"\");\n\n  const [height, setHeight] = useState(600)\n  const [sortedCities, setSortedCities] = useState([])\n\n  const [countPress, setCountPress] = useState(0);\n  const [countPressAddress, setCountPressAddress] = useState(0);\n  const [countPressCity, setCountPressCity] = useState(0);\n\n\n    //поиск\n  useEffect(() => {\n    const filteredData = platformsAll.filter(user=> (user.title)?.replace(/[её]/g, '(е|ё)').toLowerCase().includes(text.replace(/[её]/g, '(е|ё)').toLowerCase()));\n    setPlatforms(text === '' ? platformCount : filteredData); \n  \n    //setSpecialistsCount(text === '' ? specialistAll.length : filteredData.length)\n    //console.log(\"specialist\", specialist)\n    setShowClear(text === '' ? false : true)\n  }, [text]);\n\n  useEffect(()=> {\n    // сортировка городов\n    const newCities = cities.map((item)=> { \n      const newArr = item.label\n      return newArr\n    })\n    const one = [...newCities].slice(0, 4)\n    const city = [...newCities].slice(5)\n    const sorted = city.sort((a, b) => {       \n      var cityA = a, cityB = b\n      return (cityA < cityB) ? -1 : (cityA > cityB) ? 1 : 0;  //сортировка по возрастанию \n    })\n    const newSorted = [...one, ...city]\n    setSortedCities(newSorted)\n\n    //1\n    const fetchData = async() => {\n\n      // 2 специалисты 20 чел.\n      let response = await getPlatformCount(20, platforms.length)\n      console.log(\"platforms: \", response)\n\n      let arrWorkers = []\n\n      response.map(async (platform, i) => {\n        const d = new Date(platform.createdAt).getTime() //+ 10800000 //Текущая дата:  + 3 часа)\n        const d2 = new Date(d)\n        const month = String(d2.getMonth()+1).padStart(2, \"0\");\n        const day = String(d2.getDate()).padStart(2, \"0\");\n        const chas = d2.getHours();\n        const min = String(d2.getMinutes()).padStart(2, \"0\");\n        const newDate = `${day}.${month} ${chas}:${min}`;\n\n\n        const newPlatform = {\n          id: platform.id,\n          title: platform.title,\n          city: platform.city,  \n          address: platform.address,\n          track: platform.track,\n          url: platform.url,\n          comment: platform.comment, \n          createdAt: platform.createdAt,\n        }\n        arrWorkers.push(newPlatform)\n\n        //если элемент массива последний\n\t\t\t\tif (i === response.length-1) {\n          const sortedWorker = [...arrWorkers].sort((a, b) => {           \n              let titleA = a.title \n              let titleB = b.title\n              // return titleB-titleA  //сортировка по возрастанию \n              if (titleA.toLowerCase() < titleB.toLowerCase()) {\n                return -1;\n              }\n              if (titleA.toLowerCase() > titleB.toLowerCase()) {\n                return 1;\n              }\n              return 0;\n          })\n\n\t\t\t\t\tsetPlatformCount(sortedWorker)\n          setPlatforms(sortedWorker)\n\t\t\t\t\t\n\t\t\t\t\t//сохранить кэш\n\t\t\t\t\t//localStorage.setItem(\"specialist\", JSON.stringify(sortedWorker));\n\t\t\t\t}\n\n      })  \n\n      setLoading(false)\n\n      // let wuserbots = await getWContacts();\n      // console.log(\"wuserbots: \", wuserbots)\n      // setUserbots(wuserbots) \n    }\n\n    fetchData()\n    \n}, [])\n\nconst openPlatform = (resPlatform) => {\n  console.log(\"resPlatform: \", resPlatform)\n  console.log(\"id: \", resPlatform.id)\n\n  setShowProfile(true)\n  setShowSearch(false)\n  setShowClear(false)\n\n  setId(resPlatform.id)\n\n  if (resPlatform) {\n    setTitle(resPlatform.title)\n    setCity(resPlatform.city !== null ? resPlatform.city : '')\n    setAddress(resPlatform.address)\n    setTrack(resPlatform.track)\n    setUrl(resPlatform.url)\n    setComment(resPlatform.comment)\n  }\n  \n  \n\n  setTimeout(()=> {\n    setHeight(509)\n  }, 200)\n  \n}\n\n\n //сохранить профиль\n const savePlatforma = async() => { \n  console.log(\"id: \", id)\n\n  const saveData = {   \n    title, \n    city,\n    address,\n    track,\n    url,\n    comment,\n  }\n  console.log(\"saveData: \", saveData)\n\n  setPlatforms((platforms) => {\t\n  \n    let userIndex = platformsAll.findIndex((plat) => plat.id === id);\n    const usersCopy = JSON.parse(JSON.stringify(platformsAll));\n\n    const userObject = usersCopy[userIndex];\n    usersCopy[userIndex] = { ...userObject, \n      title, \n      city,\n      address,\n      track,\n      url,\n      comment,\n    };\n\n    console.log(\"update user: \", usersCopy[userIndex])\n\n    return usersCopy;\n  });\n\n  //сохранить изменения в базе\n  await editPlatform(saveData, id)\n\n  //Toast\n  setShowModal(true)\n  //addToast(exampleToast) //ваши данные сохранены\n\n  setTimeout(()=> {\n    setShowModal(false)\n    closeProfile()\n  }, 500)\n \n}\n\n\nconst closeProfile = () => {\n  setShowProfile(false)\n  setShowClose(false)\n  setShowSearch(true)\n\n  setShowClear(true)\n  //setFilePreview('')\n  //setCityValue(0)\n}\n\nconst onChangeReyting = () => {\n  setShowBlacklist(false)\n  setShowMenu2(false)\n\n  //убрать из списка специальностей Blacklist\n  // const res = speclist.filter(item=>item !== 'Blacklist')\n  // console.log(\"speclist: \", res)\n\n  // setSpeclist(res)\n}\n\nconst onChangeBlacklist = () => {\n  setShowBlacklist(true)\n  setShowMenu1(false)\n\n  //добавить в список специальностей Blacklist\n  // speclist.push('Blacklist')\n  // console.log(\"speclist: \", speclist)\n\n  // setSpeclist(speclist)\n}\n\nconst onChangeBlock18 = () => {\n  setShowBlock18(!showBlock18)\n  setShowMenuBlock18(false)\n  setBlock18(!block18)\n}  \n\nconst onChangeKrest = () => {\n  setShowKrest(!showKrest)\n  setShowMenuKrest(false)\n  setBlockW(!blockW)\n} \n\n{/* Добавление файла */}\nconst onFileChange = (e) => {\n  setFile(e.target.files[0]);\n  setFilePreview(URL.createObjectURL(e.target.files[0]));\n}\n\nconst clickSearch = (e) => {\n  setShowClear(true)\n  setText(e.target.value)\n}\n\nconst clearSearch = () => {\n  setText('')\n}\n\nconst clickAdd = async()=> {   \n\n  const data = {\n    title: 'Новая площадка',\n  }\n  \n  const res = await addPlatform(data)\n\n\n  platforms.push(\n    {\n      id: res?.id, \n      title: res?.title, \n      city: '',\n      address: '',\n      track: '',  \n      url: '', \n      karta: '', \n      comment: '', \n  })\n\n  const sortedUser = [...platforms].sort((a, b) => {       \n    var idA = a.id, idB = b.id \n    return idB-idA  //сортировка по возрастанию \n  })\n\n  setPlatforms(sortedUser)\n}\n\n//ЕЩЁ\nconst clickNext = async() => {\n  //1 все платформы\n  let response = await getPlatformCount(20, platforms.length);\n  console.log(\"platforms size: \", response)\n\n  const arrayWorker = []\n  \n    response.reverse().map(async (platform) => {\n      const d = new Date(platform.createdAt).getTime() //+ 10800000 //Текущая дата:  + 3 часа)\n      const d2 = new Date(d)\n\n      const month = String(d2.getMonth()+1).padStart(2, \"0\");\n      const day = String(d2.getDate()).padStart(2, \"0\");\n      const chas = d2.getHours();\n      const min = String(d2.getMinutes()).padStart(2, \"0\");\n      \n      const newDate = `${day}.${month} ${chas}:${min}`; \n\n      const newPlatform = {\n        id: platform.id,\n        title: platform.title,\n        city: platform.city,  \n        address: platform.address,\n        track: platform.track,\n        url: platform.url,\n        comment: platform.comment, \n        createdAt: platform.createdAt,\n      }\n  \n      arrayWorker.push(newPlatform)\n    })    \n\n    \n    const sortedWorker = [...arrayWorker].sort((a, b) => {       \n      let titleA = a.title \n\t\t\tlet titleB = b.title\n\t\t\t// return titleB-titleA  //сортировка по возрастанию \n\t\t\tif (titleA.toLowerCase() < titleB.toLowerCase()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (titleA.toLowerCase() > titleB.toLowerCase()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 0;\n    })\n    \n    setPlatforms(sortedWorker)\n\n    setPlatformCount(sortedWorker)\n}\n\n\n//сортировка по ФИО\nconst onSortTitle = () => {\n  setCountPress(countPress + 1)\n  \n  if (countPress + 1 >= 3) {\n    setCountPress(0)\n  }\n  console.log(\"check sort\", countPress + 1)\n\n  if (countPress + 1 === 1) {\n    const sortedWorker = [...platforms].sort((a, b) => {       \n      var fioA = a.title.toUpperCase(), fioB = b.title.toUpperCase(); \n      return (fioA < fioB) ? -1 : (fioA > fioB) ? 1 : 0;  //сортировка по возрастанию \n    })\n    setPlatforms(sortedWorker)\n  } else if (countPress + 1 === 2) {\n    const sortedWorker = [...platforms].sort((a, b) => {       \n      var fioA = a.title.toUpperCase(), fioB = b.title.toUpperCase(); \n      return (fioA > fioB) ? -1 : (fioA < fioB) ? 1 : 0;  //сортировка по возрастанию \n    })\n    setPlatforms(sortedWorker)\n  } else {\n    const sortedWorker = [...platforms].sort((a, b) => {       \n      var fioA = a.id, fioB = b.id \n      return fioB-fioA  //сортировка по убыванию \n    })\n    setPlatforms(sortedWorker)\n  }\n  \n}\n\n//сортировка по Городу\nconst onSortCity = () => {\n  setCountPressCity(countPressCity + 1)\n  \n  if (countPressCity + 1 >= 3) {\n    setCountPressCity(0)\n  }\n  //console.log(\"check sort\", countPressTG + 1)\n\n  if (countPressCity + 1 === 1) {\n    const sortedWorker = [...platforms].sort((a, b) => {      \n      var cityA = a.city ? a.city.toUpperCase() : ''\n      var cityB = b.city ? b.city.toUpperCase() : ''\n      return (cityA < cityB) ? -1 : (cityA > cityB) ? 1 : 0;  //сортировка по возрастанию \n    })\n    setPlatforms(sortedWorker)\n  } else if (countPressCity + 1 === 2) {\n    const sortedWorker = [...platforms].sort((a, b) => {       \n      var cityA = a.city ? a.city.toUpperCase() : ''\n      var cityB = b.city ? b.city.toUpperCase() : ''\n      return (cityA > cityB) ? -1 : (cityA < cityB) ? 1 : 0;  //сортировка по возрастанию \n    })\n    setPlatforms(sortedWorker)\n  } else {\n    const sortedWorker = [...platforms].sort((a, b) => {       \n      var idA = a.id, idB = b.id \n      return idB-idA  //сортировка по убыванию \n    })\n\n    //setSpecialistCount(sortedWorker)\n    setPlatforms(sortedWorker)\n  }\n  \n}\n\n//сортировка по адресу\nconst onSortAddress = () => {\n  setCountPressAddress(countPressAddress + 1)\n  \n  if (countPressAddress + 1 >= 3) {\n    setCountPressAddress(0)\n  }\n  //console.log(\"check sort\", countPressTG + 1)\n\n  if (countPressAddress + 1 === 1) {\n    const sortedWorker = [...platforms].sort((a, b) => {       \n      var cityA = a.address, cityB = b.address\n      return (cityA < cityB) ? -1 : (cityA > cityB) ? 1 : 0;  //сортировка по возрастанию \n    })\n    setPlatforms(sortedWorker)\n  } else if (countPressAddress + 1 === 2) {\n    const sortedWorker = [...platforms].sort((a, b) => {       \n      var cityA = a.address, cityB = b.address\n      return (cityA > cityB) ? -1 : (cityA < cityB) ? 1 : 0;  //сортировка по возрастанию \n    })\n    setPlatforms(sortedWorker)\n  } else {\n    const sortedWorker = [...platforms].sort((a, b) => {       \n      var idA = a.id, idB = b.id \n      return idB-idA  //сортировка по убыванию \n    })\n\n    //setSpecialistCount(sortedWorker)\n    setPlatforms(sortedWorker)\n  } \n}\n\n  const clickDelete = (id) => {\n    console.log(id)\n\n    setVisibleDelete(!visibleDelete)\n\n  }\n\n  //удаление платформы\n  const deleteProfile = async(id) => {\n    console.log(id)\n    setVisibleDelete(false)\n\n    //удаление платформы из БД\n    await deletePlatform(id)\n\n\n    //addToast(deleteToast) //ваши данные сохранены\n\n    setPlatforms([...platforms].filter(item=>item.id !== id))\n\n    closeProfile()\n  }\n\n  return (\n    <div className='dark-theme'>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-uley\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n\n            <CContainer lg>\n                <Suspense fallback={<CSpinner color=\"primary\" />}>\n                    {/* <h2>Площадки</h2> */}\n                    <CRow className=\"mb-3\">\n                      <CCol sm={3} style={{position: 'relative'}}>\n                        <CFormInput \n                          placeholder=\"Поиск...\" \n                          onChange={(e)=>clickSearch(e)} \n                          aria-label=\"spec\"\n                          value={text}\n                          style={{display: showSearch ? 'block' : 'none'}}\n                        >   \n                        </CFormInput>\n                        <img src={Close} alt='' onClick={clearSearch} width={10} style={{display: showClear ? 'block' : 'none', position: 'absolute', top: '15px', right: '20px'}}/>\n                      </CCol>\n                      <CCol>\n                        <CButton onClick={clickAdd} className='uley_add_user' style={{display: showSearch ? 'block' : 'none'}}>\n                          <span style={{position: 'absolute', top: '-12px', left: '6px', fontSize: '36px', color: '#2d2e38'}}>\n                          +</span>\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                    <CCard className=\"mb-4\">\n                      <p style={{position: 'absolute', top: '-18px', right: '15px', fontSize: '14px', color: '#f3f3f3'}}>\n                        Всего: {platformsAll.length}\n                      </p>\n                      <CCardBody style={{padding: '12px'}}>\n                        {/* {!showProject ? <Filters /> : '' } */}\n                        {!showProfile ? \n                        \n                        (loading ?                                      \n                          <CSpinner/> :\n                          <CTable align=\"middle\" className=\"mb-0 border\" hover responsive style={{fontSize: '16px',overflow: 'hidden', width: '1400px', borderRadius: '5px' }}>\n                            <CTableHead className=\"text-center\" color=\"light\">\n                                    <CTableRow>\n                                      <CTableHeaderCell className=\"text-center\" style={{width: '61px'}}>№</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{width: '270px', cursor: 'pointer'}} onClick={onSortTitle}>Название</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '150px', cursor: 'pointer'}} onClick={onSortCity}>Город</CTableHeaderCell>  \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '250px', cursor: 'pointer'}} onClick={onSortAddress}>Адрес</CTableHeaderCell>\n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '265px'}}>Как добраться</CTableHeaderCell> \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '250px'}}>Ссылка</CTableHeaderCell>                      \n                                      <CTableHeaderCell className=\"text-center\" style={{minWidth: '170px'}}>Карта</CTableHeaderCell>\n                                    </CTableRow>\n                                  </CTableHead>      \n                                  <CTableBody> \n                                  { platforms.map((item, index)=> ( \n                                      <CTableRow key={item.id}  v-for=\"item in tableItems\" style={{lineHeight: '14px'}}>\n                                        <CTableDataCell className=\"text-center\" style={{position: 'relative'}}>\n                                          {index+1}                        \n                                        </CTableDataCell> \n                                        <CTableDataCell onClick={()=>openPlatform(item)} style={{cursor: 'pointer'}}>\n                                          {item.title && item.title.length > 25 ? item.title.substr(0, 25) + '...' : item.title}  \n                                        </CTableDataCell>  \n                                        <CTableDataCell className=\"text-center\">\n                                          {item.city} \n                                        </CTableDataCell>   \n                                        <CTableDataCell className=\"text-center\">\n                                          {item.address && item.address.length > 25 ? item.address.substr(0, 25) + '...' : item.address} \n                                        </CTableDataCell> \n                                        <CTableDataCell className=\"text-center\" style={{padding: '0px 5px'}}>\n                                          {item.track && item.track.length > 25 ? item.track.substr(0, 25) + '...' : item.track} \n                                        </CTableDataCell>\n                                        <CTableDataCell className=\"text-center widthSpace\">\n                                          {item.url && item.url.length > 20 ? item.url.substr(0, 20) + '...' : item.url} \n                                        </CTableDataCell>   \n                                        <CTableDataCell className=\"text-center\">\n                                          {item.karta} \n                                        </CTableDataCell>            \n                                      </CTableRow>\n                                    ))\n                                  }  \n                                  </CTableBody>                   \n                          </CTable> \n                        )\n                        :\n                        <div style={{position: 'relative', height: '448px', display: 'flex', flexDirection: 'row'}}>\n                                <div style={{display: 'flex', flexDirection: 'column', width: '250px'}} onMouseOver={()=>setShowUpload(true)} onMouseOut={()=>setShowUpload(false)}>\n                                  {/* {\n                                    profile ? \n                                  <img src={profile} width='250px' height='250px' alt='poster' style={{borderRadius: '7px', marginBottom: '5px'}}/>\n                                  :  */}\n                                  <svg className=\"rounded me-2\" width=\"250\" height=\"250\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\" style={{float:'left', margin: '4px 10px 2px 0px'}}>\n                                    <rect width=\"250px\" height=\"250px\" fill=\"#007aff\" rx=\"40\"></rect> \n                                  </svg>\n                                  \n                                  {/* } */}\n                                  <div className=\"file-upload\" style={{marginBottom: '8px'}}>\n                                    <img src={addAvatar} alt=\"upload\" style={{display: showUpload ? 'block' : 'none', position: 'absolute', top: '100px', left: '100px', cursor: 'pointer', width: '50px', height: '50px'}}/>\n                                    <input \n                                      type=\"file\"\n                                      id=\"formFile\" \n                                      accept=\"image/*,image/jpeg\" \n                                      name=\"photo\"\n                                      onChange={(e) => onFileChange(e)}\n                                      style={{position: 'absolute', top: '130px', left: '10px', opacity: '0', zIndex: '100', width: '230px'}}\n                                    />\n                                  </div>\n\n                                  <div className=\"menu-reyting\">\n                                      <div style={{width: '250px', display: 'flex', justifyContent: 'center'}}>\n                                        {showBlacklist ?\n                                        <span onClick={()=>setShowMenu2(true)} style={{cursor: 'pointer', color: 'red', fontSize: '24px', fontWeight: '700', marginBottom: '3px'}}>Blacklist</span>\n                                        :<div className=\"star-block\" style={{cursor: 'pointer', marginBottom: '8px'}} onClick={()=>setShowMenu1(true)}>\n                                          <img className='star-icon' src={StarActive} alt='' /> \n                                          <img className='star-icon' src={StarActive} alt='' />\n                                          <img className='star-icon' src={StarActive} alt='' />\n                                          <img className='star-icon' src={Star} alt='' />\n                                          <img className='star-icon' src={Star} alt='' />\n                                        </div>\n                                        }\n                                      </div>\n                                      <div className=\"menu-content\" style={{display: showMenu1 ? 'block' : 'none'}}>\n                                          <span>Изменить рейтинг</span>\n                                          <span onClick={onChangeBlacklist} style={{cursor: 'pointer'}}>Blacklist</span>\n                                      </div>\n                                      <div className=\"menu-content\" style={{display: showMenu2 ? 'block' : 'none'}}>\n                                          <span>Изменить рейтинг</span>\n                                          <span onClick={onChangeReyting} style={{cursor: 'pointer'}}>Рейтинг</span>\n                                      </div>\n                                  </div>\n                                  \n                                </div>\n                                  <img src={imgBlock18} className=\"block-img\"  width={50} alt='' style={{position: 'absolute', top: '0px', left: '195px', opacity: block18 ? '1' : '0' }}/>                                 \n                                  <div className=\"menu-content-block\">\n                                    <span onClick={onChangeBlock18} style={{cursor: 'pointer'}}>{block18 ? 'Убрать' : 'Добавить'} 18+</span>\n                                  </div>\n                                  \n                                  <img src={Krestik} width={25} alt='' style={{position: 'absolute', top: '215px', left: '215px', opacity: blockW ? '1' : '0' }}/>\n                                  <div className=\"menu-content-krest\">\n                                    <span onClick={onChangeKrest} style={{cursor: 'pointer'}}>{blockW ? 'Убрать' : 'Добавить'}</span>\n                                  </div>\n\n                                  {/* ФИО */}\n                                  <div style={{position: 'absolute', top: '5px', left: '286px', color: '#fff', zIndex: '100', display: 'flex', justifyContent: 'space-between', width: '-webkit-fill-available'}}>   \n                                    <div className=\"text-field\">\n                                      <input type=\"text\" name=\"title\" id=\"title\" value={title} onChange={(e)=>setTitle(e.target.value)} style={{fontSize: '33px', position: 'absolute', top: '-17px', backgroundColor: 'transparent', border: '0', color: '#f3f3f3', width: '600px'}}></input>\n                                    </div>\n                                    <div style={{display: 'flex'}}>\n                                      {/* <Icon id=\"delete\" onClick={()=>clickDelete(id)} /> */}\n                                      <img src={Trubka} style={{cursor: 'pointer', width: '24px', height: '24px', marginLeft: '20px'}}/>\n                                      <img src={Tg} style={{cursor: 'pointer', width: '24px', height: '24px', marginLeft: '20px'}}/>\n                                      <img src={blockProfile ? zamok : zamok2} style={{cursor: 'pointer', width: '19px', height: '24px', marginLeft: '20px'}}/>\n                                      <img src={Disketa} onClick={savePlatforma} style={{cursor: 'pointer', width: '24px', height: '24px', marginLeft: '20px'}}/>\n                                      <img src={Close} onClick={closeProfile} style={{display: showClose ? 'block' : 'block', cursor: 'pointer', width: '19px', height: '24px', marginLeft: '20px'}}/>  \n                                    </div>\n                                  </div>\n                                      {/* 2 */}\n                                <div style={{ textAlign: 'center', marginLeft: '40px', marginTop: '70px', display: 'flex', flexDirection: 'column', width: '100%', position: 'relative'}}>\n                                  <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                                    {/* Город */}\n                                    <label className='title-label' style={{position: 'absolute', top: '-25px', left: '100px'}}>Город</label>\n                                    <div className=\"text-field\" onMouseOver={()=>setShowClearCity(true)} onMouseOut={()=>setShowClearCity(false)} style={{position: 'relative', marginRight: '40px', width: '250px'}}> \n                                        {/* <CFormSelect \n                                          aria-label=\"Default select example\"\n                                          style={{backgroundColor: '#131c21'}}\n                                          options={sortedCities}\n                                        />\n                                        <img src={Close} width={15} alt='' style={{position: 'absolute', top: '13px', right: '15px', visibility: showClearCity ? 'visible' : 'hidden', cursor: 'pointer'}}></img> */}\n                                        <Autocomplete\n                                              sx={{\n                                                  display: 'inline-block',\n                                                  '& input': {zIndex: '25',\n                                                      width: '100%',\n                                                      border: 'none',\n                                                      height: '40px',\n                                                      padding: '5px 4px',\n                                                      fontFamily: 'inherit',\n                                                      fontSize: '14px',\n                                                      fontWeight: '700',\n                                                      lineHeight: '1.5',\n                                                      textAlign: 'center',\n                                                      color: '#ffffff',\n                                                      backgroundColor: 'transparent', \n                                                  }\n                                              }}\n                                              className=\"text-field__input\" \n                                              openOnFocus\n                                              id=\"custom-input-demo\"\n                                              options={sortedCities}\n                                              style={{width: '100%', padding: '0'}}\n                                              isOptionEqualToValue={(option, value) => option.value === value.value}\n                                              onInputChange={(e)=>setCity(e.target.value)}\n                                              onChange={(event, newValue) => {\n                                                if (newValue && newValue.length) {                                                      \n                                                  setCity(newValue)\n                                                }  \n                                              }}\n                                              value={city} \n                                              inputValue={city}\n                                              renderInput={(params) => (\n                                              <div ref={params.InputProps.ref} style={{position: 'relative'}}>\n                                                  <input \n                                                      className=\"text-field__input\" \n                                                      type=\"text\" {...params.inputProps} \n                                                      placeholder=''\n                                                  />\n                                              </div>\n                                              )}\n                                        />\n                                    </div>\n\n                                    <div className=\"text-field\" style={{marginRight: '40px'}}>\n                                      <input disabled className=\"text-field__input\" type=\"text\" />\n                                    </div> \n\n                                    <div className=\"text-field\" >\n                                      <input disabled className=\"text-field__input\" type=\"text\" />\n                                    </div> \n                                  </div>\n                                  \n                                  \n\n                                  <label className='title-label'>Адрес</label>\n                                  <div className=\"text-field\" onMouseOver={()=>setShowSaveAddress(true)} onMouseOut={()=>setShowSaveAddress(false)}>\n                                    <img \n                                      src={Disketa} \n                                      onClick={()=>{navigator.clipboard.writeText(address)}} \n                                      alt=\"\" \n                                      style={{visibility: showSaveAddress ? 'visible' : 'hidden', position: 'absolute', top: '10px', right: '15px', cursor: 'pointer', width: '20px', height: '20px'}}\n                                    />\n                                    <input disabled={false} className=\"text-field__input\" type=\"text\" name=\"address\" id=\"address\" value={address} onChange={(e)=>setAddress(e.target.value)} />\n                                  </div> \n\n                                  <label className='title-label'>Как добраться</label>\n                                  <div className=\"text-field\" onMouseOver={()=>setShowSaveTrack(true)} onMouseOut={()=>setShowSaveTrack(false)}>\n                                    <img \n                                      src={Disketa} \n                                      onClick={()=>{navigator.clipboard.writeText(track)}} \n                                      alt=\"\" \n                                      style={{visibility: showSaveTrack ? 'visible' : 'hidden', position: 'absolute', top: '10px', right: '15px', cursor: 'pointer', width: '20px', height: '20px'}}\n                                    />\n                                    <input disabled={false} className=\"text-field__input\" type=\"text\" name=\"track\" id=\"track\" value={track} onChange={(e)=>setTrack(e.target.value)}/>\n                                  </div> \n\n                                  <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                                    <div style={{ display: 'flex', flexDirection: 'column', width: '50%', marginRight: '40px'}}>\n                                      <label className='title-label'>Ссылка на карту</label>\n                                      <div className=\"text-field\" onMouseOver={()=>setShowSaveUrl(true)} onMouseOut={()=>setShowSaveUrl(false)}>\n                                        <img \n                                          src={Disketa} \n                                          onClick={()=>{navigator.clipboard.writeText(url)}} \n                                          alt=\"\" \n                                          style={{visibility: showSaveUrl ? 'visible' : 'hidden', position: 'absolute', top: '10px', right: '15px', cursor: 'pointer', width: '20px', height: '20px'}}\n                                        />\n                                        <input disabled={false} className=\"text-field__input\" type=\"text\" name=\"url\" id=\"url\" value={url} onChange={(e)=>setUrl(e.target.value)}/>\n                                      </div> \n\n                                      <label className='title-label'>Карта</label>\n                                      <div className=\"text-field\">\n                                        <input disabled className=\"text-field__input\" type=\"text\" />\n                                      </div> \n                                    </div>\n\n                                    <div style={{width: '50%'}}>\n                                      <label className='title-label'>Комментарии</label>\n                                      <div className=\"text-field\" style={{marginBottom: '0px'}}>\n                                        <textarea \n                                          className=\"text-field__input\" \n                                          type=\"text\" \n                                          name=\"comment2\" \n                                          id=\"comment2\" \n                                          value={comment} onChange={(e) => setComment(e.target.value)} \n                                          style={{resize: 'none', height: '125px', whiteSpace: 'pre-line', borderRadius: '6px', textAlign: 'left'}}/>\n                                      </div> \n                                    </div>\n                                    \n                                  </div>\n\n                                  \n\n                                </div>\n\n{/* 4 */}\n                                <div style={{ textAlign: 'center', marginLeft: '40px', marginTop: '46px', display: 'flex', flexDirection: 'column', width: '250px', position: 'relative'}}>\n\n                                  <label className='title-label'>Проекты</label>\n                                  <div className=\"text-field\" style={{marginBottom: '0px'}}>\n                                    <ul className='spec-style' style={{width: '250px', height: '378px', whiteSpace: 'pre-line', borderRadius: '6px', textAlign: 'left'}}>\n                                    \n                                    </ul>\n                                  </div> \n                                </div>\n\n                        </div>\n                        }  \n                      </CCardBody>\n\n                      <div style={{display: 'flex', justifyContent: 'center' }}>\n                        <img src={arrowDown} alt='' onClick={()=>clickNext()} style={{display: !showProfile ? 'block' : 'none', width: '50px', marginBottom: '15px', cursor: 'pointer'}}></img>\n                      </div> \n                    </CCard>\n\n                    <CModal\n                      alignment=\"center\"\n                      visible={showModal}\n                      onClose={() => setShowModal(false)}\n                      aria-labelledby=\"VerticallyCenteredExample\"\n                    >\n                      <CModalBody style={{height: '100px', textAlign: 'center', fontSize: '18px', paddingTop: '15px'}}>\n                        Данные успешно сохранены!\n                      </CModalBody>\n                    </CModal>\n\n                    <CModal\n                      backdrop=\"static\"\n                      visible={visibleDelete}\n                      onClose={() => setVisibleDelete(false)}\n                      aria-labelledby=\"StaticBackdropExampleLabel\"\n                    >\n                      <CModalHeader>\n                        <CModalTitle id=\"StaticBackdropExampleLabel\">Предупреждение</CModalTitle>\n                      </CModalHeader>\n                                          <CModalBody>\n                                            Площадка будет удалена из базы!\n                                          </CModalBody>\n                                          <CModalFooter>\n                                            <CButton color=\"secondary\" onClick={() => setVisibleDelete(false)}>\n                                              Отмена\n                                            </CButton>\n                                            <CButton color=\"primary\" onClick={()=>deleteProfile(id)}>Удалить</CButton>\n                                          </CModalFooter>                    \n                    </CModal>\n                </Suspense>\n            </CContainer>\n\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default Platforms\n"],"names":["_ref","options","tags","setTags","widthStyle","menuShow","setMenuShow","useState","selected","setSelected","showClose","setShowClose","selectOption","e","find","item","target","innerText","console","log","push","specList","map","i","_jsxs","onMouseOver","onMouseOut","children","_jsx","style","position","src","Close","onClick","index","stopPropagation","filter","el","removeTag","width","alt","className","drp","visibility","dropdownList","option","color","concat","label","wrapperRef","useRef","useEffect","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","ref","display","listStyle","padding","getPlatformCount","async","count","prev","$host","get","data","error","message","Platforms","platforms","setPlatforms","platformsAll","setPlatformsAll","useUsersContext","platformCount","setPlatformCount","projects","setProjects","showProject","setShowProject","loading","setLoading","text","setText","visibleSm","setVisibleSm","modalWorker","setModalWorker","showProfile","setShowProfile","showSpec","setShowSpec","showUpload","setShowUpload","showSearch","setShowSearch","showClear","setShowClear","showMenuBlock18","setShowMenuBlock18","showBlock18","setShowBlock18","block18","setBlock18","blockW","setBlockW","showMenuKrest","setShowMenuKrest","showKrest","setShowKrest","cityValue","setCityValue","showSave","setShowSave","showSave2","setShowSave2","showSave3","setShowSave3","showSaveAddress","setShowSaveAddress","showSaveTrack","setShowSaveTrack","showSaveUrl","setShowSaveUrl","id","setId","title","setTitle","city","setCity","address","setAddress","track","setTrack","url","setUrl","comment","setComment","blockProfile","setBlockProfile","showBlacklist","setShowBlacklist","showMenu1","setShowMenu1","showMenu2","setShowMenu2","showClearCity","setShowClearCity","visibleDelete","setVisibleDelete","showModal","setShowModal","file","setFile","filePreview","setFilePreview","image","setImage","height","setHeight","sortedCities","setSortedCities","countPress","setCountPress","countPressAddress","setCountPressAddress","countPressCity","setCountPressCity","filteredData","user","_user$title","replace","toLowerCase","includes","newCities","cities","one","slice","newSorted","sort","a","b","response","length","arrWorkers","platform","d","Date","createdAt","getTime","d2","month","String","getMonth","padStart","day","getDate","chas","getHours","min","getMinutes","newPlatform","sortedWorker","titleA","titleB","fetchData","closeProfile","deleteProfile","deletePlatform","AppSidebar","AppHeader","CContainer","lg","Suspense","fallback","CSpinner","CRow","CCol","sm","CFormInput","placeholder","onChange","value","clickSearch","clearSearch","top","right","CButton","res","post","addPlatform","karta","sortedUser","idA","left","fontSize","CCard","CCardBody","flexDirection","xmlns","preserveAspectRatio","focusable","role","float","margin","fill","rx","marginBottom","addAvatar","cursor","type","accept","name","files","URL","createObjectURL","onFileChange","opacity","zIndex","justifyContent","fontWeight","StarActive","Star","onChangeBlacklist","onChangeReyting","imgBlock18","onChangeBlock18","Krestik","onChangeKrest","backgroundColor","border","Trubka","marginLeft","Tg","zamok","zamok2","Disketa","saveData","userIndex","findIndex","plat","usersCopy","JSON","parse","stringify","userObject","_objectSpread","patch","editPlatform","setTimeout","textAlign","marginTop","marginRight","Autocomplete","sx","fontFamily","lineHeight","openOnFocus","isOptionEqualToValue","onInputChange","newValue","inputValue","renderInput","params","InputProps","inputProps","disabled","navigator","clipboard","writeText","resize","whiteSpace","borderRadius","CTable","align","hover","responsive","overflow","CTableHead","CTableRow","CTableHeaderCell","onSortTitle","fioA","toUpperCase","fioB","minWidth","onSortCity","cityA","cityB","onSortAddress","CTableBody","CTableDataCell","openPlatform","resPlatform","substr","arrowDown","arrayWorker","reverse","clickNext","CModal","alignment","visible","onClose","CModalBody","paddingTop","backdrop","CModalHeader","CModalTitle","CModalFooter","AppFooter"],"sourceRoot":""}